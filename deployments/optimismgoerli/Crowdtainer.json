{
  "address": "0xee15B65Fe01671C91C3EeB3a6Df129B69D7C45B8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        }
      ],
      "name": "CallerNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotLeaveDueAccumulatedReferralCredits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantClaimFundsOnActiveProject",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ClosingTimeTooEarly",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiredTime",
          "type": "uint256"
        }
      ],
      "name": "CrowdtainerExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "ExceededNumberOfItemsAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMaximumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMinimumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNumberOfQuantities",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum CrowdtainerState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "InvalidOperationFor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProductNumberAndPrices",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "InvalidReferralRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        }
      ],
      "name": "MinimumPurchaseValueForReferralNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinimumTargetHigherThanMaximum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumTargetNotReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "NonceAlreadyUsed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "urls",
          "type": "string[]"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "bytes4",
          "name": "callbackFunction",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "OffchainLookup",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openingTime",
          "type": "uint256"
        }
      ],
      "name": "OpeningTimeNotReachedYet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceTooLow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "PurchaseExceedsMaximumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralDisabledForProvidedCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralInexistent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "ReferralMinimumValueTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralRateNotMultipleOfTwo",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ShippingAgentAddressIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "current",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "SignatureExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenAddressIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserAlreadyJoined",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string[]",
          "name": "newUrls",
          "type": "string[]"
        }
      ],
      "name": "CCIPURLChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "shippingAgent",
          "type": "address"
        }
      ],
      "name": "CrowdtainerCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "shippingAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValueRaised",
          "type": "uint256"
        }
      ],
      "name": "CrowdtainerInDeliveryStage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_targetMinimum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_targetMaximum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "_unitPricePerType",
          "type": "uint256[4]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_referralRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_referralEligibilityValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_legalContractURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "CrowdtainerInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "FundsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "quantities",
          "type": "uint256[4]"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "appliedDiscount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "referralEnabled",
          "type": "bool"
        }
      ],
      "name": "Joined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "Left",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigner",
          "type": "address"
        }
      ],
      "name": "SignerChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "abortProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accumulatedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accumulatedRewardsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crowdtainerState",
      "outputs": [
        {
          "internalType": "enum CrowdtainerState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "discountForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expireTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaidAndDeliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "shippingAgent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "openingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expireTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint256[4]",
              "name": "unitPricePerType",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "referralRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralEligibilityValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "legalContractURI",
              "type": "string"
            }
          ],
          "internalType": "struct CampaignData",
          "name": "_campaignData",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invariant",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint256[4]",
          "name": "_quantities",
          "type": "uint256[4]"
        },
        {
          "internalType": "bool",
          "name": "_enableReferral",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint256[4]",
          "name": "_quantities",
          "type": "uint256[4]"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "joinWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "leave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legalContractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfProducts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralEligibilityValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerOfReferee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_urls",
          "type": "string[]"
        }
      ],
      "name": "setUrls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shippingAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetMaximum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unitPricePerType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "urls",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "usedNonces",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1cfc9e0df7648c630ec52b697155caa1159fb505930090b025100b2fd97047d4",
  "receipt": {
    "to": null,
    "from": "0x83858094EA2c475F1E91e4AC09C64255EaCB0DfF",
    "contractAddress": "0xee15B65Fe01671C91C3EeB3a6Df129B69D7C45B8",
    "transactionIndex": 0,
    "gasUsed": "2817990",
    "logsBloom": "0x
    "blockHash": "0x0c09a72bc3e995257beddd4960ca3aca640e902807875fd4db2789a6b0c5ca7b",
    "transactionHash": "0x1cfc9e0df7648c630ec52b697155caa1159fb505930090b025100b2fd97047d4",
    "logs": [],
    "blockNumber": 1188301,
    "cumulativeGasUsed": "2817990",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 6,
  "solcInputHash": "760bbb4668d6e46c4aba51540e82cbd5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"CallerNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotLeaveDueAccumulatedReferralCredits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantClaimFundsOnActiveProject\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClosingTimeTooEarly\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredTime\",\"type\":\"uint256\"}],\"name\":\"CrowdtainerExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ExceededNumberOfItemsAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaximumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNumberOfQuantities\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum CrowdtainerState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"InvalidOperationFor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProductNumberAndPrices\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"InvalidReferralRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"name\":\"MinimumPurchaseValueForReferralNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumTargetHigherThanMaximum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumTargetNotReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"NonceAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"urls\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunction\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"OffchainLookup\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"}],\"name\":\"OpeningTimeNotReachedYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"PurchaseExceedsMaximumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralDisabledForProvidedCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralInexistent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ReferralMinimumValueTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralRateNotMultipleOfTwo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ShippingAgentAddressIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"current\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expires\",\"type\":\"uint64\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAddressIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyJoined\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string[]\",\"name\":\"newUrls\",\"type\":\"string[]\"}],\"name\":\"CCIPURLChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"}],\"name\":\"CrowdtainerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalValueRaised\",\"type\":\"uint256\"}],\"name\":\"CrowdtainerInDeliveryStage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_openingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetMinimum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetMaximum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"_unitPricePerType\",\"type\":\"uint256[4]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_referralRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_referralEligibilityValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_legalContractURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"CrowdtainerInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"FundsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"quantities\",\"type\":\"uint256[4]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"appliedDiscount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"referralEnabled\",\"type\":\"bool\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"Left\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"SignerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abortProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accumulatedRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crowdtainerState\",\"outputs\":[{\"internalType\":\"enum CrowdtainerState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"discountForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaidAndDeliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"unitPricePerType\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"referralRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralEligibilityValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"legalContractURI\",\"type\":\"string\"}],\"internalType\":\"struct CampaignData\",\"name\":\"_campaignData\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invariant\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256[4]\",\"name\":\"_quantities\",\"type\":\"uint256[4]\"},{\"internalType\":\"bool\",\"name\":\"_enableReferral\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256[4]\",\"name\":\"_quantities\",\"type\":\"uint256[4]\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"joinWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"legalContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfProducts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralEligibilityValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerOfReferee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_urls\",\"type\":\"string[]\"}],\"name\":\"setUrls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shippingAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMaximum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValueRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unitPricePerType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"urls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Crowdtainer.eth\",\"kind\":\"dev\",\"methods\":{\"initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))\":{\"params\":{\"_campaignData\":\"Data defining all rules and values of this Crowdtainer instance.\",\"_owner\":\"The contract owning this Crowdtainer instance, if any (address(0x0) for no owner).\"}},\"join(address,uint256[4])\":{\"details\":\"This method is present to make wallet interactions more friendly, by requiring fewer parameters for projects with referral system disabled.Requires IERC20 permit.\",\"params\":{\"_quantities\":\"Array with the number of units desired for each product.\",\"_wallet\":\"The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\"}},\"join(address,uint256[4],bool,address)\":{\"details\":\"Requires IERC20 permit.referrer is the wallet address of a previous participant.if `enableReferral` is true, and the user decides to leave after the wallet has been used to claim a discount,       then the full value can't be claimed if deciding to leave the project.A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).      To 'update' an order, the user must first 'leave' then join again with the new values.\",\"params\":{\"_enableReferral\":\"Informs whether the user would like to be eligible to collect rewards for being referred.\",\"_quantities\":\"Array with the number of units desired for each product.\",\"_referrer\":\"Optional referral code to be used to claim a discount.\",\"_wallet\":\"The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\"}},\"joinWithSignature(bytes,bytes)\":{\"details\":\"Requires IRC20 permit.\",\"params\":{\"extraData\":\"ABI encoded parameters for _join() method.\",\"result\":\"(uint64, bytes) of signature validity and the signature itself.\"}},\"leave(address)\":{\"details\":\"Only allowed if the respective Crowdtainer is in active `Funding` state.\",\"params\":{\"_wallet\":\"The wallet that is leaving the Crowdtainer.\"}}},\"stateVariables\":{\"owner\":{\"details\":\"Has permissions to call: initialize(), join() and leave() functions. These functions are optionallygated so that an owner contract can do special accounting (such as an EIP721-compliant contract as its owner).\"},\"shippingAgent\":{\"details\":\"Allowed to call getPaidAndDeliver() and set signers.\"},\"unitPricePerType\":{\"details\":\"The price should be given in the number of smallest unit for precision (e.g 10^18 == 1 DAI).\"}},\"title\":\"Crowdtainer contract\",\"version\":1},\"userdoc\":{\"events\":{\"CCIPURLChanged(string[])\":{\"notice\":\"Emmited when CCIP-read URLs changes.\"},\"CrowdtainerCreated(address,address)\":{\"notice\":\"Emmited when a Crowdtainer is created.\"},\"CrowdtainerInitialized(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,string,address)\":{\"notice\":\"Emmited when a Crowdtainer is initialized.\"},\"Joined(address,uint256[4],address,uint256,uint256,bool)\":{\"notice\":\"Emmited when a user joins, signalling participation intent.\"},\"SignerChanged(address)\":{\"notice\":\"Emmited when the signer changes.\"}},\"kind\":\"user\",\"methods\":{\"abortProject()\":{\"notice\":\"Function used by project deployer to signal that it is no longer possible to the ship service or product.         This puts the project into `Failed` state and participants can withdraw their funds.\"},\"accumulatedRewards()\":{\"notice\":\"Total rewards claimable for project.\"},\"accumulatedRewardsOf(address)\":{\"notice\":\"Maps accounts to accumulated referral rewards.\"},\"claimFunds()\":{\"notice\":\"Function used by participants to withdrawl funds from a failed/expired project.\"},\"claimRewards()\":{\"notice\":\"Function used by participants to withdrawl referral rewards from a successful project.\"},\"discountForUser(address)\":{\"notice\":\"Maps the total discount for each user.\"},\"expireTime()\":{\"notice\":\"Time after which it is no longer possible for the service or product provider to withdraw funds.\"},\"getPaidAndDeliver()\":{\"notice\":\"Function used by the service provider to signal commitment to ship service or product by withdrawing/receiving the payment.\"},\"getSigner()\":{\"notice\":\"Address used for signing authorizations. This allows for arbitrary off-chain mechanisms to apply law-based restrictions and/or combat bots squatting offered items.If signer equals to address(0), no restriction is applied.\"},\"initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))\":{\"notice\":\"Initializes a Crowdtainer.\"},\"join(address,uint256[4])\":{\"notice\":\"Join the Crowdtainer project.\"},\"join(address,uint256[4],bool,address)\":{\"notice\":\"Join the Crowdtainer project with optional referral and discount.\"},\"joinWithSignature(bytes,bytes)\":{\"notice\":\"Allows joining by means of CCIP-READ (EIP-3668).\"},\"leave(address)\":{\"notice\":\"Leave the Crowdtainer and withdraw deposited funds given when joining.Calling this method signals that the participant is no longer interested in the project.\"},\"legalContractURI()\":{\"notice\":\"URI string pointing to the legal terms and conditions ruling this project.\"},\"numberOfProducts()\":{\"notice\":\"Number of products/services variations offered by this project.\"},\"openingTime()\":{\"notice\":\"Time after which it is possible to join this Crowdtainer.\"},\"owner()\":{\"notice\":\"Owner of this contract.\"},\"referralRate()\":{\"notice\":\"Half of the value act as a discount for a new participant using an existing referral code, and the other half is given for the participant making a referral. The former is similar to the 'cash discount device' in stamp era, while the latter is a reward for contributing to the Crowdtainer by incentivising participation from others.\"},\"referrerOfReferee(address)\":{\"notice\":\"Maps referee to referrer.\"},\"shippingAgent()\":{\"notice\":\"The entity or person responsible for the delivery of this crowdtainer project.\"},\"targetMaximum()\":{\"notice\":\"Amount in ERC20 units after which no further participation is possible.\"},\"targetMinimum()\":{\"notice\":\"Minimum amount in ERC20 units required for Crowdtainer to be considered to be successful.\"},\"token()\":{\"notice\":\"Address of the ERC20 token used for payment.\"},\"totalValueRaised()\":{\"notice\":\"The total value raised/accumulated by this contract.\"},\"unitPricePerType(uint256)\":{\"notice\":\"The price for each unit type.\"},\"urls(uint256)\":{\"notice\":\"URL templates to the service provider's gateways that implement the CCIP-read protocol.\"},\"usedNonces(address,bytes32)\":{\"notice\":\"Mapping of addresses to random nonces; Used for transaction replay protection.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/Crowdtainer.sol\":\"Crowdtainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Strings.sol\\\";\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS,\\n        InvalidSignatureV\\n    }\\n\\n    function _throwError(RecoverError error) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert(\\\"ECDSA: invalid signature\\\");\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert(\\\"ECDSA: invalid signature length\\\");\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert(\\\"ECDSA: invalid signature 's' value\\\");\\n        } else if (error == RecoverError.InvalidSignatureV) {\\n            revert(\\\"ECDSA: invalid signature 'v' value\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature` or error string. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address, RecoverError) {\\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\\n        return tryRecover(hash, v, r, s);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     *\\n     * _Available since v4.2._\\n     */\\n    function recover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address, RecoverError) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS);\\n        }\\n        if (v != 27 && v != 28) {\\n            return (address(0), RecoverError.InvalidSignatureV);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature);\\n        }\\n\\n        return (signer, RecoverError.NoError);\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\\n        _throwError(error);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\\n        // 32 is the length in bytes of hash,\\n        // enforced by the type signature above\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", hash));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\\n     * produces hash corresponding to the one signed with the\\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\\n     * JSON-RPC method as part of EIP-191.\\n     *\\n     * See {recover}.\\n     */\\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n\\\", Strings.toString(s.length), s));\\n    }\\n\\n    /**\\n     * @dev Returns an Ethereum Signed Typed Data, created from a\\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\\n     * to the one signed with the\\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\\n     * JSON-RPC method as part of EIP-712.\\n     *\\n     * See {recover}.\\n     */\\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash));\\n    }\\n}\\n\",\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\"},\"src/contracts/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\n// -----------------------------------------------\\n//  Safety margins to avoid impractical values\\n// -----------------------------------------------\\nuint256 constant SAFETY_TIME_RANGE = 1 hours;\\n// @notice Maximum value for referral discounts and rewards\\nuint256 constant SAFETY_MAX_REFERRAL_RATE = 50;\\n// @notice Maximum number of different products for a given Crowdtainer deployment.\\nuint256 constant MAX_NUMBER_OF_PRODUCTS = 4;\\n// @notice Maximum number of items per type on each purchase/join.\\nuint256 constant MAX_NUMBER_OF_PURCHASED_ITEMS = 200;\\n\",\"keccak256\":\"0xb9e35c0f7f7080c26dc9819ccae1e9a439aded1aaff4e097fe4fdfa6aca3d142\",\"license\":\"GPL-3.0\"},\"src/contracts/Crowdtainer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\n// @dev External dependencies\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\n\\n// @dev Internal dependencies\\nimport \\\"./ICrowdtainer.sol\\\";\\nimport \\\"./Errors.sol\\\";\\nimport \\\"./Constants.sol\\\";\\n\\ninterface AuthorizationGateway {\\n    function getSignedJoinApproval(\\n        address crowdtainerAddress,\\n        address addr,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) external view returns (bytes memory signature);\\n}\\n\\n/**\\n * @title Crowdtainer contract\\n * @author Crowdtainer.eth\\n */\\ncontract Crowdtainer is ICrowdtainer, ReentrancyGuard, Initializable {\\n    using SafeERC20 for IERC20;\\n    using ECDSA for bytes32;\\n\\n    // -----------------------------------------------\\n    //  Main project state\\n    // -----------------------------------------------\\n    CrowdtainerState public crowdtainerState;\\n\\n    /// @notice Owner of this contract.\\n    /// @dev Has permissions to call: initialize(), join() and leave() functions. These functions are optionally\\n    /// @dev gated so that an owner contract can do special accounting (such as an EIP721-compliant contract as its owner).\\n    address public owner;\\n\\n    /// @notice The entity or person responsible for the delivery of this crowdtainer project.\\n    /// @dev Allowed to call getPaidAndDeliver() and set signers.\\n    address public shippingAgent;\\n\\n    /// @notice Maps wallets that joined this Crowdtainer to the values they paid to join.\\n    mapping(address => uint256) private costForWallet;\\n\\n    /// @notice Maps accounts to accumulated referral rewards.\\n    mapping(address => uint256) public accumulatedRewardsOf;\\n\\n    /// @notice Total rewards claimable for project.\\n    uint256 public accumulatedRewards;\\n\\n    /// @notice Maps referee to referrer.\\n    mapping(address => address) public referrerOfReferee;\\n\\n    uint256 public referralEligibilityValue;\\n\\n    /// @notice Wether an account has opted into being elibible for referral rewards.\\n    mapping(address => bool) private enableReferral;\\n\\n    /// @notice Maps the total discount for each user.\\n    mapping(address => uint256) public discountForUser;\\n\\n    /// @notice The total value raised/accumulated by this contract.\\n    uint256 public totalValueRaised;\\n\\n    /// @notice Address owned by shipping agent to sign authorization transactions.\\n    address private signer;\\n\\n    /// @notice Mapping of addresses to random nonces; Used for transaction replay protection.\\n    mapping(address => mapping(bytes32 => bool)) public usedNonces;\\n\\n    /// @notice URL templates to the service provider's gateways that implement the CCIP-read protocol.\\n    string[] public urls;\\n\\n    uint256 internal constant ONE = 1e6; // 6 decimal places\\n\\n    // -----------------------------------------------\\n    //  Modifiers\\n    // -----------------------------------------------\\n    /**\\n     * @dev Throws if msg.sender != owner, except when owner is address(0), in which case no restriction is applied.\\n     */\\n    modifier onlyAddress(address requiredAddress) {\\n        if (owner == address(0)) {\\n            // This branch means this contract is being used as a stand-alone contract, not managed/owned by a EIP-721/1155 contract\\n            // E.g.: A Crowdtainer instance interacted directly by an EOA.\\n            _;\\n            return;\\n        }\\n        requireAddress(requiredAddress);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called in state other than the specified.\\n     */\\n    modifier onlyInState(CrowdtainerState requiredState) {\\n        requireState(requiredState);\\n        _;\\n    }\\n\\n    modifier onlyActive() {\\n        requireActive();\\n        _;\\n    }\\n\\n    // Auxiliary modifier functions, used to save deployment cost.\\n    function requireState(CrowdtainerState requiredState) internal view {\\n        if (crowdtainerState != requiredState)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n        require(crowdtainerState == requiredState);\\n    }\\n\\n    function requireAddress(address requiredAddress) internal view {\\n        if (msg.sender != requiredAddress)\\n            revert Errors.CallerNotAllowed({\\n                expected: msg.sender,\\n                actual: requiredAddress\\n            });\\n        require(msg.sender == requiredAddress);\\n    }\\n\\n    function requireActive() internal view {\\n        if (block.timestamp < openingTime)\\n            revert Errors.OpeningTimeNotReachedYet(\\n                block.timestamp,\\n                openingTime\\n            );\\n        if (block.timestamp > expireTime)\\n            revert Errors.CrowdtainerExpired(block.timestamp, expireTime);\\n    }\\n\\n    /// @notice Address used for signing authorizations. This allows for arbitrary\\n    /// off-chain mechanisms to apply law-based restrictions and/or combat bots squatting offered items.\\n    /// @notice If signer equals to address(0), no restriction is applied.\\n    function getSigner() external view returns (address) {\\n        return signer;\\n    }\\n\\n    function setSigner(address _signer) external onlyAddress(shippingAgent) {\\n        signer = _signer;\\n        emit SignerChanged(signer);\\n    }\\n\\n    function setUrls(string[] memory _urls)\\n        external\\n        onlyAddress(shippingAgent)\\n    {\\n        urls = _urls;\\n        emit CCIPURLChanged(urls);\\n    }\\n\\n    // -----------------------------------------------\\n    //  Values set by initialize function\\n    // -----------------------------------------------\\n    /// @notice Time after which it is possible to join this Crowdtainer.\\n    uint256 public openingTime;\\n    /// @notice Time after which it is no longer possible for the service or product provider to withdraw funds.\\n    uint256 public expireTime;\\n    /// @notice Minimum amount in ERC20 units required for Crowdtainer to be considered to be successful.\\n    uint256 public targetMinimum;\\n    /// @notice Amount in ERC20 units after which no further participation is possible.\\n    uint256 public targetMaximum;\\n    /// @notice Number of products/services variations offered by this project.\\n    uint256 public numberOfProducts;\\n    /// @notice The price for each unit type.\\n    /// @dev The price should be given in the number of smallest unit for precision (e.g 10^18 == 1 DAI).\\n    uint256[MAX_NUMBER_OF_PRODUCTS] public unitPricePerType;\\n    /// @notice Half of the value act as a discount for a new participant using an existing referral code, and the other\\n    /// half is given for the participant making a referral. The former is similar to the 'cash discount device' in stamp era,\\n    /// while the latter is a reward for contributing to the Crowdtainer by incentivising participation from others.\\n    uint256 public referralRate;\\n    /// @notice Address of the ERC20 token used for payment.\\n    IERC20 public token;\\n    /// @notice URI string pointing to the legal terms and conditions ruling this project.\\n    string public legalContractURI;\\n\\n    // -----------------------------------------------\\n    //  Events\\n    // -----------------------------------------------\\n\\n    /// @notice Emmited when the signer changes.\\n    event SignerChanged(address indexed newSigner);\\n\\n    /// @notice Emmited when CCIP-read URLs changes.\\n    event CCIPURLChanged(string[] indexed newUrls);\\n\\n    /// @notice Emmited when a Crowdtainer is created.\\n    event CrowdtainerCreated(\\n        address indexed owner,\\n        address indexed shippingAgent\\n    );\\n\\n    /// @notice Emmited when a Crowdtainer is initialized.\\n    event CrowdtainerInitialized(\\n        address indexed _owner,\\n        IERC20 _token,\\n        uint256 _openingTime,\\n        uint256 _expireTime,\\n        uint256 _targetMinimum,\\n        uint256 _targetMaximum,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] _unitPricePerType,\\n        uint256 _referralRate,\\n        uint256 _referralEligibilityValue,\\n        string _legalContractURI,\\n        address _signer\\n    );\\n\\n    /// @notice Emmited when a user joins, signalling participation intent.\\n    event Joined(\\n        address indexed wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] quantities,\\n        address indexed referrer,\\n        uint256 finalCost, // @dev with discount applied\\n        uint256 appliedDiscount,\\n        bool referralEnabled\\n    );\\n\\n    event Left(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event RewardsClaimed(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event FundsClaimed(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event CrowdtainerInDeliveryStage(\\n        address indexed shippingAgent,\\n        uint256 totalValueRaised\\n    );\\n\\n    // -----------------------------------------------\\n    // Contract functions\\n    // -----------------------------------------------\\n\\n    /**\\n     * @notice Initializes a Crowdtainer.\\n     * @param _owner The contract owning this Crowdtainer instance, if any (address(0x0) for no owner).\\n     * @param _campaignData Data defining all rules and values of this Crowdtainer instance.\\n     */\\n    function initialize(address _owner, CampaignData calldata _campaignData)\\n        external\\n        initializer\\n        onlyInState(CrowdtainerState.Uninitialized)\\n    {\\n        owner = _owner;\\n\\n        // @dev: Sanity checks\\n        if (address(_campaignData.token) == address(0))\\n            revert Errors.TokenAddressIsZero();\\n\\n        if (address(_campaignData.shippingAgent) == address(0))\\n            revert Errors.ShippingAgentAddressIsZero();\\n\\n        if (\\n            _campaignData.referralEligibilityValue > _campaignData.targetMinimum\\n        )\\n            revert Errors.ReferralMinimumValueTooHigh({\\n                received: _campaignData.referralEligibilityValue,\\n                maximum: _campaignData.targetMinimum\\n            });\\n\\n        if (_campaignData.referralRate % 2 != 0)\\n            revert Errors.ReferralRateNotMultipleOfTwo();\\n\\n        // @dev: Expiration time should not be too close to the opening time\\n        if (\\n            _campaignData.expireTime <\\n            _campaignData.openingTime + SAFETY_TIME_RANGE\\n        ) revert Errors.ClosingTimeTooEarly();\\n\\n        if (_campaignData.targetMaximum == 0)\\n            revert Errors.InvalidMaximumTarget();\\n\\n        if (_campaignData.targetMinimum == 0)\\n            revert Errors.InvalidMinimumTarget();\\n\\n        if (_campaignData.targetMinimum > _campaignData.targetMaximum)\\n            revert Errors.MinimumTargetHigherThanMaximum();\\n\\n        // @dev The first price of zero indicates the end of price list.\\n        for (uint256 i = 0; i < MAX_NUMBER_OF_PRODUCTS; i++) {\\n            if (_campaignData.unitPricePerType[i] == 0) {\\n                break;\\n            } else if (_campaignData.unitPricePerType[i] < ONE) {\\n                revert Errors.PriceTooLow();\\n            }\\n\\n            numberOfProducts++;\\n        }\\n\\n        if (numberOfProducts == 0) {\\n            revert Errors.InvalidProductNumberAndPrices();\\n        }\\n\\n        if (_campaignData.referralRate > SAFETY_MAX_REFERRAL_RATE)\\n            revert Errors.InvalidReferralRate({\\n                received: _campaignData.referralRate,\\n                maximum: SAFETY_MAX_REFERRAL_RATE\\n            });\\n\\n        shippingAgent = _campaignData.shippingAgent;\\n        signer = _campaignData.signer;\\n        openingTime = _campaignData.openingTime;\\n        expireTime = _campaignData.expireTime;\\n        targetMinimum = _campaignData.targetMinimum;\\n        targetMaximum = _campaignData.targetMaximum;\\n        unitPricePerType = _campaignData.unitPricePerType;\\n        referralRate = _campaignData.referralRate;\\n        referralEligibilityValue = _campaignData.referralEligibilityValue;\\n        token = IERC20(_campaignData.token);\\n        legalContractURI = _campaignData.legalContractURI;\\n\\n        crowdtainerState = CrowdtainerState.Funding;\\n\\n        emit CrowdtainerInitialized(\\n            owner,\\n            token,\\n            openingTime,\\n            expireTime,\\n            targetMinimum,\\n            targetMaximum,\\n            unitPricePerType,\\n            referralRate,\\n            referralEligibilityValue,\\n            legalContractURI,\\n            signer\\n        );\\n    }\\n\\n    /**\\n     * @notice Join the Crowdtainer project.\\n     * @param _wallet The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\\n     * @param _quantities Array with the number of units desired for each product.\\n     *\\n     * @dev This method is present to make wallet interactions more friendly, by requiring fewer parameters for projects with referral system disabled.\\n     * @dev Requires IERC20 permit.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities\\n    ) public {\\n        join(_wallet, _quantities, false, address(0));\\n    }\\n\\n    /**\\n     * @notice Join the Crowdtainer project with optional referral and discount.\\n     * @param _wallet The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\\n     * @param _quantities Array with the number of units desired for each product.\\n     * @param _enableReferral Informs whether the user would like to be eligible to collect rewards for being referred.\\n     * @param _referrer Optional referral code to be used to claim a discount.\\n     *\\n     * @dev Requires IERC20 permit.\\n     * @dev referrer is the wallet address of a previous participant.\\n     * @dev if `enableReferral` is true, and the user decides to leave after the wallet has been used to claim a discount,\\n     *       then the full value can't be claimed if deciding to leave the project.\\n     * @dev A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).\\n     *      To 'update' an order, the user must first 'leave' then join again with the new values.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    )\\n        public\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        if (signer != address(0)) {\\n            // See https://eips.ethereum.org/EIPS/eip-3668\\n            revert Errors.OffchainLookup(\\n                address(this), // sender\\n                urls, // gateway urls\\n                abi.encodeWithSelector(\\n                    AuthorizationGateway.getSignedJoinApproval.selector,\\n                    address(this),\\n                    _wallet,\\n                    _quantities,\\n                    _enableReferral,\\n                    _referrer\\n                ), // parameters/data for the gateway (callData)\\n                Crowdtainer.joinWithSignature.selector, // 4-byte callback function selector\\n                abi.encode(_wallet, _quantities, _enableReferral, _referrer) // parameters for the contract callback function\\n            );\\n        }\\n\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        _join(_wallet, _quantities, _enableReferral, _referrer);\\n    }\\n\\n    /**\\n     * @notice Allows joining by means of CCIP-READ (EIP-3668).\\n     * @param result (uint64, bytes) of signature validity and the signature itself.\\n     * @param extraData ABI encoded parameters for _join() method.\\n     *\\n     * @dev Requires IRC20 permit.\\n     */\\n    function joinWithSignature(\\n        bytes calldata result, // off-chain signed payload\\n        bytes calldata extraData // retained by client, passed for verification in this function\\n    )\\n        external\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        require(signer != address(0));\\n\\n        // decode extraData provided by client\\n        (\\n            address _wallet,\\n            uint256[MAX_NUMBER_OF_PRODUCTS] memory _quantities,\\n            bool _enableReferral,\\n            address _referrer\\n        ) = abi.decode(extraData, (address, uint256[4], bool, address));\\n\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        // Get signature from server response\\n        (\\n            address contractAddress,\\n            uint64 epochExpiration,\\n            bytes32 nonce,\\n            bytes memory signature\\n        ) = abi.decode(result, (address, uint64, bytes32, bytes));\\n\\n        bytes32 messageDigest = keccak256(\\n            abi.encode(\\n                contractAddress,\\n                _wallet,\\n                _quantities,\\n                _enableReferral,\\n                _referrer,\\n                epochExpiration,\\n                nonce\\n            )\\n        );\\n\\n        require(\\n            signaturePayloadValid(\\n                contractAddress,\\n                messageDigest,\\n                signer,\\n                epochExpiration,\\n                nonce,\\n                signature\\n            )\\n        );\\n        usedNonces[signer][nonce] = true;\\n\\n        _join(_wallet, _quantities, _enableReferral, _referrer);\\n    }\\n\\n    function signaturePayloadValid(\\n        address contractAddress,\\n        bytes32 messageDigest,\\n        address expectedPublicKey,\\n        uint64 expiration,\\n        bytes32 nonce,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        address recoveredPublicKey = keccak256(\\n            abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", messageDigest)\\n        ).recover(signature);\\n\\n        if (recoveredPublicKey != expectedPublicKey) {\\n            revert Errors.InvalidSignature();\\n        }\\n\\n        if (contractAddress != address(this)) {\\n            revert Errors.InvalidSignature();\\n        }\\n\\n        if (expiration <= block.timestamp) {\\n            revert Errors.SignatureExpired(uint64(block.timestamp), expiration);\\n        }\\n\\n        if (usedNonces[expectedPublicKey][nonce]) {\\n            revert Errors.NonceAlreadyUsed(expectedPublicKey, nonce);\\n        }\\n\\n        return true;\\n    }\\n\\n    function _join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] memory _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) internal {\\n        enableReferral[_wallet] = _enableReferral;\\n\\n        // @dev Check if wallet didn't already join\\n        if (costForWallet[_wallet] != 0) revert Errors.UserAlreadyJoined();\\n\\n        // @dev Calculate cost\\n        uint256 finalCost;\\n\\n        for (uint256 i = 0; i < numberOfProducts; i++) {\\n            if (_quantities[i] > MAX_NUMBER_OF_PURCHASED_ITEMS)\\n                revert Errors.ExceededNumberOfItemsAllowed({\\n                    received: _quantities[i],\\n                    maximum: MAX_NUMBER_OF_PURCHASED_ITEMS\\n                });\\n\\n            finalCost += unitPricePerType[i] * _quantities[i];\\n        }\\n\\n        if (finalCost < ONE) {\\n            revert Errors.InvalidNumberOfQuantities();\\n        }\\n\\n        if (_enableReferral && finalCost < referralEligibilityValue)\\n            revert Errors.MinimumPurchaseValueForReferralNotMet({\\n                received: finalCost,\\n                minimum: referralEligibilityValue\\n            });\\n\\n        // @dev Apply discounts to `finalCost` if applicable.\\n        bool eligibleForDiscount;\\n        // @dev Verify validity of given `referrer`\\n        if (_referrer != address(0) && referralRate > 0) {\\n            // @dev Check if referrer participated\\n            if (costForWallet[_referrer] == 0) {\\n                revert Errors.ReferralInexistent();\\n            }\\n\\n            if (!enableReferral[_referrer]) {\\n                revert Errors.ReferralDisabledForProvidedCode();\\n            }\\n\\n            eligibleForDiscount = true;\\n        }\\n\\n        uint256 discount;\\n\\n        if (eligibleForDiscount) {\\n            // @dev Two things happens when a valid referral code is given:\\n            //    1 - Half of the referral rate is applied as a discount to the current order.\\n            //    2 - Half of the referral rate is credited to the referrer.\\n\\n            // @dev Calculate the discount value\\n            discount = (finalCost * referralRate) / 100 / 2;\\n\\n            // @dev 1- Apply discount\\n            finalCost -= discount;\\n            discountForUser[_wallet] += discount;\\n\\n            // @dev 2- Apply reward for referrer\\n            accumulatedRewardsOf[_referrer] += discount;\\n            accumulatedRewards += discount;\\n\\n            referrerOfReferee[_wallet] = _referrer;\\n        }\\n\\n        costForWallet[_wallet] = finalCost;\\n\\n        // increase total value accumulated by this contract\\n        totalValueRaised += finalCost;\\n\\n        // @dev Check if the purchase order doesn't exceed the goal's `targetMaximum`.\\n        if ((totalValueRaised - accumulatedRewards) > targetMaximum)\\n            revert Errors.PurchaseExceedsMaximumTarget({\\n                received: totalValueRaised,\\n                maximum: targetMaximum\\n            });\\n\\n        // @dev transfer required funds into this contract\\n        token.safeTransferFrom(_wallet, address(this), finalCost);\\n\\n        emit Joined(\\n            _wallet,\\n            _quantities,\\n            _referrer,\\n            finalCost,\\n            discount,\\n            _enableReferral\\n        );\\n    }\\n\\n    /**\\n     * @notice Leave the Crowdtainer and withdraw deposited funds given when joining.\\n     * @notice Calling this method signals that the participant is no longer interested in the project.\\n     * @param _wallet The wallet that is leaving the Crowdtainer.\\n     * @dev Only allowed if the respective Crowdtainer is in active `Funding` state.\\n     */\\n    function leave(address _wallet)\\n        external\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        uint256 withdrawalTotal = costForWallet[_wallet];\\n\\n        // @dev Subtract formerly given referral rewards originating from this account.\\n        address referrer = referrerOfReferee[_wallet];\\n        accumulatedRewardsOf[referrer] -= discountForUser[_wallet];\\n\\n        /* @dev If this wallet's referral was used, then it is no longer possible to leave().\\n         *      This is to discourage users from joining just to generate discount codes.\\n         *      E.g.: A user uses two different wallets, the first joins to generate a discount code for him/herself to be used in\\n         *      the second wallet, and then immediatelly leaves the pool from the first wallet, leaving the second wallet with a full discount. */\\n        if (accumulatedRewardsOf[_wallet] > 0) {\\n            revert Errors.CannotLeaveDueAccumulatedReferralCredits();\\n        }\\n\\n        totalValueRaised -= costForWallet[_wallet];\\n        accumulatedRewards -= discountForUser[_wallet];\\n\\n        costForWallet[_wallet] = 0;\\n        discountForUser[_wallet] = 0;\\n        referrerOfReferee[_wallet] = address(0);\\n        enableReferral[_wallet] = false;\\n\\n        // @dev transfer the owed funds from this contract back to the user.\\n        token.safeTransferFrom(address(this), _wallet, withdrawalTotal);\\n\\n        emit Left(_wallet, withdrawalTotal);\\n    }\\n\\n    /**\\n     * @notice Function used by the service provider to signal commitment to ship service or product by withdrawing/receiving the payment.\\n     */\\n    function getPaidAndDeliver()\\n        public\\n        onlyAddress(shippingAgent)\\n        onlyInState(CrowdtainerState.Funding)\\n        nonReentrant\\n    {\\n        uint256 availableForAgent = totalValueRaised - accumulatedRewards;\\n\\n        if (availableForAgent < targetMinimum) {\\n            revert Errors.MinimumTargetNotReached(\\n                targetMinimum,\\n                totalValueRaised\\n            );\\n        }\\n\\n        crowdtainerState = CrowdtainerState.Delivery;\\n\\n        // @dev transfer the owed funds from this contract to the service provider.\\n        token.safeTransferFrom(address(this), shippingAgent, availableForAgent);\\n\\n        emit CrowdtainerInDeliveryStage(shippingAgent, availableForAgent);\\n    }\\n\\n    /**\\n     * @notice Function used by project deployer to signal that it is no longer possible to the ship service or product.\\n     *         This puts the project into `Failed` state and participants can withdraw their funds.\\n     */\\n    function abortProject()\\n        public\\n        onlyAddress(shippingAgent)\\n        onlyInState(CrowdtainerState.Funding)\\n        nonReentrant\\n    {\\n        crowdtainerState = CrowdtainerState.Failed;\\n    }\\n\\n    /**\\n     * @notice Function used by participants to withdrawl funds from a failed/expired project.\\n     */\\n    function claimFunds() public nonReentrant {\\n        if (block.timestamp < openingTime)\\n            revert Errors.OpeningTimeNotReachedYet(\\n                block.timestamp,\\n                openingTime\\n            );\\n\\n        if (crowdtainerState == CrowdtainerState.Uninitialized)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n\\n        if (crowdtainerState == CrowdtainerState.Delivery)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n\\n        // The first interaction with this function 'nudges' the state to `Failed` if\\n        // the project didn't reach the goal in time.\\n        if (\\n            block.timestamp > expireTime &&\\n            (totalValueRaised - accumulatedRewards) < targetMinimum\\n        ) crowdtainerState = CrowdtainerState.Failed;\\n\\n        if (crowdtainerState != CrowdtainerState.Failed)\\n            revert Errors.CantClaimFundsOnActiveProject();\\n\\n        // Reaching this line means the project failed either due expiration or explicit transition from `abortProject()`.\\n        uint256 withdrawalTotal = costForWallet[msg.sender];\\n\\n        costForWallet[msg.sender] = 0;\\n        discountForUser[msg.sender] = 0;\\n        referrerOfReferee[msg.sender] = address(0);\\n\\n        if (withdrawalTotal == 0) {\\n            revert Errors.InsufficientBalance();\\n        }\\n\\n        // @dev transfer the owed funds from this contract back to the user.\\n        token.safeTransferFrom(address(this), msg.sender, withdrawalTotal);\\n\\n        emit FundsClaimed(msg.sender, withdrawalTotal);\\n    }\\n\\n    /**\\n     * @notice Function used by participants to withdrawl referral rewards from a successful project.\\n     */\\n    function claimRewards()\\n        public\\n        nonReentrant\\n        onlyInState(CrowdtainerState.Delivery)\\n    {\\n        uint256 totalRewards = accumulatedRewardsOf[msg.sender];\\n        accumulatedRewardsOf[msg.sender] = 0;\\n\\n        token.safeTransferFrom(address(this), msg.sender, totalRewards);\\n\\n        emit RewardsClaimed(msg.sender, totalRewards);\\n    }\\n\\n    // @dev This method is only used for Formal Verification with SMTChecker.\\n    // @dev It is executed with `make solcheck` command provided with the project's scripts.\\n    function invariant() public view {\\n        if (crowdtainerState != CrowdtainerState.Uninitialized) {\\n            assert(expireTime >= (openingTime + SAFETY_TIME_RANGE));\\n            assert(targetMaximum > 0);\\n            assert(targetMinimum <= targetMaximum);\\n            assert(referralRate <= SAFETY_MAX_REFERRAL_RATE);\\n\\n            assert(accumulatedRewards < totalValueRaised);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7c4eaf2547dc9222c59f6526cc2c7fa25c237ba57248bab6ef5148ce36d29f55\",\"license\":\"GPL-3.0\"},\"src/contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport \\\"./States.sol\\\";\\n\\nlibrary Errors {\\n    // -----------------------------------------------\\n    //  Vouchers\\n    // -----------------------------------------------\\n    // @notice: The provided crowdtainer does not exist.\\n    error CrowdtainerInexistent();\\n    // @notice: Invalid token id.\\n    error InvalidTokenId(uint256 tokenId);\\n    // @notice: Prices lower than 1 * 1^6 not supported.\\n    error PriceTooLow();\\n    // @notice: Attempted to join with all product quantities set to zero.\\n    error InvalidNumberOfQuantities();\\n    // @notice: Account cannot be of address(0).\\n    error AccountAddressIsZero();\\n    // @notice: Metadata service contract cannot be of address(0).\\n    error MetadataServiceAddressIsZero();\\n    // @notice: Accounts and ids lengths do not match.\\n    error AccountIdsLengthMismatch();\\n    // @notice: ID's and amounts lengths do not match.\\n    error IDsAmountsLengthMismatch();\\n    // @notice: Cannot set approval for the same account.\\n    error CannotSetApprovalForSelf();\\n    // @notice: Caller is not owner or has correct permission.\\n    error AccountNotOwner();\\n    // @notice: Only the shipping agent is able to set a voucher/tokenId as \\\"claimed\\\".\\n    error SetClaimedOnlyAllowedByShippingAgent();\\n    // @notice: Cannot transfer someone else's tokens.\\n    error UnauthorizedTransfer();\\n    // @notice: Insufficient balance.\\n    error InsufficientBalance();\\n    // @notice: Can't initialize with all their prices set to zero.\\n    error InvalidProductNumberAndPrices();\\n    // @notice: Can't make transfers in given state.\\n    error TransferNotAllowed(address crowdtainer, CrowdtainerState state);\\n    // @notice: No further participants possible in a given Crowdtainer.\\n    error MaximumNumberOfParticipantsReached(\\n        uint256 maximum,\\n        address crowdtainer\\n    );\\n    // Used to apply off-chain verifications/rules per CCIP-read (EIP-3668),\\n    // see https://eips.ethereum.org/EIPS/eip-3668 for description.\\n    error OffchainLookup(\\n        address sender,\\n        string[] urls,\\n        bytes callData,\\n        bytes4 callbackFunction,\\n        bytes extraData\\n    );\\n\\n    error CCIP_Read_InvalidOperation();\\n    error SignatureExpired(uint64 current, uint64 expires);\\n    error NonceAlreadyUsed(address wallet, bytes32 nonce);\\n    error InvalidSignature();\\n\\n    // -----------------------------------------------\\n    //  Initialization with invalid parameters\\n    // -----------------------------------------------\\n    // @notice: Cannot initialize with owner of address(0).\\n    error OwnerAddressIsZero();\\n    // @notice: Cannot initialize with token of address(0).\\n    error TokenAddressIsZero();\\n    // @notice: Shipping agent can't have address(0).\\n    error ShippingAgentAddressIsZero();\\n    // @notice: Initialize called with closing time is less than one hour away from the opening time.\\n    error ClosingTimeTooEarly();\\n    // @notice: Initialize called with invalid number of maximum units to be sold (0).\\n    error InvalidMaximumTarget();\\n    // @notice: Initialize called with invalid number of minimum units to be sold (less than maximum sold units).\\n    error InvalidMinimumTarget();\\n    // @notice: Initialize called with invalid minimum and maximum targets (minimum value higher than maximum).\\n    error MinimumTargetHigherThanMaximum();\\n    // @notice: Initialize called with invalid referral rate.\\n    error InvalidReferralRate(uint256 received, uint256 maximum);\\n    // @notice: Referral rate not multiple of 2.\\n    error ReferralRateNotMultipleOfTwo();\\n    // @notice: Refferal minimum value for participation can't be higher than project's minimum target.\\n    error ReferralMinimumValueTooHigh(uint256 received, uint256 maximum);\\n\\n    // -----------------------------------------------\\n    //  Authorization\\n    // -----------------------------------------------\\n    // @notice: Method not authorized for caller (message sender).\\n    error CallerNotAllowed(address expected, address actual);\\n\\n    // -----------------------------------------------\\n    //  Join() operation\\n    // -----------------------------------------------\\n    // @notice: The given referral was not found thus can't be used to claim a discount.\\n    error ReferralInexistent();\\n    // @notice: Purchase exceed target's maximum goal.\\n    error PurchaseExceedsMaximumTarget(uint256 received, uint256 maximum);\\n    // @notice: Number of items purchased per type exceeds maximum allowed.\\n    error ExceededNumberOfItemsAllowed(uint256 received, uint256 maximum);\\n    // @notice: Wallet already used to join project.\\n    error UserAlreadyJoined();\\n    // @notice: Referral is not enabled for the given code/wallet.\\n    error ReferralDisabledForProvidedCode();\\n    // @notice: Participant can't participate in referral if the minimum purchase value specified by the service provider is not met.\\n    error MinimumPurchaseValueForReferralNotMet(\\n        uint256 received,\\n        uint256 minimum\\n    );\\n\\n    // -----------------------------------------------\\n    //  Leave() operation\\n    // -----------------------------------------------\\n    // @notice: It is not possible to leave when the user has referrals enabled, has been referred and gained rewards.\\n    error CannotLeaveDueAccumulatedReferralCredits();\\n\\n    // -----------------------------------------------\\n    //  GetPaidAndDeliver() operation\\n    // -----------------------------------------------\\n    // @notice: GetPaidAndDeliver can't be called on a expired project.\\n    error CrowdtainerExpired(uint256 timestamp, uint256 expiredTime);\\n    // @notice: Not enough funds were raised.\\n    error MinimumTargetNotReached(uint256 minimum, uint256 actual);\\n    // @notice: The project is not active yet.\\n    error OpeningTimeNotReachedYet(uint256 timestamp, uint256 openingTime);\\n\\n    // -----------------------------------------------\\n    //  ClaimFunds() operation\\n    // -----------------------------------------------\\n    // @notice: Can't be called if the project is still active.\\n    error CantClaimFundsOnActiveProject();\\n\\n    // -----------------------------------------------\\n    //  State transition\\n    // -----------------------------------------------\\n    // @notice: Method can't be invoked at current state.\\n    error InvalidOperationFor(CrowdtainerState state);\\n\\n    // -----------------------------------------------\\n    //  Other Invariants\\n    // -----------------------------------------------\\n    // @notice: Payable receive function called, but we don't accept Eth for payment.\\n    error ContractDoesNotAcceptEther();\\n}\\n\",\"keccak256\":\"0xfbd869b747cd81d9e83d0fc673475369c720d70899400f88d9c0019ad0cd8481\",\"license\":\"GPL-3.0\"},\"src/contracts/ICrowdtainer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport \\\"./Constants.sol\\\";\\nimport \\\"./States.sol\\\";\\n\\n// Data defining all rules and values of a Crowdtainer instance.\\nstruct CampaignData {\\n    // Ethereum Address that represents the product or service provider.\\n    address shippingAgent;\\n    // Address used for signing authorizations.\\n    address signer;\\n    // Funding opening time.\\n    uint256 openingTime;\\n    // Time after which the owner can no longer withdraw funds.\\n    uint256 expireTime;\\n    // Amount in ERC20 units required for project to be considered to be successful.\\n    uint256 targetMinimum;\\n    // Amount in ERC20 units after which no further participation is possible.\\n    uint256 targetMaximum;\\n    // Array with price of each item, in ERC2O units. Zero is an invalid value and will throw.\\n    uint256[MAX_NUMBER_OF_PRODUCTS] unitPricePerType;\\n    // Percentage used for incentivising participation. Half the amount goes to the referee, and the other half to the referrer.\\n    uint256 referralRate;\\n    // The minimum purchase value required to be eligible to participate in referral rewards.\\n    uint256 referralEligibilityValue;\\n    // Address of the ERC20 token used for payment.\\n    address token;\\n    // URI string pointing to the legal terms and conditions ruling this project.\\n    string legalContractURI;\\n}\\n\\n/**\\n * @dev Interface for Crowdtainer instances.\\n */\\ninterface ICrowdtainer {\\n    /**\\n     * @dev Initializes a Crowdtainer.\\n     * @param _campaignData Data defining all rules and values of this Crowdtainer instance.\\n     */\\n    function initialize(address owner, CampaignData calldata _campaignData)\\n        external;\\n\\n    function crowdtainerState() external view returns (CrowdtainerState);\\n\\n    function shippingAgent() external view returns (address);\\n\\n    function numberOfProducts() external view returns (uint256);\\n\\n    function unitPricePerType(uint256) external view returns (uint256);\\n\\n    /**\\n     * @notice Join the Crowdtainer project.\\n     * @param _wallet The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\\n     * @param _quantities Array with the number of units desired for each product.\\n     *\\n     * @dev This method is present to make wallet interactions more friendly, by requiring fewer parameters for projects with referral system disabled.\\n     * @dev Requires IERC20 permit.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities\\n    ) external;\\n\\n    /**\\n     * @notice Join the Crowdtainer project with optional referral and discount.\\n     * @param _wallet The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0).\\n     * @param _quantities Array with the number of units desired for each product.\\n     * @param _enableReferral Informs whether the user would like to be eligible to collect rewards for being referred.\\n     * @param _referrer Optional referral code to be used to claim a discount.\\n     *\\n     * @dev Requires IERC20 permit.\\n     * @dev referrer is the wallet address of a previous participant.\\n     * @dev if `enableReferral` is true, and the user decides to leave after the wallet has been used to claim a discount,\\n     *       then the full value can't be claimed if deciding to leave the project.\\n     * @dev A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).\\n     *      To 'update' an order, the user must first 'leave' then join again with the new values.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) external;\\n\\n    /*\\n     * @dev Leave the Crowdtainer and withdraw deposited funds given when joining.\\n     * @note Calling this method signals that the user is no longer interested in participating.\\n     * @note Only allowed if the respective Crowdtainer is in active `Funding` state.\\n     * @param _wallet The wallet that is leaving the Crowdtainer.\\n     */\\n    function leave(address _wallet) external;\\n}\\n\",\"keccak256\":\"0xba8095219a93994f66e90f75b2799f63448b8b6bd0d37af73d4332c5fa6a2e95\",\"license\":\"GPL-3.0\"},\"src/contracts/States.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nenum CrowdtainerState {\\n    Uninitialized,\\n    Funding,\\n    Delivery,\\n    Failed\\n}\\n\",\"keccak256\":\"0x4b39603e89df7543e139af9aadf2d6848c3781983565168007f72caeee77ba9d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101bb5760003560e01c80637855d30c116100fa578063ac3077731161009d578063ac307773146103b0578063b03a9a05146103b8578063b7a8807c146103c0578063bedf77a6146103c9578063c66301b2146103dc578063cf084056146103e5578063d4a0f6b8146103f8578063eb6ced161461040b578063fc0c546a1461042b57600080fd5b80637855d30c1461032e578063796676be1461034e5780637ac3c02f146103615780638831c8dc146103725780638da5cb5b1461037b57806390ffbe90146103955780639c81ff6b1461039e578063a053ce1f146103a757600080fd5b8063464eff5011610162578063464eff501461027357806353b4765614610286578063566a2cc21461028f5780635fda04c7146102a25780636c19e783146102e05780636cc895a9146102f3578063708c45611461030657806374b3eceb1461031957600080fd5b80630e6137cf146101c057806319cc6492146101ca5780631e1b2573146101d25780632748608f146101f857806327949dab14610239578063310a1ee314610259578063312ee7fa14610262578063372500ab1461026b575b600080fd5b6101c861043e565b005b6101c861056e565b6101e56101e03660046124b3565b6105e6565b6040519081526020015b60405180910390f35b6102216102063660046124e1565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101ef565b6101e56102473660046124e1565b60046020526000908152604090205481565b6101e5600f5481565b6101e560075481565b6101c86105fd565b6101c861028136600461252d565b61069c565b6101e560115481565b6101c861029d3660046125c9565b6108dc565b6102d06102b0366004612634565b600c60209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101ef565b6101c86102ee3660046124e1565b610ba4565b6101c86103013660046126fd565b610c62565b6101c86103143660046127d4565b610cf4565b610321611213565b6040516101ef919061287b565b6001546103419062010000900460ff1681565b6040516101ef91906128a4565b61032161035c3660046124b3565b6112a1565b600b546001600160a01b0316610221565b6101e5600a5481565b60015461022190630100000090046001600160a01b031681565b6101e560105481565b6101e560055481565b6101e560175481565b6101c86112cc565b6101c86114d9565b6101e5600e5481565b6101c86103d73660046124e1565b61156c565b6101e560125481565b600254610221906001600160a01b031681565b6101c86104063660046128cc565b611789565b6101e56104193660046124e1565b60096020526000908152604090205481565b601854610221906001600160a01b031681565b6002546001546001600160a01b039182169163010000009091041661055a5760016104688161179a565b6002600054036104935760405162461bcd60e51b815260040161048a90612902565b60405180910390fd5b60026000908155600554600a546104aa919061294f565b90506010548110156104de57601054600a546040516359dc328760e01b81526004810192909252602482015260440161048a565b6001805462ff000019166202000017905560025460185461050e916001600160a01b039182169130911684611830565b6002546040518281526001600160a01b03909116907f26dc6b7e309de29eb24d6830d1cc0f60c6b5d25d5d4830ce8ba77eb55468f0dc9060200160405180910390a25050600160005550565b61056381611890565b60016104688161179a565b6002546001546001600160a01b03918216916301000000909104166105d25760016105988161179a565b6002600054036105ba5760405162461bcd60e51b815260040161048a90612902565b50506001805462ff0000191662030000178155600055565b6105db81611890565b60016105988161179a565b601381600481106105f657600080fd5b0154905081565b60026000540361061f5760405162461bcd60e51b815260040161048a90612902565b6002600081905561062f8161179a565b3360008181526004602052604081208054919055601854909161065e916001600160a01b031690309084611830565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250506001600055565b600154630100000090046001600160a01b0316806108005760016106bf8161179a565b6106c76118df565b6002600054036106e95760405162461bcd60e51b815260040161048a90612902565b6002600055600b546001600160a01b03161561079f5730600d6308b7070660e01b3089898989604051602401610723959493929190612962565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091632b35166160e11b91610774918c918c918c918c91016129a0565b60408051601f1981840301815290829052630556f18360e41b825261048a9594939291600401612a8b565b600154630100000090046001600160a01b03166107bf576107bf86611890565b6107f58686600480602002604051908101604052809291908260046020028082843760009201919091525088915087905061193f565b5060016000556108d5565b61080981611890565b60016108148161179a565b61081c6118df565b60026000540361083e5760405162461bcd60e51b815260040161048a90612902565b6002600055600b546001600160a01b0316156108785730600d6308b7070660e01b3089898989604051602401610723959493929190612962565b600154630100000090046001600160a01b03166108985761089886611890565b6108ce8686600480602002604051908101604052809291908260046020028082843760009201919091525088915087905061193f565b5060016000555b5050505050565b600154630100000090046001600160a01b031680610a475760016108ff8161179a565b6109076118df565b6002600054036109295760405162461bcd60e51b815260040161048a90612902565b6002600055600b546001600160a01b031661094357600080fd5b600080808061095487890189612b45565b60015493975091955093509150630100000090046001600160a01b031661097e5761097e84611890565b600080808061098f8d8f018f612bf5565b93509350935093506000848989898988886040516020016109b69796959493929190612ca0565b60408051601f198184030181529190528051602090910120600b549091506109ed90869083906001600160a01b0316878787611d03565b6109f657600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610a328989898961193f565b50506001600055506108d59650505050505050565b610a5081611890565b6001610a5b8161179a565b610a636118df565b600260005403610a855760405162461bcd60e51b815260040161048a90612902565b6002600055600b546001600160a01b0316610a9f57600080fd5b6000808080610ab087890189612b45565b60015493975091955093509150630100000090046001600160a01b0316610ada57610ada84611890565b6000808080610aeb8d8f018f612bf5565b9350935093509350600084898989898888604051602001610b129796959493929190612ca0565b60408051601f198184030181529190528051602090910120600b54909150610b4990869083906001600160a01b0316878787611d03565b610b5257600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610b8e8989898961193f565b5050600160005550505050505050505050505050565b6002546001546001600160a01b0391821691630100000090910416610c0e57600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b610c1781611890565b600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b6002546001546001600160a01b0391821691630100000090910416610cd8578151610c9490600d9060208501906123b7565b50600d604051610ca49190612cfc565b604051908190038120907f39865a40d618adb128517d1adfed42d8a2ba08c9766461764840e68a6bf59e0390600090a25050565b610ce181611890565b8151610c9490600d9060208501906123b7565b600154610100900460ff1615808015610d1157506001805460ff16105b80610d2a5750303b158015610d2a57506001805460ff16145b610d8d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161048a565b6001805460ff1916811790558015610daf576001805461ff0019166101001790555b6000610dba8161179a565b600180546301000000600160b81b03191663010000006001600160a01b038716021790556000610df26101a0850161018086016124e1565b6001600160a01b031603610e195760405163dc2e5e8d60e01b815260040160405180910390fd5b6000610e2860208501856124e1565b6001600160a01b031603610e4f5760405163063d924960e51b815260040160405180910390fd5b82608001358361016001351115610e8a57604051631e5c82a560e01b815261016084013560048201526080840135602482015260440161048a565b610e9a6002610140850135612daf565b15610eb8576040516384d68d9d60e01b815260040160405180910390fd5b610ec8610e106040850135612dc3565b83606001351015610eec5760405163079237dd60e31b815260040160405180910390fd5b8260a00135600003610f115760405163a4c54a6360e01b815260040160405180910390fd5b8260800135600003610f3657604051637a61fdf760e01b815260040160405180910390fd5b8260a0013583608001351115610f5e576040516285e6db60e21b815260040160405180910390fd5b60005b6004811015610fee578360c0018160048110610f7f57610f7f612dd6565b602002013515610fee57620f42408460c0018260048110610fa257610fa2612dd6565b60200201351015610fc657604051636dddf41160e11b815260040160405180910390fd5b60128054906000610fd683612dec565b91905055508080610fe690612dec565b915050610f61565b506012546000036110125760405163b0e7ef7b60e01b815260040160405180910390fd5b6032836101400135111561104757604051639088a55b60e01b815261014084013560048201526032602482015260440161048a565b61105460208401846124e1565b600280546001600160a01b0319166001600160a01b039290921691909117905561108460408401602085016124e1565b600b80546001600160a01b0319166001600160a01b03929092169190911790556040830135600e556060830135600f55608083013560105560a08301356011556110d4601360c08501600461240d565b506101408301356017556101608301356007556110f96101a0840161018085016124e1565b601880546001600160a01b0319166001600160a01b03929092169190911790556111276101a0840184612e05565b601991611135919083612eae565b5060018054819062ff0000191662010000820217905550600154601854600e54600f54601054601154601754600754600b546040516001600160a01b036301000000909a048a16997ff4d539cc7b1ecf0d043f59901b71b7b44a25563b872c28e85fe3cb72126dcb23996111c099908216989097909690959094601394919390926019921690612f67565b60405180910390a250801561120e576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60198054611220906129d4565b80601f016020809104026020016040519081016040528092919081815260200182805461124c906129d4565b80156112995780601f1061126e57610100808354040283529160200191611299565b820191906000526020600020905b81548152906001019060200180831161127c57829003601f168201915b505050505081565b600d81815481106112b157600080fd5b906000526020600020016000915090508054611220906129d4565b6002600054036112ee5760405162461bcd60e51b815260040161048a90612902565b6002600055600e5442101561132357600e546040516340968aa760e11b8152426004820152602481019190915260440161048a565b600060015462010000900460ff1660038111156113425761134261288e565b0361136d57600154604051630c987e3f60e31b815261048a9162010000900460ff16906004016128a4565b600260015462010000900460ff16600381111561138c5761138c61288e565b036113b757600154604051630c987e3f60e31b815261048a9162010000900460ff16906004016128a4565b600f54421180156113d85750601054600554600a546113d6919061294f565b105b156113ef576001805462ff00001916620300001790555b600360015462010000900460ff16600381111561140e5761140e61288e565b1461142c57604051639b61206360e01b815260040160405180910390fd5b336000908152600360209081526040808320805490849055600983528184208490556006909252822080546001600160a01b03191690559081900361148457604051631e9acf1760e31b815260040160405180910390fd5b60185461149c906001600160a01b0316303384611830565b60405181815233907fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae9060200160405180910390a2506001600055565b600060015462010000900460ff1660038111156114f8576114f861288e565b1461156a57610e10600e5461150d9190612dc3565b600f54101561151e5761151e613002565b60006011541161153057611530613002565b601154601054111561154457611544613002565b6032601754111561155757611557613002565b600a546005541061156a5761156a613002565b565b600154630100000090046001600160a01b03168061177557600161158f8161179a565b6115976118df565b6002600054036115b95760405162461bcd60e51b815260040161048a90612902565b6002600055600154630100000090046001600160a01b03166115de576115de83611890565b6001600160a01b038084166000908152600360209081526040808320546006835281842054600984528285205495168085526004909352908320805491949293909161162b90849061294f565b90915550506001600160a01b0385166000908152600460205260409020541561166757604051636939b91360e11b815260040160405180910390fd5b6001600160a01b038516600090815260036020526040812054600a80549192909161169390849061294f565b90915550506001600160a01b03851660009081526009602052604081205460058054919290916116c490849061294f565b90915550506001600160a01b038086166000908152600360209081526040808320839055600982528083208390556006825280832080546001600160a01b031916905560089091529020805460ff191690556018546117269116308785611830565b846001600160a01b03167faf65ecdc8a0d3ea90c8344c89e7001864fddf59dfdf41da2994463fe99049a598360405161176191815260200190565b60405180910390a250506001600055505050565b61177e81611890565b600161158f8161179a565b611796828260008061069c565b5050565b8060038111156117ac576117ac61288e565b60015462010000900460ff1660038111156117c9576117c961288e565b146117f457600154604051630c987e3f60e31b815261048a9162010000900460ff16906004016128a4565b8060038111156118065761180661288e565b60015462010000900460ff1660038111156118235761182361288e565b1461182d57600080fd5b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261188a908590611e63565b50505050565b336001600160a01b038216146118ca576040516350a5f40560e01b81523360048201526001600160a01b038216602482015260440161048a565b336001600160a01b0382161461182d57600080fd5b600e5442101561190f57600e546040516340968aa760e11b8152426004820152602481019190915260440161048a565b600f5442111561156a57600f5460405163b73065c160e01b8152426004820152602481019190915260440161048a565b6001600160a01b0384166000908152600860209081526040808320805460ff191686151517905560039091529020541561198c5760405163f45d43bf60e01b815260040160405180910390fd5b6000805b601254811015611a485760c88582600481106119ae576119ae612dd6565b602002015111156119f4578481600481106119cb576119cb612dd6565b6020020151604051633f25723360e01b8152600481019190915260c8602482015260440161048a565b848160048110611a0657611a06612dd6565b602002015160138260048110611a1e57611a1e612dd6565b0154611a2a9190613018565b611a349083612dc3565b915080611a4081612dec565b915050611990565b50620f4240811015611a6d576040516387af7e9360e01b815260040160405180910390fd5b828015611a7b575060075481105b15611aa757600754604051633319c7cb60e11b815261048a918391600401918252602082015260400190565b60006001600160a01b03831615801590611ac357506000601754115b15611b3d576001600160a01b0383166000908152600360205260408120549003611b00576040516355fbf60160e01b815260040160405180910390fd5b6001600160a01b03831660009081526008602052604090205460ff16611b39576040516335d001bd60e21b815260040160405180910390fd5b5060015b60008115611c1e576002606460175485611b579190613018565b611b619190613037565b611b6b9190613037565b9050611b77818461294f565b6001600160a01b038816600090815260096020526040812080549295508392909190611ba4908490612dc3565b90915550506001600160a01b03841660009081526004602052604081208054839290611bd1908490612dc3565b925050819055508060056000828254611bea9190612dc3565b90915550506001600160a01b03878116600090815260066020526040902080546001600160a01b0319169186169190911790555b6001600160a01b0387166000908152600360205260408120849055600a8054859290611c4b908490612dc3565b9091555050601154600554600a54611c63919061294f565b1115611c9157600a54601154604051632b67412f60e21b81526004810192909252602482015260440161048a565b601854611ca9906001600160a01b0316883086611830565b836001600160a01b0316876001600160a01b03167f6d47cedf2ff836145796116ccd8b27cb538f16621a1f844f0d1c2a58e23a499a8886858a604051611cf2949392919061304b565b60405180910390a350505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018690526000908190611d65908490605c0160405160208183030381529060405280519060200120611f3590919063ffffffff16565b9050856001600160a01b0316816001600160a01b031614611d9957604051638baa579f60e01b815260040160405180910390fd5b6001600160a01b0388163014611dc257604051638baa579f60e01b815260040160405180910390fd5b42856001600160401b031611611dfe5760405163034d689d60e51b81526001600160401b0342811660048301528616602482015260440161048a565b6001600160a01b0386166000908152600c6020908152604080832087845290915290205460ff1615611e555760405163433a6e1f60e11b81526001600160a01b03871660048201526024810185905260440161048a565b506001979650505050505050565b6000611eb8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f5b9092919063ffffffff16565b80519091501561120e5780806020019051810190611ed69190613076565b61120e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161048a565b6000806000611f448585611f74565b91509150611f5181611fb9565b5090505b92915050565b6060611f6a848460008561216a565b90505b9392505050565b6000808251604103611faa5760208301516040840151606085015160001a611f9e8782858561229b565b94509450505050611fb2565b506000905060025b9250929050565b6000816004811115611fcd57611fcd61288e565b03611fd55750565b6001816004811115611fe957611fe961288e565b036120315760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b604482015260640161048a565b60028160048111156120455761204561288e565b036120925760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161048a565b60038160048111156120a6576120a661288e565b036120fe5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161048a565b60048160048111156121125761211261288e565b0361182d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161048a565b6060824710156121cb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161048a565b6001600160a01b0385163b6122225760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161048a565b600080866001600160a01b0316858760405161223e9190613093565b60006040518083038185875af1925050503d806000811461227b576040519150601f19603f3d011682016040523d82523d6000602084013e612280565b606091505b509150915061229082828661237e565b979650505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b038311156122c85750600090506003612375565b8460ff16601b141580156122e057508460ff16601c14155b156122f15750600090506004612375565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612345573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661236e57600060019250925050612375565b9150600090505b94509492505050565b6060831561238d575081611f6d565b82511561239d5782518084602001fd5b8160405162461bcd60e51b815260040161048a919061287b565b8280548282559060005260206000209081019282156123fd579160200282015b828111156123fd57825182906123ed90826130af565b50916020019190600101906123d7565b50612409929150612447565b5090565b826004810192821561243b579160200282015b8281111561243b578235825591602001919060010190612420565b50612409929150612464565b8082111561240957600061245b8282612479565b50600101612447565b5b808211156124095760008155600101612465565b508054612485906129d4565b6000825580601f10612495575050565b601f01602090049060005260206000209081019061182d9190612464565b6000602082840312156124c557600080fd5b5035919050565b6001600160a01b038116811461182d57600080fd5b6000602082840312156124f357600080fd5b8135611f6d816124cc565b8060808101831015611f5557600080fd5b801515811461182d57600080fd5b80356125288161250f565b919050565b60008060008060e0858703121561254357600080fd5b843561254e816124cc565b935061255d86602087016124fe565b925060a085013561256d8161250f565b915060c085013561257d816124cc565b939692955090935050565b60008083601f84011261259a57600080fd5b5081356001600160401b038111156125b157600080fd5b602083019150836020828501011115611fb257600080fd5b600080600080604085870312156125df57600080fd5b84356001600160401b03808211156125f657600080fd5b61260288838901612588565b9096509450602087013591508082111561261b57600080fd5b5061262887828801612588565b95989497509550505050565b6000806040838503121561264757600080fd5b8235612652816124cc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561269e5761269e612660565b604052919050565b60006001600160401b038311156126bf576126bf612660565b6126d2601f8401601f1916602001612676565b90508281528383830111156126e657600080fd5b828260208301376000602084830101529392505050565b6000602080838503121561271057600080fd5b82356001600160401b038082111561272757600080fd5b818501915085601f83011261273b57600080fd5b81358181111561274d5761274d612660565b8060051b61275c858201612676565b918252838101850191858101908984111561277657600080fd5b86860192505b838310156127c7578235858111156127945760008081fd5b8601603f81018b136127a65760008081fd5b6127b78b89830135604084016126a6565b835250918601919086019061277c565b9998505050505050505050565b600080604083850312156127e757600080fd5b82356127f2816124cc565b915060208301356001600160401b0381111561280d57600080fd5b83016101c0818603121561282057600080fd5b809150509250929050565b60005b8381101561284657818101518382015260200161282e565b50506000910152565b6000815180845261286781602086016020860161282b565b601f01601f19169290920160200192915050565b602081526000611f6d602083018461284f565b634e487b7160e01b600052602160045260246000fd5b60208101600483106128c657634e487b7160e01b600052602160045260246000fd5b91905290565b60008060a083850312156128df57600080fd5b82356128ea816124cc565b91506128f984602085016124fe565b90509250929050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115611f5557611f55612939565b6001600160a01b0386811682528581166020830152610100820190608086604085013784151560c084015280841660e0840152509695505050505050565b6001600160a01b03858116825260e0820190608086602085013784151560a084015280841660c08401525095945050505050565b600181811c908216806129e857607f821691505b602082108103612a0857634e487b7160e01b600052602260045260246000fd5b50919050565b60008154612a1b816129d4565b808552602060018381168015612a385760018114612a5257612a80565b60ff1985168884015283151560051b880183019550612a80565b866000528260002060005b85811015612a785781548a8201860152908301908401612a5d565b890184019650505b505050505092915050565b600060a0820160018060a01b0388168352602060a08185015281885480845260c08601915060c08160051b8701019350896000528260002060005b82811015612af35787860360bf19018452612ae18683612a0e565b95509284019260019182019101612ac6565b50505050508281036040840152612b0a818761284f565b6001600160e01b03198616606085015290508281036080840152612b2e818561284f565b98975050505050505050565b8035612528816124cc565b60008060008060e08587031215612b5b57600080fd5b8435612b66816124cc565b93506020603f86018713612b7957600080fd5b604051608081018181106001600160401b0382111715612b9b57612b9b612660565b6040528060a0880189811115612bb057600080fd5b8389015b81811015612bcb5780358352918401918401612bb4565b50829650612bd88161251d565b955050505050612bea60c08601612b3a565b905092959194509250565b60008060008060808587031215612c0b57600080fd5b8435612c16816124cc565b935060208501356001600160401b038082168214612c3357600080fd5b9093506040860135925060608601359080821115612c5057600080fd5b508501601f81018713612c6257600080fd5b612c71878235602084016126a6565b91505092959194509250565b8060005b600481101561188a578151845260209384019390910190600101612c81565b6001600160a01b0388811682528781166020830152610140820190612cc86040840189612c7d565b86151560c084015280861660e0840152506001600160401b0384166101008301528261012083015298975050505050505050565b600081835483915060008581526020808220825b84811015612d8c57838254612d24816129d4565b60018281168015612d3c5760018114612d5257612d79565b60ff1984168b5282151560051b8b019450612d79565b868952878920895b84811015612d735781548d820152908301908901612d5a565b8c019550505b5092985050509190910190600101612d10565b5093979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612dbe57612dbe612d99565b500690565b80820180821115611f5557611f55612939565b634e487b7160e01b600052603260045260246000fd5b600060018201612dfe57612dfe612939565b5060010190565b6000808335601e19843603018112612e1c57600080fd5b8301803591506001600160401b03821115612e3657600080fd5b602001915036819003821315611fb257600080fd5b601f82111561120e57600081815260208120601f850160051c81016020861015612e725750805b601f850160051c820191505b81811015612e9157828155600101612e7e565b505050505050565b600019600383901b1c191660019190911b1790565b6001600160401b03831115612ec557612ec5612660565b612ed983612ed383546129d4565b83612e4b565b6000601f841160018114612f075760008515612ef55750838201355b612eff8682612e99565b8455506108d5565b600083815260209020601f19861690835b82811015612f385786850135825560209485019460019092019101612f18565b5086821015612f555760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60006101a060018060a01b038d16835260208c818501528b60408501528a606085015289608085015260a084018960005b6004811015612fb557815483529183019160019182019101612f98565b50505050866101208401528561014084015280610160840152612fda81840186612a0e565b915050612ff36101808301846001600160a01b03169052565b9b9a5050505050505050505050565b634e487b7160e01b600052600160045260246000fd5b600081600019048311821515161561303257613032612939565b500290565b60008261304657613046612d99565b500490565b60e081016130598287612c7d565b8460808301528360a083015282151560c083015295945050505050565b60006020828403121561308857600080fd5b8151611f6d8161250f565b600082516130a581846020870161282b565b9190910192915050565b81516001600160401b038111156130c8576130c8612660565b6130dc816130d684546129d4565b84612e4b565b602080601f83116001811461310b57600084156130f95750858301515b6131038582612e99565b865550612e91565b600085815260208120601f198616915b8281101561313a5788860151825594840194600190910190840161311b565b50858210156131585787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220f7234b4c036a44402b9c1567c5c16ab3616db2d52e1fdd0b0b1e872a73e5876364736f6c63430008100033",
  "devdoc": {
    "author": "Crowdtainer.eth",
    "kind": "dev",
    "methods": {
      "initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))": {
        "params": {
          "_campaignData": "Data defining all rules and values of this Crowdtainer instance.",
          "_owner": "The contract owning this Crowdtainer instance, if any (address(0x0) for no owner)."
        }
      },
      "join(address,uint256[4])": {
        "details": "This method is present to make wallet interactions more friendly, by requiring fewer parameters for projects with referral system disabled.Requires IERC20 permit.",
        "params": {
          "_quantities": "Array with the number of units desired for each product.",
          "_wallet": "The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0)."
        }
      },
      "join(address,uint256[4],bool,address)": {
        "details": "Requires IERC20 permit.referrer is the wallet address of a previous participant.if `enableReferral` is true, and the user decides to leave after the wallet has been used to claim a discount,       then the full value can't be claimed if deciding to leave the project.A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).      To 'update' an order, the user must first 'leave' then join again with the new values.",
        "params": {
          "_enableReferral": "Informs whether the user would like to be eligible to collect rewards for being referred.",
          "_quantities": "Array with the number of units desired for each product.",
          "_referrer": "Optional referral code to be used to claim a discount.",
          "_wallet": "The wallet that is joining the Crowdtainer. Must be the msg.sender if Crowdtainer owner is address(0x0)."
        }
      },
      "joinWithSignature(bytes,bytes)": {
        "details": "Requires IRC20 permit.",
        "params": {
          "extraData": "ABI encoded parameters for _join() method.",
          "result": "(uint64, bytes) of signature validity and the signature itself."
        }
      },
      "leave(address)": {
        "details": "Only allowed if the respective Crowdtainer is in active `Funding` state.",
        "params": {
          "_wallet": "The wallet that is leaving the Crowdtainer."
        }
      }
    },
    "stateVariables": {
      "owner": {
        "details": "Has permissions to call: initialize(), join() and leave() functions. These functions are optionallygated so that an owner contract can do special accounting (such as an EIP721-compliant contract as its owner)."
      },
      "shippingAgent": {
        "details": "Allowed to call getPaidAndDeliver() and set signers."
      },
      "unitPricePerType": {
        "details": "The price should be given in the number of smallest unit for precision (e.g 10^18 == 1 DAI)."
      }
    },
    "title": "Crowdtainer contract",
    "version": 1
  },
  "userdoc": {
    "events": {
      "CCIPURLChanged(string[])": {
        "notice": "Emmited when CCIP-read URLs changes."
      },
      "CrowdtainerCreated(address,address)": {
        "notice": "Emmited when a Crowdtainer is created."
      },
      "CrowdtainerInitialized(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,string,address)": {
        "notice": "Emmited when a Crowdtainer is initialized."
      },
      "Joined(address,uint256[4],address,uint256,uint256,bool)": {
        "notice": "Emmited when a user joins, signalling participation intent."
      },
      "SignerChanged(address)": {
        "notice": "Emmited when the signer changes."
      }
    },
    "kind": "user",
    "methods": {
      "abortProject()": {
        "notice": "Function used by project deployer to signal that it is no longer possible to the ship service or product.         This puts the project into `Failed` state and participants can withdraw their funds."
      },
      "accumulatedRewards()": {
        "notice": "Total rewards claimable for project."
      },
      "accumulatedRewardsOf(address)": {
        "notice": "Maps accounts to accumulated referral rewards."
      },
      "claimFunds()": {
        "notice": "Function used by participants to withdrawl funds from a failed/expired project."
      },
      "claimRewards()": {
        "notice": "Function used by participants to withdrawl referral rewards from a successful project."
      },
      "discountForUser(address)": {
        "notice": "Maps the total discount for each user."
      },
      "expireTime()": {
        "notice": "Time after which it is no longer possible for the service or product provider to withdraw funds."
      },
      "getPaidAndDeliver()": {
        "notice": "Function used by the service provider to signal commitment to ship service or product by withdrawing/receiving the payment."
      },
      "getSigner()": {
        "notice": "Address used for signing authorizations. This allows for arbitrary off-chain mechanisms to apply law-based restrictions and/or combat bots squatting offered items.If signer equals to address(0), no restriction is applied."
      },
      "initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))": {
        "notice": "Initializes a Crowdtainer."
      },
      "join(address,uint256[4])": {
        "notice": "Join the Crowdtainer project."
      },
      "join(address,uint256[4],bool,address)": {
        "notice": "Join the Crowdtainer project with optional referral and discount."
      },
      "joinWithSignature(bytes,bytes)": {
        "notice": "Allows joining by means of CCIP-READ (EIP-3668)."
      },
      "leave(address)": {
        "notice": "Leave the Crowdtainer and withdraw deposited funds given when joining.Calling this method signals that the participant is no longer interested in the project."
      },
      "legalContractURI()": {
        "notice": "URI string pointing to the legal terms and conditions ruling this project."
      },
      "numberOfProducts()": {
        "notice": "Number of products/services variations offered by this project."
      },
      "openingTime()": {
        "notice": "Time after which it is possible to join this Crowdtainer."
      },
      "owner()": {
        "notice": "Owner of this contract."
      },
      "referralRate()": {
        "notice": "Half of the value act as a discount for a new participant using an existing referral code, and the other half is given for the participant making a referral. The former is similar to the 'cash discount device' in stamp era, while the latter is a reward for contributing to the Crowdtainer by incentivising participation from others."
      },
      "referrerOfReferee(address)": {
        "notice": "Maps referee to referrer."
      },
      "shippingAgent()": {
        "notice": "The entity or person responsible for the delivery of this crowdtainer project."
      },
      "targetMaximum()": {
        "notice": "Amount in ERC20 units after which no further participation is possible."
      },
      "targetMinimum()": {
        "notice": "Minimum amount in ERC20 units required for Crowdtainer to be considered to be successful."
      },
      "token()": {
        "notice": "Address of the ERC20 token used for payment."
      },
      "totalValueRaised()": {
        "notice": "The total value raised/accumulated by this contract."
      },
      "unitPricePerType(uint256)": {
        "notice": "The price for each unit type."
      },
      "urls(uint256)": {
        "notice": "URL templates to the service provider's gateways that implement the CCIP-read protocol."
      },
      "usedNonces(address,bytes32)": {
        "notice": "Mapping of addresses to random nonces; Used for transaction replay protection."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 244,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_initialized",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 92,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_initializing",
        "offset": 1,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 3275,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "crowdtainerState",
        "offset": 2,
        "slot": "1",
        "type": "t_enum(CrowdtainerState)6340"
      },
      {
        "astId": 3278,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "owner",
        "offset": 3,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3281,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "shippingAgent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 3286,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "costForWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3291,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "accumulatedRewardsOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3294,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "accumulatedRewards",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3299,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referrerOfReferee",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 3301,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referralEligibilityValue",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3306,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "enableReferral",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3311,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "discountForUser",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3314,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "totalValueRaised",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 3317,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "signer",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 3324,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "usedNonces",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 3328,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "urls",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 3497,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "openingTime",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 3500,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "expireTime",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 3503,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "targetMinimum",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 3506,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "targetMaximum",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 3509,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "numberOfProducts",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 3514,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "unitPricePerType",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)4_storage"
      },
      {
        "astId": 3517,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referralRate",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 3521,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "token",
        "offset": 0,
        "slot": "24",
        "type": "t_contract(IERC20)351"
      },
      {
        "astId": 3524,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "legalContractURI",
        "offset": 0,
        "slot": "25",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)4_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[4]",
        "numberOfBytes": "128"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)351": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(CrowdtainerState)6340": {
        "encoding": "inplace",
        "label": "enum CrowdtainerState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}