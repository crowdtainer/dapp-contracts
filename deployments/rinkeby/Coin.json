{
  "address": "0xD1A6C6aA78102B6187Cc41c8DCc9F2908A2d6527",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddAuthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RemoveAuthorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorizedAccounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeAuthorization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcb9ba16565cb8625e7133a5b48a0f0705cf27cdf6932f8be73740e7466ba54d4",
  "receipt": {
    "to": null,
    "from": "0x83858094EA2c475F1E91e4AC09C64255EaCB0DfF",
    "contractAddress": "0xD1A6C6aA78102B6187Cc41c8DCc9F2908A2d6527",
    "transactionIndex": 23,
    "gasUsed": "2291481",
    "logsBloom": "0x
    "blockHash": "0xf45903cecee9515856625a55555fe787f31c9005ae5ee79970937a618b6e11cf",
    "transactionHash": "0xcb9ba16565cb8625e7133a5b48a0f0705cf27cdf6932f8be73740e7466ba54d4",
    "logs": [
      {
        "transactionIndex": 23,
        "blockNumber": 10411489,
        "transactionHash": "0xcb9ba16565cb8625e7133a5b48a0f0705cf27cdf6932f8be73740e7466ba54d4",
        "address": "0xD1A6C6aA78102B6187Cc41c8DCc9F2908A2d6527",
        "topics": [
          "0x599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f7000102"
        ],
        "data": "0x00000000000000000000000083858094ea2c475f1e91e4ac09c64255eacb0dff",
        "logIndex": 26,
        "blockHash": "0xf45903cecee9515856625a55555fe787f31c9005ae5ee79970937a618b6e11cf"
      }
    ],
    "blockNumber": 10411489,
    "cumulativeGasUsed": "14007883",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "FakeERC20",
    "TST",
    "4"
  ],
  "numDeployments": 2,
  "solcInputHash": "96a933fbba3a0bd40e59c78cafcf1d6d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RemoveAuthorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedAccounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAuthorization(address)\":{\"params\":{\"account\":\"Account to add auth to\"}},\"removeAuthorization(address)\":{\"params\":{\"account\":\"Account to remove auth from\"}}},\"stateVariables\":{\"allowance\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addAuthorization(address)\":{\"notice\":\"Add auth to an account\"},\"removeAuthorization(address)\":{\"notice\":\"Remove auth from an account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/external/Coin.sol\":\"Coin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"src/contracts/external/Coin.sol\":{\"content\":\"// SPDX-License-Identifier: GNU-AGPLv3\\n// Copyright (C) 2017, 2018, 2019 dbrock, rain, mrchico\\n\\n// This program is free software: you can redistribute it and/or modify\\n// it under the terms of the GNU Affero General Public License as published by\\n// the Free Software Foundation, either version 3 of the License, or\\n// (at your option) any later version.\\n//\\n// This program is distributed in the hope that it will be useful,\\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n// GNU Affero General Public License for more details.\\n//\\n// You should have received a copy of the GNU Affero General Public License\\n// along with this program.  If not, see <https://www.gnu.org/licenses/>.\\n\\npragma solidity 0.8.11;\\n\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\n\\ncontract Coin is IERC20 {\\n    // --- Auth ---\\n    mapping(address => uint256) public authorizedAccounts;\\n\\n    /**\\n     * @notice Add auth to an account\\n     * @param account Account to add auth to\\n     */\\n    function addAuthorization(address account) external isAuthorized {\\n        authorizedAccounts[account] = 1;\\n        emit AddAuthorization(account);\\n    }\\n\\n    /**\\n     * @notice Remove auth from an account\\n     * @param account Account to remove auth from\\n     */\\n    function removeAuthorization(address account) external isAuthorized {\\n        authorizedAccounts[account] = 0;\\n        emit RemoveAuthorization(account);\\n    }\\n\\n    /**\\n     * @notice Checks whether msg.sender can call an authed function\\n     **/\\n    modifier isAuthorized() {\\n        require(\\n            authorizedAccounts[msg.sender] == 1,\\n            \\\"Coin/account-not-authorized\\\"\\n        );\\n        _;\\n    }\\n\\n    // --- ERC20 Data ---\\n    // The name of this coin\\n    string public name;\\n    // The symbol of this coin\\n    string public symbol;\\n    // The version of this Coin contract\\n    string public version = \\\"1\\\";\\n    // The number of decimals that this coin has\\n    uint8 public constant decimals = 18;\\n\\n    // The id of the chain where this coin was deployed\\n    uint256 public chainId;\\n    // The total supply of this coin\\n    uint256 public totalSupply;\\n\\n    // Mapping of coin balances\\n    mapping(address => uint256) public balanceOf;\\n    // Mapping of allowances\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    // Mapping of nonces used for permits\\n    mapping(address => uint256) public nonces;\\n\\n    // --- Events ---\\n    event AddAuthorization(address account);\\n    event RemoveAuthorization(address account);\\n\\n    // event Approval(address indexed src, address indexed guy, uint256 amount);\\n    // event Transfer(address indexed src, address indexed dst, uint256 amount);\\n\\n    // --- Math ---\\n    function addition(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x + y) >= x, \\\"Coin/add-overflow\\\");\\n    }\\n\\n    function subtract(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        require((z = x - y) <= x, \\\"Coin/sub-underflow\\\");\\n    }\\n\\n    /* solhint-disable var-name-mixedcase */\\n    // --- EIP712 niceties ---\\n    bytes32 public DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address holder,address spender,uint256 nonce,uint256 expiry,bool allowed)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb;\\n\\n    /* solhint-enable var-name-mixedcase */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        uint256 chainId_\\n    ) {\\n        authorizedAccounts[msg.sender] = 1;\\n        name = name_;\\n        symbol = symbol_;\\n        chainId = chainId_;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\n                    \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                ),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(version)),\\n                chainId_,\\n                address(this)\\n            )\\n        );\\n        emit AddAuthorization(msg.sender);\\n    }\\n\\n    // --- Token ---\\n    /*\\n     * @notice Transfer coins to another address\\n     * @param dst The address to transfer coins to\\n     * @param amount The amount of coins to transfer\\n     */\\n    function transfer(address dst, uint256 amount) external returns (bool) {\\n        return transferFrom(msg.sender, dst, amount);\\n    }\\n\\n    /*\\n     * @notice Transfer coins from a source address to a destination address (if allowed)\\n     * @param src The address from which to transfer coins\\n     * @param dst The address that will receive the coins\\n     * @param amount The amount of coins to transfer\\n     */\\n    function transferFrom(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) public returns (bool) {\\n        require(dst != address(0), \\\"Coin/null-dst\\\");\\n        require(dst != address(this), \\\"Coin/dst-cannot-be-this-contract\\\");\\n        require(balanceOf[src] >= amount, \\\"Coin/insufficient-balance\\\");\\n        if (\\n            src != msg.sender && allowance[src][msg.sender] != type(uint128).max\\n        ) {\\n            require(\\n                allowance[src][msg.sender] >= amount,\\n                \\\"Coin/insufficient-allowance\\\"\\n            );\\n            allowance[src][msg.sender] = subtract(\\n                allowance[src][msg.sender],\\n                amount\\n            );\\n        }\\n        balanceOf[src] = subtract(balanceOf[src], amount);\\n        balanceOf[dst] = addition(balanceOf[dst], amount);\\n        emit Transfer(src, dst, amount);\\n        return true;\\n    }\\n\\n    /*\\n     * @notice Mint new coins\\n     * @param usr The address for which to mint coins\\n     * @param amount The amount of coins to mint\\n     */\\n    function mint(address usr, uint256 amount) external isAuthorized {\\n        balanceOf[usr] = addition(balanceOf[usr], amount);\\n        totalSupply = addition(totalSupply, amount);\\n        emit Transfer(address(0), usr, amount);\\n    }\\n\\n    /*\\n     * @notice Burn coins from an address\\n     * @param usr The address that will have its coins burned\\n     * @param amount The amount of coins to burn\\n     */\\n    function burn(address usr, uint256 amount) external {\\n        require(balanceOf[usr] >= amount, \\\"Coin/insufficient-balance\\\");\\n        if (\\n            usr != msg.sender && allowance[usr][msg.sender] != type(uint128).max\\n        ) {\\n            require(\\n                allowance[usr][msg.sender] >= amount,\\n                \\\"Coin/insufficient-allowance\\\"\\n            );\\n            allowance[usr][msg.sender] = subtract(\\n                allowance[usr][msg.sender],\\n                amount\\n            );\\n        }\\n        balanceOf[usr] = subtract(balanceOf[usr], amount);\\n        totalSupply = subtract(totalSupply, amount);\\n        emit Transfer(usr, address(0), amount);\\n    }\\n\\n    /*\\n     * @notice Change the transfer/burn allowance that another address has on your behalf\\n     * @param usr The address whose allowance is changed\\n     * @param amount The new total allowance for the usr\\n     */\\n    function approve(address usr, uint256 amount) external returns (bool) {\\n        allowance[msg.sender][usr] = amount;\\n        emit Approval(msg.sender, usr, amount);\\n        return true;\\n    }\\n\\n    // --- Alias ---\\n    /*\\n     * @notice Send coins to another address\\n     * @param usr The address to send tokens to\\n     * @param amount The amount of coins to send\\n     */\\n    function push(address usr, uint256 amount) external {\\n        transferFrom(msg.sender, usr, amount);\\n    }\\n\\n    /*\\n     * @notice Transfer coins from another address to your address\\n     * @param usr The address to take coins from\\n     * @param amount The amount of coins to take from the usr\\n     */\\n    function pull(address usr, uint256 amount) external {\\n        transferFrom(usr, msg.sender, amount);\\n    }\\n\\n    /*\\n     * @notice Transfer coins from another address to a destination address (if allowed)\\n     * @param src The address to transfer coins from\\n     * @param dst The address to transfer coins to\\n     * @param amount The amount of coins to transfer\\n     */\\n    function move(\\n        address src,\\n        address dst,\\n        uint256 amount\\n    ) external {\\n        transferFrom(src, dst, amount);\\n    }\\n\\n    // --- Approve by signature ---\\n    /*\\n     * @notice Submit a signed message that modifies an allowance for a specific address\\n     */\\n    function permit(\\n        address holder,\\n        address spender,\\n        uint256 nonce,\\n        uint256 expiry,\\n        bool allowed,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        holder,\\n                        spender,\\n                        nonce,\\n                        expiry,\\n                        allowed\\n                    )\\n                )\\n            )\\n        );\\n\\n        require(holder != address(0), \\\"Coin/invalid-address-0\\\");\\n        require(holder == ecrecover(digest, v, r, s), \\\"Coin/invalid-permit\\\");\\n        require(\\n            expiry == 0 || block.timestamp <= expiry,\\n            \\\"Coin/permit-expired\\\"\\n        );\\n        require(nonce == nonces[holder]++, \\\"Coin/invalid-nonce\\\");\\n        uint256 wad = allowed ? type(uint128).max : 0;\\n        allowance[holder][spender] = wad;\\n        emit Approval(holder, spender, wad);\\n    }\\n}\\n\",\"keccak256\":\"0xe1ac528024f872cb4cb7cddb6355394cdd564df809de550f32edcacc851ad1a2\",\"license\":\"GNU-AGPLv3\"}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506003908051906020019062000051929190620001cb565b503480156200005f57600080fd5b5060405162002cb338038062002cb3833981810160405281019062000085919062000453565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260019080519060200190620000e1929190620001cb565b508160029080519060200190620000fa929190620001cb565b50806004819055507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6001604051620001349190620005fd565b604051809103902060036040516200014d9190620005fd565b604051809103902083306040516020016200016d95949392919062000687565b604051602081830303815290604052805190602001206009819055507f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f700010233604051620001ba9190620006e4565b60405180910390a150505062000701565b828054620001d9906200051c565b90600052602060002090601f016020900481019282620001fd576000855562000249565b82601f106200021857805160ff191683800117855562000249565b8280016001018555821562000249579182015b82811115620002485782518255916020019190600101906200022b565b5b5090506200025891906200025c565b5090565b5b80821115620002775760008160009055506001016200025d565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002e48262000299565b810181811067ffffffffffffffff82111715620003065762000305620002aa565b5b80604052505050565b60006200031b6200027b565b9050620003298282620002d9565b919050565b600067ffffffffffffffff8211156200034c576200034b620002aa565b5b620003578262000299565b9050602081019050919050565b60005b838110156200038457808201518184015260208101905062000367565b8381111562000394576000848401525b50505050565b6000620003b1620003ab846200032e565b6200030f565b905082815260208101848484011115620003d057620003cf62000294565b5b620003dd84828562000364565b509392505050565b600082601f830112620003fd57620003fc6200028f565b5b81516200040f8482602086016200039a565b91505092915050565b6000819050919050565b6200042d8162000418565b81146200043957600080fd5b50565b6000815190506200044d8162000422565b92915050565b6000806000606084860312156200046f576200046e62000285565b5b600084015167ffffffffffffffff81111562000490576200048f6200028a565b5b6200049e86828701620003e5565b935050602084015167ffffffffffffffff811115620004c257620004c16200028a565b5b620004d086828701620003e5565b9250506040620004e3868287016200043c565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053557607f821691505b602082108114156200054c576200054b620004ed565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815462000581816200051c565b6200058d818662000552565b94506001821660008114620005ab5760018114620005bd57620005f4565b60ff19831686528186019350620005f4565b620005c8856200055d565b60005b83811015620005ec57815481890152600182019150602081019050620005cb565b838801955050505b50505092915050565b60006200060b828462000572565b915081905092915050565b6000819050919050565b6200062b8162000616565b82525050565b6200063c8162000418565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200066f8262000642565b9050919050565b620006818162000662565b82525050565b600060a0820190506200069e600083018862000620565b620006ad602083018762000620565b620006bc604083018662000620565b620006cb606083018562000631565b620006da608083018462000676565b9695505050505050565b6000602082019050620006fb600083018462000676565b92915050565b6125a280620007116000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c35780639dc29fac1161007c5780639dc29fac146103a2578063a9059cbb146103be578063b753a98c146103ee578063bb35783b1461040a578063dd62ed3e14610426578063f2d5d56b146104565761014d565b806370a08231146102ce5780637ecebe00146102fe5780638fcbaf0c1461032e57806394f3f81d1461034a57806395d89b41146103665780639a8a0592146103845761014d565b806330adf81f1161011557806330adf81f1461021e578063313ce5671461023c57806335b281531461025a5780633644e5151461027657806340c10f191461029457806354fd4d50146102b05761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be57806324ba5884146101ee575b600080fd5b61015a610472565b6040516101679190611a26565b60405180910390f35b61018a60048036038101906101859190611ae1565b610500565b6040516101979190611b3c565b60405180910390f35b6101a86105f2565b6040516101b59190611b66565b60405180910390f35b6101d860048036038101906101d39190611b81565b6105f8565b6040516101e59190611b3c565b60405180910390f35b61020860048036038101906102039190611bd4565b610b77565b6040516102159190611b66565b60405180910390f35b610226610b8f565b6040516102339190611c1a565b60405180910390f35b610244610bb6565b6040516102519190611c51565b60405180910390f35b610274600480360381019061026f9190611bd4565b610bbb565b005b61027e610cba565b60405161028b9190611c1a565b60405180910390f35b6102ae60048036038101906102a99190611ae1565b610cc0565b005b6102b8610e49565b6040516102c59190611a26565b60405180910390f35b6102e860048036038101906102e39190611bd4565b610ed7565b6040516102f59190611b66565b60405180910390f35b61031860048036038101906103139190611bd4565b610eef565b6040516103259190611b66565b60405180910390f35b61034860048036038101906103439190611cf0565b610f07565b005b610364600480360381019061035f9190611bd4565b6112be565b005b61036e6113bd565b60405161037b9190611a26565b60405180910390f35b61038c61144b565b6040516103999190611b66565b60405180910390f35b6103bc60048036038101906103b79190611ae1565b611451565b005b6103d860048036038101906103d39190611ae1565b611870565b6040516103e59190611b3c565b60405180910390f35b61040860048036038101906104039190611ae1565b611885565b005b610424600480360381019061041f9190611b81565b611895565b005b610440600480360381019061043b9190611da6565b6118a6565b60405161044d9190611b66565b60405180910390f35b610470600480360381019061046b9190611ae1565b6118cb565b005b6001805461047f90611e15565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab90611e15565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b505050505081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105e09190611b66565b60405180910390a36001905092915050565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611e93565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf90611eff565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190611f6b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561082457506fffffffffffffffffffffffffffffffff8016600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156109ef5781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611fd7565b60405180910390fd5b61096e600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836118db565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610a38600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836118db565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac4600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611934565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b649190611b66565b60405180910390a3600190509392505050565b60006020528060005260406000206000915090505481565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390612043565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f700010281604051610caf9190612072565b60405180910390a150565b60095481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890612043565b60405180910390fd5b610d8a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611934565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dd960055482611934565b6005819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e3d9190611b66565b60405180910390a35050565b60038054610e5690611e15565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8290611e15565b8015610ecf5780601f10610ea457610100808354040283529160200191610ecf565b820191906000526020600020905b815481529060010190602001808311610eb257829003601f168201915b505050505081565b60066020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001610f4a9695949392919061208d565b60405160208183030381529060405280519060200120604051602001610f71929190612166565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff0906121e9565b60405180910390fd5b6001818585856040516000815260200160405260405161101c9493929190612209565b6020604051602081039080840390855afa15801561103e573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac9061229a565b60405180910390fd5b60008614806110c45750854211155b611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa90612306565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061115390612355565b919050558714611198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118f906123ea565b60405180910390fd5b6000856111a65760006111b8565b6fffffffffffffffffffffffffffffffff5b6fffffffffffffffffffffffffffffffff16905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112aa9190611b66565b60405180910390a350505050505050505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133690612043565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b903816040516113b29190612072565b60405180910390a150565b600280546113ca90611e15565b80601f01602080910402602001604051908101604052809291908181526020018280546113f690611e15565b80156114435780601f1061141857610100808354040283529160200191611443565b820191906000526020600020905b81548152906001019060200180831161142657829003601f168201915b505050505081565b60045481565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156114d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ca90611f6b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561159d57506fffffffffffffffffffffffffffffffff8016600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156117685780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165890611fd7565b60405180910390fd5b6116e7600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826118db565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6117b1600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826118db565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611800600554826118db565b600581905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118649190611b66565b60405180910390a35050565b600061187d3384846105f8565b905092915050565b6118903383836105f8565b505050565b6118a08383836105f8565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6118d68233836105f8565b505050565b60008282846118ea919061240a565b915081111561192e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119259061248a565b60405180910390fd5b92915050565b600082828461194391906124aa565b9150811015611987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197e9061254c565b60405180910390fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119c75780820151818401526020810190506119ac565b838111156119d6576000848401525b50505050565b6000601f19601f8301169050919050565b60006119f88261198d565b611a028185611998565b9350611a128185602086016119a9565b611a1b816119dc565b840191505092915050565b60006020820190508181036000830152611a4081846119ed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a7882611a4d565b9050919050565b611a8881611a6d565b8114611a9357600080fd5b50565b600081359050611aa581611a7f565b92915050565b6000819050919050565b611abe81611aab565b8114611ac957600080fd5b50565b600081359050611adb81611ab5565b92915050565b60008060408385031215611af857611af7611a48565b5b6000611b0685828601611a96565b9250506020611b1785828601611acc565b9150509250929050565b60008115159050919050565b611b3681611b21565b82525050565b6000602082019050611b516000830184611b2d565b92915050565b611b6081611aab565b82525050565b6000602082019050611b7b6000830184611b57565b92915050565b600080600060608486031215611b9a57611b99611a48565b5b6000611ba886828701611a96565b9350506020611bb986828701611a96565b9250506040611bca86828701611acc565b9150509250925092565b600060208284031215611bea57611be9611a48565b5b6000611bf884828501611a96565b91505092915050565b6000819050919050565b611c1481611c01565b82525050565b6000602082019050611c2f6000830184611c0b565b92915050565b600060ff82169050919050565b611c4b81611c35565b82525050565b6000602082019050611c666000830184611c42565b92915050565b611c7581611b21565b8114611c8057600080fd5b50565b600081359050611c9281611c6c565b92915050565b611ca181611c35565b8114611cac57600080fd5b50565b600081359050611cbe81611c98565b92915050565b611ccd81611c01565b8114611cd857600080fd5b50565b600081359050611cea81611cc4565b92915050565b600080600080600080600080610100898b031215611d1157611d10611a48565b5b6000611d1f8b828c01611a96565b9850506020611d308b828c01611a96565b9750506040611d418b828c01611acc565b9650506060611d528b828c01611acc565b9550506080611d638b828c01611c83565b94505060a0611d748b828c01611caf565b93505060c0611d858b828c01611cdb565b92505060e0611d968b828c01611cdb565b9150509295985092959890939650565b60008060408385031215611dbd57611dbc611a48565b5b6000611dcb85828601611a96565b9250506020611ddc85828601611a96565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2d57607f821691505b60208210811415611e4157611e40611de6565b5b50919050565b7f436f696e2f6e756c6c2d64737400000000000000000000000000000000000000600082015250565b6000611e7d600d83611998565b9150611e8882611e47565b602082019050919050565b60006020820190508181036000830152611eac81611e70565b9050919050565b7f436f696e2f6473742d63616e6e6f742d62652d746869732d636f6e7472616374600082015250565b6000611ee9602083611998565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f436f696e2f696e73756666696369656e742d62616c616e636500000000000000600082015250565b6000611f55601983611998565b9150611f6082611f1f565b602082019050919050565b60006020820190508181036000830152611f8481611f48565b9050919050565b7f436f696e2f696e73756666696369656e742d616c6c6f77616e63650000000000600082015250565b6000611fc1601b83611998565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b7f436f696e2f6163636f756e742d6e6f742d617574686f72697a65640000000000600082015250565b600061202d601b83611998565b915061203882611ff7565b602082019050919050565b6000602082019050818103600083015261205c81612020565b9050919050565b61206c81611a6d565b82525050565b60006020820190506120876000830184612063565b92915050565b600060c0820190506120a26000830189611c0b565b6120af6020830188612063565b6120bc6040830187612063565b6120c96060830186611b57565b6120d66080830185611b57565b6120e360a0830184611b2d565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061212f6002836120ee565b915061213a826120f9565b600282019050919050565b6000819050919050565b61216061215b82611c01565b612145565b82525050565b600061217182612122565b915061217d828561214f565b60208201915061218d828461214f565b6020820191508190509392505050565b7f436f696e2f696e76616c69642d616464726573732d3000000000000000000000600082015250565b60006121d3601683611998565b91506121de8261219d565b602082019050919050565b60006020820190508181036000830152612202816121c6565b9050919050565b600060808201905061221e6000830187611c0b565b61222b6020830186611c42565b6122386040830185611c0b565b6122456060830184611c0b565b95945050505050565b7f436f696e2f696e76616c69642d7065726d697400000000000000000000000000600082015250565b6000612284601383611998565b915061228f8261224e565b602082019050919050565b600060208201905081810360008301526122b381612277565b9050919050565b7f436f696e2f7065726d69742d6578706972656400000000000000000000000000600082015250565b60006122f0601383611998565b91506122fb826122ba565b602082019050919050565b6000602082019050818103600083015261231f816122e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236082611aab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561239357612392612326565b5b600182019050919050565b7f436f696e2f696e76616c69642d6e6f6e63650000000000000000000000000000600082015250565b60006123d4601283611998565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b600061241582611aab565b915061242083611aab565b92508282101561243357612432612326565b5b828203905092915050565b7f436f696e2f7375622d756e646572666c6f770000000000000000000000000000600082015250565b6000612474601283611998565b915061247f8261243e565b602082019050919050565b600060208201905081810360008301526124a381612467565b9050919050565b60006124b582611aab565b91506124c083611aab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124f5576124f4612326565b5b828201905092915050565b7f436f696e2f6164642d6f766572666c6f77000000000000000000000000000000600082015250565b6000612536601183611998565b915061254182612500565b602082019050919050565b6000602082019050818103600083015261256581612529565b905091905056fea2646970667358221220673ad46d628e6cc1bf82a9599eaea99826371bc6c2b8f90eddfc8deab540bc4f64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c35780639dc29fac1161007c5780639dc29fac146103a2578063a9059cbb146103be578063b753a98c146103ee578063bb35783b1461040a578063dd62ed3e14610426578063f2d5d56b146104565761014d565b806370a08231146102ce5780637ecebe00146102fe5780638fcbaf0c1461032e57806394f3f81d1461034a57806395d89b41146103665780639a8a0592146103845761014d565b806330adf81f1161011557806330adf81f1461021e578063313ce5671461023c57806335b281531461025a5780633644e5151461027657806340c10f191461029457806354fd4d50146102b05761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd146101a057806323b872dd146101be57806324ba5884146101ee575b600080fd5b61015a610472565b6040516101679190611a26565b60405180910390f35b61018a60048036038101906101859190611ae1565b610500565b6040516101979190611b3c565b60405180910390f35b6101a86105f2565b6040516101b59190611b66565b60405180910390f35b6101d860048036038101906101d39190611b81565b6105f8565b6040516101e59190611b3c565b60405180910390f35b61020860048036038101906102039190611bd4565b610b77565b6040516102159190611b66565b60405180910390f35b610226610b8f565b6040516102339190611c1a565b60405180910390f35b610244610bb6565b6040516102519190611c51565b60405180910390f35b610274600480360381019061026f9190611bd4565b610bbb565b005b61027e610cba565b60405161028b9190611c1a565b60405180910390f35b6102ae60048036038101906102a99190611ae1565b610cc0565b005b6102b8610e49565b6040516102c59190611a26565b60405180910390f35b6102e860048036038101906102e39190611bd4565b610ed7565b6040516102f59190611b66565b60405180910390f35b61031860048036038101906103139190611bd4565b610eef565b6040516103259190611b66565b60405180910390f35b61034860048036038101906103439190611cf0565b610f07565b005b610364600480360381019061035f9190611bd4565b6112be565b005b61036e6113bd565b60405161037b9190611a26565b60405180910390f35b61038c61144b565b6040516103999190611b66565b60405180910390f35b6103bc60048036038101906103b79190611ae1565b611451565b005b6103d860048036038101906103d39190611ae1565b611870565b6040516103e59190611b3c565b60405180910390f35b61040860048036038101906104039190611ae1565b611885565b005b610424600480360381019061041f9190611b81565b611895565b005b610440600480360381019061043b9190611da6565b6118a6565b60405161044d9190611b66565b60405180910390f35b610470600480360381019061046b9190611ae1565b6118cb565b005b6001805461047f90611e15565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab90611e15565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b505050505081565b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516105e09190611b66565b60405180910390a36001905092915050565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611e93565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cf90611eff565b60405180910390fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190611f6b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561082457506fffffffffffffffffffffffffffffffff8016600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156109ef5781600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611fd7565b60405180910390fd5b61096e600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836118db565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b610a38600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054836118db565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac4600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611934565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b649190611b66565b60405180910390a3600190509392505050565b60006020528060005260406000206000915090505481565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b81565b601281565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390612043565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f599a298163e1678bb1c676052a8930bf0b8a1261ed6e01b8a2391e55f700010281604051610caf9190612072565b60405180910390a150565b60095481565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890612043565b60405180910390fd5b610d8a600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611934565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610dd960055482611934565b6005819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e3d9190611b66565b60405180910390a35050565b60038054610e5690611e15565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8290611e15565b8015610ecf5780601f10610ea457610100808354040283529160200191610ecf565b820191906000526020600020905b815481529060010190602001808311610eb257829003601f168201915b505050505081565b60066020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b60006009547fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb60001b8a8a8a8a8a604051602001610f4a9695949392919061208d565b60405160208183030381529060405280519060200120604051602001610f71929190612166565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff0906121e9565b60405180910390fd5b6001818585856040516000815260200160405260405161101c9493929190612209565b6020604051602081039080840390855afa15801561103e573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16146110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac9061229a565b60405180910390fd5b60008614806110c45750854211155b611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa90612306565b60405180910390fd5b600860008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061115390612355565b919050558714611198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118f906123ea565b60405180910390fd5b6000856111a65760006111b8565b6fffffffffffffffffffffffffffffffff5b6fffffffffffffffffffffffffffffffff16905080600760008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516112aa9190611b66565b60405180910390a350505050505050505050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133690612043565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f8834a87e641e9716be4f34527af5d23e11624f1ddeefede6ad75a9acfc31b903816040516113b29190612072565b60405180910390a150565b600280546113ca90611e15565b80601f01602080910402602001604051908101604052809291908181526020018280546113f690611e15565b80156114435780601f1061141857610100808354040283529160200191611443565b820191906000526020600020905b81548152906001019060200180831161142657829003601f168201915b505050505081565b60045481565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156114d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ca90611f6b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561159d57506fffffffffffffffffffffffffffffffff8016600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156117685780600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611661576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165890611fd7565b60405180910390fd5b6116e7600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826118db565b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6117b1600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826118db565b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611800600554826118db565b600581905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118649190611b66565b60405180910390a35050565b600061187d3384846105f8565b905092915050565b6118903383836105f8565b505050565b6118a08383836105f8565b50505050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6118d68233836105f8565b505050565b60008282846118ea919061240a565b915081111561192e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119259061248a565b60405180910390fd5b92915050565b600082828461194391906124aa565b9150811015611987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197e9061254c565b60405180910390fd5b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156119c75780820151818401526020810190506119ac565b838111156119d6576000848401525b50505050565b6000601f19601f8301169050919050565b60006119f88261198d565b611a028185611998565b9350611a128185602086016119a9565b611a1b816119dc565b840191505092915050565b60006020820190508181036000830152611a4081846119ed565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a7882611a4d565b9050919050565b611a8881611a6d565b8114611a9357600080fd5b50565b600081359050611aa581611a7f565b92915050565b6000819050919050565b611abe81611aab565b8114611ac957600080fd5b50565b600081359050611adb81611ab5565b92915050565b60008060408385031215611af857611af7611a48565b5b6000611b0685828601611a96565b9250506020611b1785828601611acc565b9150509250929050565b60008115159050919050565b611b3681611b21565b82525050565b6000602082019050611b516000830184611b2d565b92915050565b611b6081611aab565b82525050565b6000602082019050611b7b6000830184611b57565b92915050565b600080600060608486031215611b9a57611b99611a48565b5b6000611ba886828701611a96565b9350506020611bb986828701611a96565b9250506040611bca86828701611acc565b9150509250925092565b600060208284031215611bea57611be9611a48565b5b6000611bf884828501611a96565b91505092915050565b6000819050919050565b611c1481611c01565b82525050565b6000602082019050611c2f6000830184611c0b565b92915050565b600060ff82169050919050565b611c4b81611c35565b82525050565b6000602082019050611c666000830184611c42565b92915050565b611c7581611b21565b8114611c8057600080fd5b50565b600081359050611c9281611c6c565b92915050565b611ca181611c35565b8114611cac57600080fd5b50565b600081359050611cbe81611c98565b92915050565b611ccd81611c01565b8114611cd857600080fd5b50565b600081359050611cea81611cc4565b92915050565b600080600080600080600080610100898b031215611d1157611d10611a48565b5b6000611d1f8b828c01611a96565b9850506020611d308b828c01611a96565b9750506040611d418b828c01611acc565b9650506060611d528b828c01611acc565b9550506080611d638b828c01611c83565b94505060a0611d748b828c01611caf565b93505060c0611d858b828c01611cdb565b92505060e0611d968b828c01611cdb565b9150509295985092959890939650565b60008060408385031215611dbd57611dbc611a48565b5b6000611dcb85828601611a96565b9250506020611ddc85828601611a96565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2d57607f821691505b60208210811415611e4157611e40611de6565b5b50919050565b7f436f696e2f6e756c6c2d64737400000000000000000000000000000000000000600082015250565b6000611e7d600d83611998565b9150611e8882611e47565b602082019050919050565b60006020820190508181036000830152611eac81611e70565b9050919050565b7f436f696e2f6473742d63616e6e6f742d62652d746869732d636f6e7472616374600082015250565b6000611ee9602083611998565b9150611ef482611eb3565b602082019050919050565b60006020820190508181036000830152611f1881611edc565b9050919050565b7f436f696e2f696e73756666696369656e742d62616c616e636500000000000000600082015250565b6000611f55601983611998565b9150611f6082611f1f565b602082019050919050565b60006020820190508181036000830152611f8481611f48565b9050919050565b7f436f696e2f696e73756666696369656e742d616c6c6f77616e63650000000000600082015250565b6000611fc1601b83611998565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b7f436f696e2f6163636f756e742d6e6f742d617574686f72697a65640000000000600082015250565b600061202d601b83611998565b915061203882611ff7565b602082019050919050565b6000602082019050818103600083015261205c81612020565b9050919050565b61206c81611a6d565b82525050565b60006020820190506120876000830184612063565b92915050565b600060c0820190506120a26000830189611c0b565b6120af6020830188612063565b6120bc6040830187612063565b6120c96060830186611b57565b6120d66080830185611b57565b6120e360a0830184611b2d565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b600061212f6002836120ee565b915061213a826120f9565b600282019050919050565b6000819050919050565b61216061215b82611c01565b612145565b82525050565b600061217182612122565b915061217d828561214f565b60208201915061218d828461214f565b6020820191508190509392505050565b7f436f696e2f696e76616c69642d616464726573732d3000000000000000000000600082015250565b60006121d3601683611998565b91506121de8261219d565b602082019050919050565b60006020820190508181036000830152612202816121c6565b9050919050565b600060808201905061221e6000830187611c0b565b61222b6020830186611c42565b6122386040830185611c0b565b6122456060830184611c0b565b95945050505050565b7f436f696e2f696e76616c69642d7065726d697400000000000000000000000000600082015250565b6000612284601383611998565b915061228f8261224e565b602082019050919050565b600060208201905081810360008301526122b381612277565b9050919050565b7f436f696e2f7065726d69742d6578706972656400000000000000000000000000600082015250565b60006122f0601383611998565b91506122fb826122ba565b602082019050919050565b6000602082019050818103600083015261231f816122e3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236082611aab565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561239357612392612326565b5b600182019050919050565b7f436f696e2f696e76616c69642d6e6f6e63650000000000000000000000000000600082015250565b60006123d4601283611998565b91506123df8261239e565b602082019050919050565b60006020820190508181036000830152612403816123c7565b9050919050565b600061241582611aab565b915061242083611aab565b92508282101561243357612432612326565b5b828203905092915050565b7f436f696e2f7375622d756e646572666c6f770000000000000000000000000000600082015250565b6000612474601283611998565b915061247f8261243e565b602082019050919050565b600060208201905081810360008301526124a381612467565b9050919050565b60006124b582611aab565b91506124c083611aab565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124f5576124f4612326565b5b828201905092915050565b7f436f696e2f6164642d6f766572666c6f77000000000000000000000000000000600082015250565b6000612536601183611998565b915061254182612500565b602082019050919050565b6000602082019050818103600083015261256581612529565b905091905056fea2646970667358221220673ad46d628e6cc1bf82a9599eaea99826371bc6c2b8f90eddfc8deab540bc4f64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAuthorization(address)": {
        "params": {
          "account": "Account to add auth to"
        }
      },
      "removeAuthorization(address)": {
        "params": {
          "account": "Account to remove auth from"
        }
      }
    },
    "stateVariables": {
      "allowance": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "balanceOf": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "totalSupply": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addAuthorization(address)": {
        "notice": "Add auth to an account"
      },
      "removeAuthorization(address)": {
        "notice": "Remove auth from an account"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4786,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "authorizedAccounts",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4841,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 4843,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 4846,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "version",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 4851,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "chainId",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 4853,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "totalSupply",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 4857,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4863,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "allowance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 4867,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "nonces",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4921,
        "contract": "src/contracts/external/Coin.sol:Coin",
        "label": "DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "9",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}