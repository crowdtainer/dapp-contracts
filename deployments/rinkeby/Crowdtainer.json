{
  "address": "0xeaa1324f799Be70cB8a7257fdF1905167E0c1eb1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "expected",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "actual",
          "type": "address"
        }
      ],
      "name": "CallerNotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotLeaveDueAccumulatedReferralCredits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantClaimFundsOnActiveProject",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ClosingTimeTooEarly",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiredTime",
          "type": "uint256"
        }
      ],
      "name": "CrowdtainerExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "ExceededNumberOfItemsAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMaximumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidMinimumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNumberOfQuantities",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "enum CrowdtainerState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "InvalidOperationFor",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProductNumberAndPrices",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "InvalidReferralRate",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        }
      ],
      "name": "MinimumPurchaseValueForReferralNotMet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MinimumTargetHigherThanMaximum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "MinimumTargetNotReached",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "nonce",
          "type": "bytes32"
        }
      ],
      "name": "NonceAlreadyUsed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "urls",
          "type": "string[]"
        },
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "bytes4",
          "name": "callbackFunction",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "OffchainLookup",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "openingTime",
          "type": "uint256"
        }
      ],
      "name": "OpeningTimeNotReachedYet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceTooLow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "PurchaseExceedsMaximumTarget",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralDisabledForProvidedCode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralInexistent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "received",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum",
          "type": "uint256"
        }
      ],
      "name": "ReferralMinimumValueTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReferralRateNotMultipleOfTwo",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ShippingAgentAddressIsZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "current",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "SignatureExpired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenAddressIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UserAlreadyJoined",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string[]",
          "name": "newUrls",
          "type": "string[]"
        }
      ],
      "name": "CCIPURLChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "shippingAgent",
          "type": "address"
        }
      ],
      "name": "CrowdtainerCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "shippingAgent",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValueRaised",
          "type": "uint256"
        }
      ],
      "name": "CrowdtainerInDeliveryStage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_targetMinimum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_targetMaximum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "_unitPricePerType",
          "type": "uint256[4]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_referralRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_referralEligibilityValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_legalContractURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "CrowdtainerInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "FundsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[4]",
          "name": "quantities",
          "type": "uint256[4]"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "appliedDiscount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "referralEnabled",
          "type": "bool"
        }
      ],
      "name": "Joined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "Left",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        }
      ],
      "name": "RewardsClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSigner",
          "type": "address"
        }
      ],
      "name": "SignerChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "abortProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accumulatedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accumulatedRewardsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "crowdtainerState",
      "outputs": [
        {
          "internalType": "enum CrowdtainerState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "discountForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expireTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPaidAndDeliver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "shippingAgent",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "openingTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expireTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint256[4]",
              "name": "unitPricePerType",
              "type": "uint256[4]"
            },
            {
              "internalType": "uint256",
              "name": "referralRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralEligibilityValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "legalContractURI",
              "type": "string"
            }
          ],
          "internalType": "struct CampaignData",
          "name": "_campaignData",
          "type": "tuple"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invariant",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        },
        {
          "internalType": "uint256[4]",
          "name": "_quantities",
          "type": "uint256[4]"
        },
        {
          "internalType": "bool",
          "name": "_enableReferral",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "join",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "joinWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "leave",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "legalContractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfProducts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralEligibilityValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referralRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "referrerOfReferee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        }
      ],
      "name": "setSigner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_urls",
          "type": "string[]"
        }
      ],
      "name": "setUrls",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shippingAgent",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetMaximum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetMinimum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unitPricePerType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "urls",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "usedNonces",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x412e67939f337a1e3269b3287ca04b585453bbf9230aadbb48efa25e4bd2f66f",
  "receipt": {
    "to": null,
    "from": "0x83858094EA2c475F1E91e4AC09C64255EaCB0DfF",
    "contractAddress": "0xeaa1324f799Be70cB8a7257fdF1905167E0c1eb1",
    "transactionIndex": 22,
    "gasUsed": "2668301",
    "logsBloom": "0x
    "blockHash": "0x9de6f58fd3b52200cceb12becb0795b25918af65d66098531648dff8f3a22e56",
    "transactionHash": "0x412e67939f337a1e3269b3287ca04b585453bbf9230aadbb48efa25e4bd2f66f",
    "logs": [],
    "blockNumber": 11266168,
    "cumulativeGasUsed": "12765643",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4fcc7e3911ff02c878c94e6becd38fbc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"}],\"name\":\"CallerNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotLeaveDueAccumulatedReferralCredits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantClaimFundsOnActiveProject\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClosingTimeTooEarly\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredTime\",\"type\":\"uint256\"}],\"name\":\"CrowdtainerExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ExceededNumberOfItemsAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMaximumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMinimumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNumberOfQuantities\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"enum CrowdtainerState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"InvalidOperationFor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProductNumberAndPrices\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"InvalidReferralRate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"}],\"name\":\"MinimumPurchaseValueForReferralNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumTargetHigherThanMaximum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"MinimumTargetNotReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"name\":\"NonceAlreadyUsed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"urls\",\"type\":\"string[]\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes4\",\"name\":\"callbackFunction\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"OffchainLookup\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"}],\"name\":\"OpeningTimeNotReachedYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"PurchaseExceedsMaximumTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralDisabledForProvidedCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralInexistent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"received\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum\",\"type\":\"uint256\"}],\"name\":\"ReferralMinimumValueTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReferralRateNotMultipleOfTwo\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ShippingAgentAddressIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"current\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expires\",\"type\":\"uint64\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAddressIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyJoined\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string[]\",\"name\":\"newUrls\",\"type\":\"string[]\"}],\"name\":\"CCIPURLChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"}],\"name\":\"CrowdtainerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalValueRaised\",\"type\":\"uint256\"}],\"name\":\"CrowdtainerInDeliveryStage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_openingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetMinimum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_targetMaximum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"_unitPricePerType\",\"type\":\"uint256[4]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_referralRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_referralEligibilityValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_legalContractURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"CrowdtainerInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"FundsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[4]\",\"name\":\"quantities\",\"type\":\"uint256[4]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"finalCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"appliedDiscount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"referralEnabled\",\"type\":\"bool\"}],\"name\":\"Joined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"Left\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawnAmount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"SignerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abortProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accumulatedRewardsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crowdtainerState\",\"outputs\":[{\"internalType\":\"enum CrowdtainerState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"discountForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPaidAndDeliver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"shippingAgent\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"openingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expireTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"unitPricePerType\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"referralRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralEligibilityValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"legalContractURI\",\"type\":\"string\"}],\"internalType\":\"struct CampaignData\",\"name\":\"_campaignData\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invariant\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"uint256[4]\",\"name\":\"_quantities\",\"type\":\"uint256[4]\"},{\"internalType\":\"bool\",\"name\":\"_enableReferral\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"joinWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"legalContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfProducts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralEligibilityValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referralRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrerOfReferee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_urls\",\"type\":\"string[]\"}],\"name\":\"setUrls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shippingAgent\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMaximum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetMinimum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValueRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unitPricePerType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"urls\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))\":{\"details\":\"Initializes a Crowdtainer.\",\"params\":{\"_campaignData\":\"Data defining all rules and values of this Crowdtainer instance.\"}}},\"title\":\"Crowdtainer contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"abortProject()\":{\"notice\":\"Function used by project deployer to signal that it is no longer possible to the ship service or product.         This puts the project into `Failed` state and participants can withdraw their funds.\"},\"claimFunds()\":{\"notice\":\"Function used by participants to withdrawl funds from a failed/expired project.\"},\"claimRewards()\":{\"notice\":\"Function used by participants to withdrawl referral rewards from a successful project.\"},\"getPaidAndDeliver()\":{\"notice\":\"Function used by project deployer to signal commitment to ship service or product by withdrawing/receiving the payment.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/Crowdtainer.sol\":\"Crowdtainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"src/contracts/Constants.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\n// -----------------------------------------------\\n//  Safety margins to avoid impractical values\\n// -----------------------------------------------\\nuint256 constant SAFETY_TIME_RANGE = 1 hours;\\n// @notice Maximum value for referral discounts and rewards\\nuint256 constant SAFETY_MAX_REFERRAL_RATE = 50;\\n// @notice Maximum number of different products for a given Crowdtainer deployment.\\nuint256 constant MAX_NUMBER_OF_PRODUCTS = 4;\\n// @notice Maximum number of items per type on each purchase/join.\\nuint256 constant MAX_NUMBER_OF_PURCHASED_ITEMS = 200;\\n\",\"keccak256\":\"0xb9e35c0f7f7080c26dc9819ccae1e9a439aded1aaff4e097fe4fdfa6aca3d142\",\"license\":\"GPL-3.0\"},\"src/contracts/Crowdtainer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\n// @dev External dependencies\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n// @dev Internal dependencies\\nimport \\\"./ICrowdtainer.sol\\\";\\nimport \\\"./Errors.sol\\\";\\nimport \\\"./Constants.sol\\\";\\n\\ninterface AuthorizationGateway {\\n    function getSignedJoinApproval(\\n        address addr,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) external view returns (bytes memory signature);\\n}\\n\\nlibrary ECDSA {\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            revert Errors.InvalidSignature();\\n        }\\n    }\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            revert Errors.InvalidSignature();\\n        }\\n        if (v != 27 && v != 28) {\\n            revert Errors.InvalidSignature();\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            revert Errors.InvalidSignature();\\n        }\\n\\n        return signer;\\n    }\\n}\\n\\n/**\\n * @title Crowdtainer contract\\n */\\ncontract Crowdtainer is ICrowdtainer, ReentrancyGuard, Initializable {\\n    using SafeERC20 for IERC20;\\n    using ECDSA for bytes32;\\n\\n    // -----------------------------------------------\\n    //  Main project state\\n    // -----------------------------------------------\\n    CrowdtainerState public crowdtainerState;\\n\\n    // @dev Owner of this contract.\\n    // @notice Has permissions to call: initialize(), join() and leave() functions. These functions are optionally\\n    //  gated so that an owner contract can do special accounting (such as an EIP721-compliant contract as its owner).\\n    address public owner;\\n\\n    // @dev The entity or person responsible for the delivery of this crowdtainer project.\\n    // @notice Allowed to call getPaidAndDeliver() and set signers.\\n    address public shippingAgent;\\n\\n    // @dev Maps wallets that joined this Crowdtainer to the values they paid to join.\\n    mapping(address => uint256) private costForWallet;\\n\\n    // @dev Maps accounts to accumulated referral rewards.\\n    mapping(address => uint256) public accumulatedRewardsOf;\\n\\n    // @dev Total rewards claimable for project.\\n    uint256 public accumulatedRewards;\\n\\n    // @dev Maps referee to referrer.\\n    mapping(address => address) public referrerOfReferee;\\n\\n    uint256 public referralEligibilityValue;\\n\\n    // @dev Wether an account has opted into being elibible for referral rewards.\\n    mapping(address => bool) private enableReferral;\\n\\n    // @dev Maps the total discount for each user.\\n    mapping(address => uint256) public discountForUser;\\n\\n    // @dev The total value raised/accumulated by this contract.\\n    uint256 public totalValueRaised;\\n\\n    // @dev Address owned by shipping agent to sign authorization transactions.\\n    address private signer;\\n\\n    // @dev Mapping of addresses to random nonces; Used for transaction replay protection.\\n    mapping(address => mapping(bytes32 => bool)) public usedNonces;\\n\\n    // @dev URL templates to the service provider's gateways that implement the CCIP-read protocol.\\n    string[] public urls;\\n\\n    uint256 internal constant ONE = 1e6; // 6 decimal places\\n\\n    // -----------------------------------------------\\n    //  Modifiers\\n    // -----------------------------------------------\\n    /**\\n     * @dev Throws if msg.sender != owner, except when owner is address(0), in which case no restriction is applied.\\n     */\\n    modifier onlyAddress(address requiredAddress) {\\n        if (owner == address(0)) {\\n            // This branch means this contract is being used as a stand-alone contract, not managed/owned by a EIP-721/1155 contract\\n            // E.g.: A Crowdtainer instance interacted directly by an EOA.\\n            _;\\n            return;\\n        }\\n        requireAddress(requiredAddress);\\n        _;\\n    }\\n\\n    /**\\n     * @dev Throws if called in state other than the specified.\\n     */\\n    modifier onlyInState(CrowdtainerState requiredState) {\\n        requireState(requiredState);\\n        _;\\n    }\\n\\n    modifier onlyActive() {\\n        requireActive();\\n        _;\\n    }\\n\\n    // Auxiliary modifier functions, used to save deployment cost.\\n    function requireState(CrowdtainerState requiredState) internal view {\\n        if (crowdtainerState != requiredState)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n        require(crowdtainerState == requiredState);\\n    }\\n\\n    function requireAddress(address requiredAddress) internal view {\\n        if (msg.sender != requiredAddress)\\n            revert Errors.CallerNotAllowed({\\n                expected: msg.sender,\\n                actual: requiredAddress\\n            });\\n        require(msg.sender == requiredAddress);\\n    }\\n\\n    function requireActive() internal view {\\n        if (block.timestamp < openingTime)\\n            revert Errors.OpeningTimeNotReachedYet(\\n                block.timestamp,\\n                openingTime\\n            );\\n        if (block.timestamp > expireTime)\\n            revert Errors.CrowdtainerExpired(block.timestamp, expireTime);\\n    }\\n\\n    // @dev Address used for signing authorizations. This allows for arbitrary\\n    // off-chain mechanisms to apply law-based restrictions and/or combat bots squatting offered items.\\n    // @notice If signer equals to address(0), no restriction is applied.\\n    function getSigner() external view returns (address) {\\n        return signer;\\n    }\\n\\n    function setSigner(address _signer) external onlyAddress(shippingAgent) {\\n        signer = _signer;\\n        emit SignerChanged(signer);\\n    }\\n\\n    function setUrls(string[] memory _urls)\\n        external\\n        onlyAddress(shippingAgent)\\n    {\\n        urls = _urls;\\n        emit CCIPURLChanged(urls);\\n    }\\n\\n    // -----------------------------------------------\\n    //  Values set by initialize function\\n    // -----------------------------------------------\\n    // @note Time after which it is possible to join this Crowdtainer.\\n    uint256 public openingTime;\\n    // @note Time after which it is no longer possible for the service or product provider to withdraw funds.\\n    uint256 public expireTime;\\n    // @note Minimum amount in ERC20 units required for Crowdtainer to be considered to be successful.\\n    uint256 public targetMinimum;\\n    // @note Amount in ERC20 units after which no further participation is possible.\\n    uint256 public targetMaximum;\\n    // @note Number of products/services variations offered by this project.\\n    uint256 public numberOfProducts;\\n    // @note The price for each unit type.\\n    // @dev The price should be given in the number of smallest unit for precision (e.g 10^18 == 1 DAI).\\n    uint256[MAX_NUMBER_OF_PRODUCTS] public unitPricePerType;\\n    // @note Half of the value act as a discount for a new participant using an existing referral code, and the other\\n    // half is given for the participant making a referral. The former is similar to the 'cash discount device' in stamp era,\\n    // while the latter is a reward for contributing to the Crowdtainer by incentivising participation from others.\\n    uint256 public referralRate;\\n    // @note Address of the ERC20 token used for payment.\\n    IERC20 public token;\\n    // @dev URI string pointing to the legal terms and conditions ruling this project.\\n    string public legalContractURI;\\n\\n    // -----------------------------------------------\\n    //  Events\\n    // -----------------------------------------------\\n\\n    // @note Emmited when the signer changes.\\n    event SignerChanged(address indexed newSigner);\\n\\n    // @note Emmited when CCIP-read URLs changes.\\n    event CCIPURLChanged(string[] indexed newUrls);\\n\\n    // @note Emmited when a Crowdtainer is created.\\n    event CrowdtainerCreated(\\n        address indexed owner,\\n        address indexed shippingAgent\\n    );\\n\\n    // @note Emmited when a Crowdtainer is initialized.\\n    event CrowdtainerInitialized(\\n        address indexed _owner,\\n        IERC20 _token,\\n        uint256 _openingTime,\\n        uint256 _expireTime,\\n        uint256 _targetMinimum,\\n        uint256 _targetMaximum,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] _unitPricePerType,\\n        uint256 _referralRate,\\n        uint256 _referralEligibilityValue,\\n        string _legalContractURI,\\n        address _signer\\n    );\\n\\n    // @note Emmited when a user joins, signalling participation intent.\\n    event Joined(\\n        address indexed wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] quantities,\\n        address indexed referrer,\\n        uint256 finalCost, // @dev with discount applied\\n        uint256 appliedDiscount,\\n        bool referralEnabled\\n    );\\n\\n    event Left(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event RewardsClaimed(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event FundsClaimed(address indexed wallet, uint256 withdrawnAmount);\\n\\n    event CrowdtainerInDeliveryStage(\\n        address indexed shippingAgent,\\n        uint256 totalValueRaised\\n    );\\n\\n    // -----------------------------------------------\\n    // Contract functions\\n    // -----------------------------------------------\\n\\n    /**\\n     * @dev Initializes a Crowdtainer.\\n     * @param _campaignData Data defining all rules and values of this Crowdtainer instance.\\n     */\\n    function initialize(address _owner, CampaignData calldata _campaignData)\\n        external\\n        initializer\\n        onlyInState(CrowdtainerState.Uninitialized)\\n    {\\n        owner = _owner;\\n\\n        // @dev: Sanity checks\\n        if (address(_campaignData.token) == address(0))\\n            revert Errors.TokenAddressIsZero();\\n\\n        if (address(_campaignData.shippingAgent) == address(0))\\n            revert Errors.ShippingAgentAddressIsZero();\\n\\n        if (\\n            _campaignData.referralEligibilityValue > _campaignData.targetMinimum\\n        )\\n            revert Errors.ReferralMinimumValueTooHigh({\\n                received: _campaignData.referralEligibilityValue,\\n                maximum: _campaignData.targetMinimum\\n            });\\n\\n        if (_campaignData.referralRate % 2 != 0)\\n            revert Errors.ReferralRateNotMultipleOfTwo();\\n\\n        // @dev: Expiration time should not be too close to the opening time\\n        if (\\n            _campaignData.expireTime <\\n            _campaignData.openingTime + SAFETY_TIME_RANGE\\n        ) revert Errors.ClosingTimeTooEarly();\\n\\n        if (_campaignData.targetMaximum == 0)\\n            revert Errors.InvalidMaximumTarget();\\n\\n        if (_campaignData.targetMinimum == 0)\\n            revert Errors.InvalidMinimumTarget();\\n\\n        if (_campaignData.targetMinimum > _campaignData.targetMaximum)\\n            revert Errors.MinimumTargetHigherThanMaximum();\\n\\n        // @dev The first price of zero indicates the end of price list.\\n        for (uint256 i = 0; i < MAX_NUMBER_OF_PRODUCTS; i++) {\\n            if (_campaignData.unitPricePerType[i] == 0) {\\n                break;\\n            } else if (_campaignData.unitPricePerType[i] < ONE) {\\n                revert Errors.PriceTooLow();\\n            }\\n\\n            numberOfProducts++;\\n        }\\n\\n        if (numberOfProducts == 0) {\\n            revert Errors.InvalidProductNumberAndPrices();\\n        }\\n\\n        if (_campaignData.referralRate > SAFETY_MAX_REFERRAL_RATE)\\n            revert Errors.InvalidReferralRate({\\n                received: _campaignData.referralRate,\\n                maximum: SAFETY_MAX_REFERRAL_RATE\\n            });\\n\\n        shippingAgent = _campaignData.shippingAgent;\\n        signer = _campaignData.signer;\\n        openingTime = _campaignData.openingTime;\\n        expireTime = _campaignData.expireTime;\\n        targetMinimum = _campaignData.targetMinimum;\\n        targetMaximum = _campaignData.targetMaximum;\\n        unitPricePerType = _campaignData.unitPricePerType;\\n        referralRate = _campaignData.referralRate;\\n        referralEligibilityValue = _campaignData.referralEligibilityValue;\\n        token = IERC20(_campaignData.token);\\n        legalContractURI = _campaignData.legalContractURI;\\n\\n        crowdtainerState = CrowdtainerState.Funding;\\n\\n        emit CrowdtainerInitialized(\\n            owner,\\n            token,\\n            openingTime,\\n            expireTime,\\n            targetMinimum,\\n            targetMaximum,\\n            unitPricePerType,\\n            referralRate,\\n            referralEligibilityValue,\\n            legalContractURI,\\n            signer\\n        );\\n    }\\n\\n    /*\\n     * @dev Join the Crowdtainer project.\\n     * @param _wallet The wallet that is joining the Crowdtainer.\\n     * @param _quantities Array with the number of units desired for each product.\\n     * @param _enableReferral Informs whether the user would like to be eligible to collect rewards for being referred.\\n     * @param _referrer Optional referral code to be used to claim a discount.\\n     *\\n     * @note Requires IRC20 permit.\\n     *\\n     * @note referrer is the wallet address of a previous participant.\\n     *\\n     * @note if `enableReferral` is true, and the account has been used to claim a discount, then\\n     *       it is no longer possible to leave() during the funding phase.\\n     *\\n     * @note A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).\\n     *       To 'update' an order, the user must first 'leave' then join again with the new values.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    )\\n        external\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        if (signer != address(0)) {\\n            // See https://eips.ethereum.org/EIPS/eip-3668\\n            revert Errors.OffchainLookup(\\n                address(this), // sender\\n                urls, // gateway urls\\n                abi.encodeWithSelector(\\n                    AuthorizationGateway.getSignedJoinApproval.selector,\\n                    _wallet,\\n                    _quantities,\\n                    _enableReferral,\\n                    _referrer\\n                ), // parameters/data for the gateway (callData)\\n                Crowdtainer.joinWithSignature.selector, // 4-byte callback function selector\\n                abi.encode(_wallet, _quantities, _enableReferral, _referrer) // parameters for the contract callback function\\n            );\\n        }\\n\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        _join(_wallet, _quantities, _enableReferral, _referrer);\\n    }\\n\\n    /*\\n     * @dev Allows joining by means of CCIP-READ (EIP-3668).\\n     * @param result (uint64, bytes) of signature validity and the signature itself.\\n     * @param extraData ABI encoded parameters for _join() method.\\n     *\\n     * @note Requires IRC20 permit.\\n     */\\n    function joinWithSignature(\\n        bytes calldata result, // off-chain signed payload\\n        bytes calldata extraData // retained by client, passed for verification in this function\\n    )\\n        external\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        require(signer != address(0));\\n\\n        // decode extraData provided by client\\n        (\\n            address _wallet,\\n            uint256[MAX_NUMBER_OF_PRODUCTS] memory _quantities,\\n            bool _enableReferral,\\n            address _referrer\\n        ) = abi.decode(extraData, (address, uint256[4], bool, address));\\n\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        // Get signature from server response\\n        (uint64 epochExpiration, bytes32 nonce, bytes memory signature) = abi\\n            .decode(result, (uint64, bytes32, bytes));\\n\\n        bytes32 messageDigest = keccak256(\\n            abi.encode(\\n                _wallet,\\n                _quantities,\\n                _enableReferral,\\n                _referrer,\\n                epochExpiration,\\n                nonce\\n            )\\n        );\\n\\n        require(\\n            signaturePayloadValid(\\n                messageDigest,\\n                signer,\\n                epochExpiration,\\n                nonce,\\n                signature\\n            )\\n        );\\n        usedNonces[signer][nonce] = true;\\n\\n        _join(_wallet, _quantities, _enableReferral, _referrer);\\n    }\\n\\n    function signaturePayloadValid(\\n        bytes32 messageDigest,\\n        address expectedPublicKey,\\n        uint64 expiration,\\n        bytes32 nonce,\\n        bytes memory signature\\n    ) internal view returns (bool) {\\n        address recoveredPublicKey = keccak256(\\n            abi.encodePacked(\\\"\\\\x19Ethereum Signed Message:\\\\n32\\\", messageDigest)\\n        ).recover(signature);\\n\\n        if (recoveredPublicKey != expectedPublicKey) {\\n            revert Errors.InvalidSignature();\\n        }\\n\\n        if (expiration <= block.timestamp) {\\n            revert Errors.SignatureExpired(uint64(block.timestamp), expiration);\\n        }\\n\\n        if (usedNonces[expectedPublicKey][nonce]) {\\n            revert Errors.NonceAlreadyUsed(expectedPublicKey, nonce);\\n        }\\n\\n        return true;\\n    }\\n\\n    function _join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] memory _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) internal {\\n        enableReferral[_wallet] = _enableReferral;\\n\\n        // @dev Check if wallet didn't already join\\n        if (costForWallet[_wallet] != 0) revert Errors.UserAlreadyJoined();\\n\\n        // @dev Calculate cost\\n        uint256 finalCost;\\n\\n        for (uint256 i = 0; i < numberOfProducts; i++) {\\n            if (_quantities[i] > MAX_NUMBER_OF_PURCHASED_ITEMS)\\n                revert Errors.ExceededNumberOfItemsAllowed({\\n                    received: _quantities[i],\\n                    maximum: MAX_NUMBER_OF_PURCHASED_ITEMS\\n                });\\n\\n            finalCost += unitPricePerType[i] * _quantities[i];\\n        }\\n\\n        if (finalCost < ONE) {\\n            revert Errors.InvalidNumberOfQuantities();\\n        }\\n\\n        if (_enableReferral && finalCost < referralEligibilityValue)\\n            revert Errors.MinimumPurchaseValueForReferralNotMet({\\n                received: finalCost,\\n                minimum: referralEligibilityValue\\n            });\\n\\n        // @dev Apply discounts to `finalCost` if applicable.\\n        bool eligibleForDiscount;\\n        // @dev Verify validity of given `referrer`\\n        if (_referrer != address(0) && referralRate > 0) {\\n            // @dev Check if referrer participated\\n            if (costForWallet[_referrer] == 0) {\\n                revert Errors.ReferralInexistent();\\n            }\\n\\n            if (!enableReferral[_referrer]) {\\n                revert Errors.ReferralDisabledForProvidedCode();\\n            }\\n\\n            eligibleForDiscount = true;\\n        }\\n\\n        uint256 discount;\\n\\n        if (eligibleForDiscount) {\\n            // @dev Two things happens when a valid referral code is given:\\n            //    1 - Half of the referral rate is applied as a discount to the current order.\\n            //    2 - Half of the referral rate is credited to the referrer.\\n\\n            // @dev Calculate the discount value\\n            discount = (finalCost * referralRate) / 100 / 2;\\n\\n            // @dev 1- Apply discount\\n            finalCost -= discount;\\n            discountForUser[_wallet] += discount;\\n\\n            // @dev 2- Apply reward for referrer\\n            accumulatedRewardsOf[_referrer] += discount;\\n            accumulatedRewards += discount;\\n\\n            referrerOfReferee[_wallet] = _referrer;\\n        }\\n\\n        costForWallet[_wallet] = finalCost;\\n\\n        // increase total value accumulated by this contract\\n        totalValueRaised += finalCost;\\n\\n        // @dev Check if the purchase order doesn't exceed the goal's `targetMaximum`.\\n        if ((totalValueRaised - accumulatedRewards) > targetMaximum)\\n            revert Errors.PurchaseExceedsMaximumTarget({\\n                received: totalValueRaised,\\n                maximum: targetMaximum\\n            });\\n\\n        // @dev transfer required funds into this contract\\n        token.safeTransferFrom(_wallet, address(this), finalCost);\\n\\n        emit Joined(\\n            _wallet,\\n            _quantities,\\n            _referrer,\\n            finalCost,\\n            discount,\\n            _enableReferral\\n        );\\n    }\\n\\n    /*\\n     * @dev Leave the Crowdtainer and withdraw deposited funds given when joining.\\n     * @note Calling this method signals that the user is no longer interested in participating.\\n     * @note Only allowed if the respective Crowdtainer is in active `Funding` state.\\n     * @param _wallet The wallet that is leaving the Crowdtainer.\\n     */\\n    function leave(address _wallet)\\n        external\\n        onlyAddress(owner)\\n        onlyInState(CrowdtainerState.Funding)\\n        onlyActive\\n        nonReentrant\\n    {\\n        if (owner == address(0)) {\\n            requireAddress(_wallet);\\n        }\\n\\n        uint256 withdrawalTotal = costForWallet[_wallet];\\n\\n        // @dev Subtract formerly given referral rewards originating from this account.\\n        address referrer = referrerOfReferee[_wallet];\\n        accumulatedRewardsOf[referrer] -= discountForUser[_wallet];\\n\\n        /* @dev If this wallet's referral was used, then it is no longer possible to leave().\\n         *      This is to discourage users from joining just to generate discount codes.\\n         *      E.g.: A user uses two different wallets, the first joins to generate a discount code for him/herself to be used in\\n         *      the second wallet, and then immediatelly leaves the pool from the first wallet, leaving the second wallet with a full discount. */\\n        if (accumulatedRewardsOf[_wallet] > 0) {\\n            revert Errors.CannotLeaveDueAccumulatedReferralCredits();\\n        }\\n\\n        totalValueRaised -= costForWallet[_wallet];\\n        accumulatedRewards -= discountForUser[_wallet];\\n\\n        costForWallet[_wallet] = 0;\\n        discountForUser[_wallet] = 0;\\n        referrerOfReferee[_wallet] = address(0);\\n        enableReferral[_wallet] = false;\\n\\n        // @dev transfer the owed funds from this contract back to the user.\\n        token.safeTransferFrom(address(this), _wallet, withdrawalTotal);\\n\\n        emit Left(_wallet, withdrawalTotal);\\n    }\\n\\n    /**\\n     * @notice Function used by project deployer to signal commitment to ship service or product by withdrawing/receiving the payment.\\n     */\\n    function getPaidAndDeliver()\\n        public\\n        onlyAddress(shippingAgent)\\n        onlyInState(CrowdtainerState.Funding)\\n        nonReentrant\\n    {\\n        uint256 availableForAgent = totalValueRaised - accumulatedRewards;\\n\\n        if (availableForAgent < targetMinimum) {\\n            revert Errors.MinimumTargetNotReached(\\n                targetMinimum,\\n                totalValueRaised\\n            );\\n        }\\n\\n        crowdtainerState = CrowdtainerState.Delivery;\\n\\n        // @dev transfer the owed funds from this contract to the service provider.\\n        token.safeTransferFrom(address(this), shippingAgent, availableForAgent);\\n\\n        emit CrowdtainerInDeliveryStage(shippingAgent, availableForAgent);\\n    }\\n\\n    /**\\n     * @notice Function used by project deployer to signal that it is no longer possible to the ship service or product.\\n     *         This puts the project into `Failed` state and participants can withdraw their funds.\\n     */\\n    function abortProject()\\n        public\\n        onlyAddress(shippingAgent)\\n        onlyInState(CrowdtainerState.Funding)\\n        nonReentrant\\n    {\\n        crowdtainerState = CrowdtainerState.Failed;\\n    }\\n\\n    /**\\n     * @notice Function used by participants to withdrawl funds from a failed/expired project.\\n     */\\n    function claimFunds() public nonReentrant {\\n        if (block.timestamp < openingTime)\\n            revert Errors.OpeningTimeNotReachedYet(\\n                block.timestamp,\\n                openingTime\\n            );\\n\\n        if (crowdtainerState == CrowdtainerState.Uninitialized)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n\\n        if (crowdtainerState == CrowdtainerState.Delivery)\\n            revert Errors.InvalidOperationFor({state: crowdtainerState});\\n\\n        // The first interaction with this function 'nudges' the state to `Failed` if\\n        // the project didn't reach the goal in time.\\n        if (\\n            block.timestamp > expireTime &&\\n            (totalValueRaised - accumulatedRewards) < targetMinimum\\n        ) crowdtainerState = CrowdtainerState.Failed;\\n\\n        if (crowdtainerState != CrowdtainerState.Failed)\\n            revert Errors.CantClaimFundsOnActiveProject();\\n\\n        // Reaching this line means the project failed either due expiration or explicit transition from `abortProject()`.\\n        uint256 withdrawalTotal = costForWallet[msg.sender];\\n\\n        costForWallet[msg.sender] = 0;\\n        discountForUser[msg.sender] = 0;\\n        referrerOfReferee[msg.sender] = address(0);\\n\\n        if (withdrawalTotal == 0) {\\n            revert Errors.InsufficientBalance();\\n        }\\n\\n        // @dev transfer the owed funds from this contract back to the user.\\n        token.safeTransferFrom(address(this), msg.sender, withdrawalTotal);\\n\\n        emit FundsClaimed(msg.sender, withdrawalTotal);\\n    }\\n\\n    /**\\n     * @notice Function used by participants to withdrawl referral rewards from a successful project.\\n     */\\n    function claimRewards()\\n        public\\n        nonReentrant\\n        onlyInState(CrowdtainerState.Delivery)\\n    {\\n        uint256 totalRewards = accumulatedRewardsOf[msg.sender];\\n        accumulatedRewardsOf[msg.sender] = 0;\\n\\n        token.safeTransferFrom(address(this), msg.sender, totalRewards);\\n\\n        emit RewardsClaimed(msg.sender, totalRewards);\\n    }\\n\\n    // @dev This method is only used for Formal Verification with SMTChecker.\\n    // @dev It is executed with `make solcheck` command provided with the project's scripts.\\n    function invariant() public view {\\n        if (crowdtainerState != CrowdtainerState.Uninitialized) {\\n            assert(expireTime >= (openingTime + SAFETY_TIME_RANGE));\\n            assert(targetMaximum > 0);\\n            assert(targetMinimum <= targetMaximum);\\n            assert(referralRate <= SAFETY_MAX_REFERRAL_RATE);\\n\\n            assert(accumulatedRewards < totalValueRaised);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x33274f44c81cc82d3989eaa1ee5fdaaa0c322526bdcd64e3166a769c7ffabdc2\",\"license\":\"GPL-3.0\"},\"src/contracts/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport \\\"./States.sol\\\";\\n\\nlibrary Errors {\\n    // -----------------------------------------------\\n    //  Vouchers\\n    // -----------------------------------------------\\n    // @notice: The provided crowdtainer does not exist.\\n    error CrowdtainerInexistent();\\n    // @notice: Invalid token id.\\n    error InvalidTokenId(uint256 tokenId);\\n    // @notice: Prices lower than 1 * 1^6 not supported.\\n    error PriceTooLow();\\n    // @notice: Attempted to join with all product quantities set to zero.\\n    error InvalidNumberOfQuantities();\\n    // @notice: Account cannot be of address(0).\\n    error AccountAddressIsZero();\\n    // @notice: Metadata service contract cannot be of address(0).\\n    error MetadataServiceAddressIsZero();\\n    // @notice: Accounts and ids lengths do not match.\\n    error AccountIdsLengthMismatch();\\n    // @notice: ID's and amounts lengths do not match.\\n    error IDsAmountsLengthMismatch();\\n    // @notice: Cannot set approval for the same account.\\n    error CannotSetApprovalForSelf();\\n    // @notice: Caller is not owner or has correct permission.\\n    error AccountNotOwner();\\n    // @notice: Only the shipping agent is able to set a voucher/tokenId as \\\"claimed\\\".\\n    error SetClaimedOnlyAllowedByShippingAgent();\\n    // @notice: Cannot transfer someone else's tokens.\\n    error UnauthorizedTransfer();\\n    // @notice: Insufficient balance.\\n    error InsufficientBalance();\\n    // @notice: Can't initialize with all their prices set to zero.\\n    error InvalidProductNumberAndPrices();\\n    // @notice: Can't make transfers in given state.\\n    error TransferNotAllowed(address crowdtainer, CrowdtainerState state);\\n    // @notice: No further participants possible in a given Crowdtainer.\\n    error MaximumNumberOfParticipantsReached(\\n        uint256 maximum,\\n        address crowdtainer\\n    );\\n    // Used to apply off-chain verifications/rules per CCIP-read (EIP-3668),\\n    // see https://eips.ethereum.org/EIPS/eip-3668 for description.\\n    error OffchainLookup(\\n        address sender,\\n        string[] urls,\\n        bytes callData,\\n        bytes4 callbackFunction,\\n        bytes extraData\\n    );\\n\\n    error CCIP_Read_InvalidOperation();\\n    error SignatureExpired(uint64 current, uint64 expires);\\n    error NonceAlreadyUsed(address wallet, bytes32 nonce);\\n    error InvalidSignature();\\n\\n    // -----------------------------------------------\\n    //  Initialization with invalid parameters\\n    // -----------------------------------------------\\n    // @notice: Cannot initialize with owner of address(0).\\n    error OwnerAddressIsZero();\\n    // @notice: Cannot initialize with token of address(0).\\n    error TokenAddressIsZero();\\n    // @notice: Shipping agent can't have address(0).\\n    error ShippingAgentAddressIsZero();\\n    // @notice: Initialize called with closing time is less than one hour away from the opening time.\\n    error ClosingTimeTooEarly();\\n    // @notice: Initialize called with invalid number of maximum units to be sold (0).\\n    error InvalidMaximumTarget();\\n    // @notice: Initialize called with invalid number of minimum units to be sold (less than maximum sold units).\\n    error InvalidMinimumTarget();\\n    // @notice: Initialize called with invalid minimum and maximum targets (minimum value higher than maximum).\\n    error MinimumTargetHigherThanMaximum();\\n    // @notice: Initialize called with invalid referral rate.\\n    error InvalidReferralRate(uint256 received, uint256 maximum);\\n    // @notice: Referral rate not multiple of 2.\\n    error ReferralRateNotMultipleOfTwo();\\n    // @notice: Refferal minimum value for participation can't be higher than project's minimum target.\\n    error ReferralMinimumValueTooHigh(uint256 received, uint256 maximum);\\n\\n    // -----------------------------------------------\\n    //  Authorization\\n    // -----------------------------------------------\\n    // @notice: Method not authorized for caller (message sender).\\n    error CallerNotAllowed(address expected, address actual);\\n\\n    // -----------------------------------------------\\n    //  Join() operation\\n    // -----------------------------------------------\\n    // @notice: The given referral was not found thus can't be used to claim a discount.\\n    error ReferralInexistent();\\n    // @notice: Purchase exceed target's maximum goal.\\n    error PurchaseExceedsMaximumTarget(uint256 received, uint256 maximum);\\n    // @notice: Number of items purchased per type exceeds maximum allowed.\\n    error ExceededNumberOfItemsAllowed(uint256 received, uint256 maximum);\\n    // @notice: Wallet already used to join project.\\n    error UserAlreadyJoined();\\n    // @notice: Referral is not enabled for the given code/wallet.\\n    error ReferralDisabledForProvidedCode();\\n    // @notice: Participant can't participate in referral if the minimum purchase value specified by the service provider is not met.\\n    error MinimumPurchaseValueForReferralNotMet(\\n        uint256 received,\\n        uint256 minimum\\n    );\\n\\n    // -----------------------------------------------\\n    //  Leave() operation\\n    // -----------------------------------------------\\n    // @notice: It is not possible to leave when the user has referrals enabled, has been referred and gained rewards.\\n    error CannotLeaveDueAccumulatedReferralCredits();\\n\\n    // -----------------------------------------------\\n    //  GetPaidAndDeliver() operation\\n    // -----------------------------------------------\\n    // @notice: GetPaidAndDeliver can't be called on a expired project.\\n    error CrowdtainerExpired(uint256 timestamp, uint256 expiredTime);\\n    // @notice: Not enough funds were raised.\\n    error MinimumTargetNotReached(uint256 minimum, uint256 actual);\\n    // @notice: The project is not active yet.\\n    error OpeningTimeNotReachedYet(uint256 timestamp, uint256 openingTime);\\n\\n    // -----------------------------------------------\\n    //  ClaimFunds() operation\\n    // -----------------------------------------------\\n    // @notice: Can't be called if the project is still active.\\n    error CantClaimFundsOnActiveProject();\\n\\n    // -----------------------------------------------\\n    //  State transition\\n    // -----------------------------------------------\\n    // @notice: Method can't be invoked at current state.\\n    error InvalidOperationFor(CrowdtainerState state);\\n\\n    // -----------------------------------------------\\n    //  Other Invariants\\n    // -----------------------------------------------\\n    // @notice: Payable receive function called, but we don't accept Eth for payment.\\n    error ContractDoesNotAcceptEther();\\n}\\n\",\"keccak256\":\"0xfbd869b747cd81d9e83d0fc673475369c720d70899400f88d9c0019ad0cd8481\",\"license\":\"GPL-3.0\"},\"src/contracts/ICrowdtainer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nimport \\\"./Constants.sol\\\";\\nimport \\\"./States.sol\\\";\\n\\n// Data defining all rules and values of a Crowdtainer instance.\\nstruct CampaignData {\\n    // Ethereum Address that represents the product or service provider.\\n    address shippingAgent;\\n    // Address used for signing authorizations.\\n    address signer;\\n    // Funding opening time.\\n    uint256 openingTime;\\n    // Time after which the owner can no longer withdraw funds.\\n    uint256 expireTime;\\n    // Amount in ERC20 units required for project to be considered to be successful.\\n    uint256 targetMinimum;\\n    // Amount in ERC20 units after which no further participation is possible.\\n    uint256 targetMaximum;\\n    // Array with price of each item, in ERC2O units. Zero is an invalid value and will throw.\\n    uint256[MAX_NUMBER_OF_PRODUCTS] unitPricePerType;\\n    // Percentage used for incentivising participation. Half the amount goes to the referee, and the other half to the referrer.\\n    uint256 referralRate;\\n    // The minimum purchase value required to be eligible to participate in referral rewards.\\n    uint256 referralEligibilityValue;\\n    // Address of the ERC20 token used for payment.\\n    address token;\\n    // URI string pointing to the legal terms and conditions ruling this project.\\n    string legalContractURI;\\n}\\n\\n/**\\n * @dev Interface for Crowdtainer instances.\\n */\\ninterface ICrowdtainer {\\n    /**\\n     * @dev Initializes a Crowdtainer.\\n     * @param _campaignData Data defining all rules and values of this Crowdtainer instance.\\n     */\\n    function initialize(address owner, CampaignData calldata _campaignData)\\n        external;\\n\\n    function crowdtainerState() external view returns (CrowdtainerState);\\n\\n    function shippingAgent() external view returns (address);\\n\\n    function numberOfProducts() external view returns (uint256);\\n\\n    function unitPricePerType(uint256) external view returns (uint256);\\n\\n    /*\\n     * @dev Join the Crowdtainer project.\\n     * @param _wallet The wallet that is joining the Crowdtainer.\\n     * @param _quantities Array with the number of units desired for each product.\\n     * @param _enableReferral Informs whether the user would like to be eligible to collect rewards for being referred.\\n     * @param _referrer Optional referral code to be used to claim a discount.\\n     *\\n     * @note referrer is the wallet address of a previous participant.\\n     *\\n     * @note if `enableReferral` is true, and the account has been used to claim a discount, then\\n     *       it is no longer possible to leave() during the funding phase.\\n     *\\n     * @note A same user is not allowed to increase the order amounts (i.e., by calling join multiple times).\\n     *       To 'update' an order, the user must first 'leave' then join again with the new values.\\n     */\\n    function join(\\n        address _wallet,\\n        uint256[MAX_NUMBER_OF_PRODUCTS] calldata _quantities,\\n        bool _enableReferral,\\n        address _referrer\\n    ) external;\\n\\n    /*\\n     * @dev Leave the Crowdtainer and withdraw deposited funds given when joining.\\n     * @note Calling this method signals that the user is no longer interested in participating.\\n     * @note Only allowed if the respective Crowdtainer is in active `Funding` state.\\n     * @param _wallet The wallet that is leaving the Crowdtainer.\\n     */\\n    function leave(address _wallet) external;\\n}\\n\",\"keccak256\":\"0x7b48c8ec2fca22d2816905d9a74007f9a9cf6b7f4b4022a3eb6924aa48e3fef2\",\"license\":\"GPL-3.0\"},\"src/contracts/States.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.16;\\n\\nenum CrowdtainerState {\\n    Uninitialized,\\n    Funding,\\n    Delivery,\\n    Failed\\n}\\n\",\"keccak256\":\"0x4b39603e89df7543e139af9aadf2d6848c3781983565168007f72caeee77ba9d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001600055612ee9806100256000396000f3fe608060405234801561001057600080fd5b50600436106101b05760003560e01c80637855d30c116100ef578063ac30777311610092578063ac307773146103a5578063b03a9a05146103ad578063b7a8807c146103b5578063bedf77a6146103be578063c66301b2146103d1578063cf084056146103da578063eb6ced16146103ed578063fc0c546a1461040d57600080fd5b80637855d30c14610323578063796676be146103435780637ac3c02f146103565780638831c8dc146103675780638da5cb5b1461037057806390ffbe901461038a5780639c81ff6b14610393578063a053ce1f1461039c57600080fd5b8063464eff5011610157578063464eff501461026857806353b476561461027b578063566a2cc2146102845780635fda04c7146102975780636c19e783146102d55780636cc895a9146102e8578063708c4561146102fb57806374b3eceb1461030e57600080fd5b80630e6137cf146101b557806319cc6492146101bf5780631e1b2573146101c75780632748608f146101ed57806327949dab1461022e578063310a1ee31461024e578063312ee7fa14610257578063372500ab14610260575b600080fd5b6101bd610420565b005b6101bd610550565b6101da6101d5366004612295565b6105c8565b6040519081526020015b60405180910390f35b6102166101fb3660046122c3565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b6101da61023c3660046122c3565b60046020526000908152604090205481565b6101da600f5481565b6101da60075481565b6101bd6105df565b6101bd6102763660046122fe565b61067e565b6101da60115481565b6101bd6102923660046123a5565b6108ba565b6102c56102a5366004612410565b600c60209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101e4565b6101bd6102e33660046122c3565b610b72565b6101bd6102f63660046124d9565b610c30565b6101bd6103093660046125b0565b610cc2565b6103166111e1565b6040516101e49190612657565b6001546103369062010000900460ff1681565b6040516101e49190612680565b610316610351366004612295565b61126f565b600b546001600160a01b0316610216565b6101da600a5481565b60015461021690630100000090046001600160a01b031681565b6101da60105481565b6101da60055481565b6101da60175481565b6101bd61129a565b6101bd6114a7565b6101da600e5481565b6101bd6103cc3660046122c3565b61153a565b6101da60125481565b600254610216906001600160a01b031681565b6101da6103fb3660046122c3565b60096020526000908152604090205481565b601854610216906001600160a01b031681565b6002546001546001600160a01b039182169163010000009091041661053c57600161044a81611753565b6002600054036104755760405162461bcd60e51b815260040161046c906126a8565b60405180910390fd5b60026000908155600554600a5461048c91906126f5565b90506010548110156104c057601054600a546040516359dc328760e01b81526004810192909252602482015260440161046c565b6001805462ff00001916620200001790556002546018546104f0916001600160a01b0391821691309116846117e9565b6002546040518281526001600160a01b03909116907f26dc6b7e309de29eb24d6830d1cc0f60c6b5d25d5d4830ce8ba77eb55468f0dc9060200160405180910390a25050600160005550565b61054581611849565b600161044a81611753565b6002546001546001600160a01b03918216916301000000909104166105b457600161057a81611753565b60026000540361059c5760405162461bcd60e51b815260040161046c906126a8565b50506001805462ff0000191662030000178155600055565b6105bd81611849565b600161057a81611753565b601381600481106105d857600080fd5b0154905081565b6002600054036106015760405162461bcd60e51b815260040161046c906126a8565b6002600081905561061181611753565b33600081815260046020526040812080549190556018549091610640916001600160a01b0316903090846117e9565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250506001600055565b600154630100000090046001600160a01b0316806107e05760016106a181611753565b6106a9611898565b6002600054036106cb5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b03161561077f5730600d63f679fbb160e01b888888886040516024016107039493929190612708565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091632b35166160e11b91610754918c918c918c918c9101612708565b60408051601f1981840301815290829052630556f18360e41b825261046c95949392916004016127f3565b600154630100000090046001600160a01b031661079f5761079f86611849565b6107d5868660048060200260405190810160405280929190826004602002808284376000920191909152508891508790506118f8565b5060016000556108b3565b6107e981611849565b60016107f481611753565b6107fc611898565b60026000540361081e5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b0316156108565730600d63f679fbb160e01b888888886040516024016107039493929190612708565b600154630100000090046001600160a01b03166108765761087686611849565b6108ac868660048060200260405190810160405280929190826004602002808284376000920191909152508891508790506118f8565b5060016000555b5050505050565b600154630100000090046001600160a01b031680610a1d5760016108dd81611753565b6108e5611898565b6002600054036109075760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b031661092157600080fd5b6000808080610932878901896128ad565b60015493975091955093509150630100000090046001600160a01b031661095c5761095c84611849565b6000808061096c8c8e018e61295d565b925092509250600087878787878760405160200161098f969594939291906129f5565b60408051601f198184030181529190528051602090910120600b549091506109c49082906001600160a01b0316868686611cbc565b6109cd57600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610a09888888886118f8565b50506001600055506108b395505050505050565b610a2681611849565b6001610a3181611753565b610a39611898565b600260005403610a5b5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b0316610a7557600080fd5b6000808080610a86878901896128ad565b60015493975091955093509150630100000090046001600160a01b0316610ab057610ab084611849565b60008080610ac08c8e018e61295d565b9250925092506000878787878787604051602001610ae3969594939291906129f5565b60408051601f198184030181529190528051602090910120600b54909150610b189082906001600160a01b0316868686611cbc565b610b2157600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610b5d888888886118f8565b50506001600055505050505050505050505050565b6002546001546001600160a01b0391821691630100000090910416610bdc57600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b610be581611849565b600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b6002546001546001600160a01b0391821691630100000090910416610ca6578151610c6290600d906020850190612199565b50600d604051610c729190612a47565b604051908190038120907f39865a40d618adb128517d1adfed42d8a2ba08c9766461764840e68a6bf59e0390600090a25050565b610caf81611849565b8151610c6290600d906020850190612199565b600154610100900460ff1615808015610cdf57506001805460ff16105b80610cf85750303b158015610cf857506001805460ff16145b610d5b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161046c565b6001805460ff1916811790558015610d7d576001805461ff0019166101001790555b6000610d8881611753565b600180546301000000600160b81b03191663010000006001600160a01b038716021790556000610dc06101a0850161018086016122c3565b6001600160a01b031603610de75760405163dc2e5e8d60e01b815260040160405180910390fd5b6000610df660208501856122c3565b6001600160a01b031603610e1d5760405163063d924960e51b815260040160405180910390fd5b82608001358361016001351115610e5857604051631e5c82a560e01b815261016084013560048201526080840135602482015260440161046c565b610e686002610140850135612afa565b15610e86576040516384d68d9d60e01b815260040160405180910390fd5b610e96610e106040850135612b0e565b83606001351015610eba5760405163079237dd60e31b815260040160405180910390fd5b8260a00135600003610edf5760405163a4c54a6360e01b815260040160405180910390fd5b8260800135600003610f0457604051637a61fdf760e01b815260040160405180910390fd5b8260a0013583608001351115610f2c576040516285e6db60e21b815260040160405180910390fd5b60005b6004811015610fbc578360c0018160048110610f4d57610f4d612b21565b602002013515610fbc57620f42408460c0018260048110610f7057610f70612b21565b60200201351015610f9457604051636dddf41160e11b815260040160405180910390fd5b60128054906000610fa483612b37565b91905055508080610fb490612b37565b915050610f2f565b50601254600003610fe05760405163b0e7ef7b60e01b815260040160405180910390fd5b6032836101400135111561101557604051639088a55b60e01b815261014084013560048201526032602482015260440161046c565b61102260208401846122c3565b600280546001600160a01b0319166001600160a01b039290921691909117905561105260408401602085016122c3565b600b80546001600160a01b0319166001600160a01b03929092169190911790556040830135600e556060830135600f55608083013560105560a08301356011556110a2601360c0850160046121ef565b506101408301356017556101608301356007556110c76101a0840161018085016122c3565b601880546001600160a01b0319166001600160a01b03929092169190911790556110f56101a0840184612b50565b601991611103919083612bf9565b5060018054819062ff0000191662010000820217905550600154601854600e54600f54601054601154601754600754600b546040516001600160a01b036301000000909a048a16997ff4d539cc7b1ecf0d043f59901b71b7b44a25563b872c28e85fe3cb72126dcb239961118e99908216989097909690959094601394919390926019921690612cb2565b60405180910390a25080156111dc576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b601980546111ee9061273c565b80601f016020809104026020016040519081016040528092919081815260200182805461121a9061273c565b80156112675780601f1061123c57610100808354040283529160200191611267565b820191906000526020600020905b81548152906001019060200180831161124a57829003601f168201915b505050505081565b600d818154811061127f57600080fd5b9060005260206000200160009150905080546111ee9061273c565b6002600054036112bc5760405162461bcd60e51b815260040161046c906126a8565b6002600055600e544210156112f157600e546040516340968aa760e11b8152426004820152602481019190915260440161046c565b600060015462010000900460ff1660038111156113105761131061266a565b0361133b57600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b600260015462010000900460ff16600381111561135a5761135a61266a565b0361138557600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b600f54421180156113a65750601054600554600a546113a491906126f5565b105b156113bd576001805462ff00001916620300001790555b600360015462010000900460ff1660038111156113dc576113dc61266a565b146113fa57604051639b61206360e01b815260040160405180910390fd5b336000908152600360209081526040808320805490849055600983528184208490556006909252822080546001600160a01b03191690559081900361145257604051631e9acf1760e31b815260040160405180910390fd5b60185461146a906001600160a01b03163033846117e9565b60405181815233907fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae9060200160405180910390a2506001600055565b600060015462010000900460ff1660038111156114c6576114c661266a565b1461153857610e10600e546114db9190612b0e565b600f5410156114ec576114ec612d4d565b6000601154116114fe576114fe612d4d565b601154601054111561151257611512612d4d565b6032601754111561152557611525612d4d565b600a546005541061153857611538612d4d565b565b600154630100000090046001600160a01b03168061174357600161155d81611753565b611565611898565b6002600054036115875760405162461bcd60e51b815260040161046c906126a8565b6002600055600154630100000090046001600160a01b03166115ac576115ac83611849565b6001600160a01b03808416600090815260036020908152604080832054600683528184205460098452828520549516808552600490935290832080549194929390916115f99084906126f5565b90915550506001600160a01b0385166000908152600460205260409020541561163557604051636939b91360e11b815260040160405180910390fd5b6001600160a01b038516600090815260036020526040812054600a8054919290916116619084906126f5565b90915550506001600160a01b03851660009081526009602052604081205460058054919290916116929084906126f5565b90915550506001600160a01b038086166000908152600360209081526040808320839055600982528083208390556006825280832080546001600160a01b031916905560089091529020805460ff191690556018546116f491163087856117e9565b846001600160a01b03167faf65ecdc8a0d3ea90c8344c89e7001864fddf59dfdf41da2994463fe99049a598360405161172f91815260200190565b60405180910390a250506001600055505050565b61174c81611849565b600161155d815b8060038111156117655761176561266a565b60015462010000900460ff1660038111156117825761178261266a565b146117ad57600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b8060038111156117bf576117bf61266a565b60015462010000900460ff1660038111156117dc576117dc61266a565b146117e657600080fd5b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611843908590611df2565b50505050565b336001600160a01b03821614611883576040516350a5f40560e01b81523360048201526001600160a01b038216602482015260440161046c565b336001600160a01b038216146117e657600080fd5b600e544210156118c857600e546040516340968aa760e11b8152426004820152602481019190915260440161046c565b600f5442111561153857600f5460405163b73065c160e01b8152426004820152602481019190915260440161046c565b6001600160a01b0384166000908152600860209081526040808320805460ff19168615151790556003909152902054156119455760405163f45d43bf60e01b815260040160405180910390fd5b6000805b601254811015611a015760c885826004811061196757611967612b21565b602002015111156119ad5784816004811061198457611984612b21565b6020020151604051633f25723360e01b8152600481019190915260c8602482015260440161046c565b8481600481106119bf576119bf612b21565b6020020151601382600481106119d7576119d7612b21565b01546119e39190612d63565b6119ed9083612b0e565b9150806119f981612b37565b915050611949565b50620f4240811015611a26576040516387af7e9360e01b815260040160405180910390fd5b828015611a34575060075481105b15611a6057600754604051633319c7cb60e11b815261046c918391600401918252602082015260400190565b60006001600160a01b03831615801590611a7c57506000601754115b15611af6576001600160a01b0383166000908152600360205260408120549003611ab9576040516355fbf60160e01b815260040160405180910390fd5b6001600160a01b03831660009081526008602052604090205460ff16611af2576040516335d001bd60e21b815260040160405180910390fd5b5060015b60008115611bd7576002606460175485611b109190612d63565b611b1a9190612d82565b611b249190612d82565b9050611b3081846126f5565b6001600160a01b038816600090815260096020526040812080549295508392909190611b5d908490612b0e565b90915550506001600160a01b03841660009081526004602052604081208054839290611b8a908490612b0e565b925050819055508060056000828254611ba39190612b0e565b90915550506001600160a01b03878116600090815260066020526040902080546001600160a01b0319169186169190911790555b6001600160a01b0387166000908152600360205260408120849055600a8054859290611c04908490612b0e565b9091555050601154600554600a54611c1c91906126f5565b1115611c4a57600a54601154604051632b67412f60e21b81526004810192909252602482015260440161046c565b601854611c62906001600160a01b03168830866117e9565b836001600160a01b0316876001600160a01b03167f6d47cedf2ff836145796116ccd8b27cb538f16621a1f844f0d1c2a58e23a499a8886858a604051611cab9493929190612d96565b60405180910390a350505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018690526000908190611d1e908490605c0160405160208183030381529060405280519060200120611ec490919063ffffffff16565b9050856001600160a01b0316816001600160a01b031614611d5257604051638baa579f60e01b815260040160405180910390fd5b42856001600160401b031611611d8e5760405163034d689d60e51b81526001600160401b0342811660048301528616602482015260440161046c565b6001600160a01b0386166000908152600c6020908152604080832087845290915290205460ff1615611de55760405163433a6e1f60e11b81526001600160a01b03871660048201526024810185905260440161046c565b5060019695505050505050565b6000611e47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f169092919063ffffffff16565b8051909150156111dc5780806020019051810190611e659190612dc1565b6111dc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161046c565b60008151604103611ef75760208201516040830151606084015160001a611eed86828585611f2f565b9350505050611f10565b604051638baa579f60e01b815260040160405180910390fd5b92915050565b6060611f25848460008561202f565b90505b9392505050565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b03821115611f6857604051638baa579f60e01b815260040160405180910390fd5b8360ff16601b14158015611f8057508360ff16601c14155b15611f9e57604051638baa579f60e01b815260040160405180910390fd5b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611ff2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661202657604051638baa579f60e01b815260040160405180910390fd5b95945050505050565b6060824710156120905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161046c565b6001600160a01b0385163b6120e75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046c565b600080866001600160a01b031685876040516121039190612dde565b60006040518083038185875af1925050503d8060008114612140576040519150601f19603f3d011682016040523d82523d6000602084013e612145565b606091505b5091509150612155828286612160565b979650505050505050565b6060831561216f575081611f28565b82511561217f5782518084602001fd5b8160405162461bcd60e51b815260040161046c9190612657565b8280548282559060005260206000209081019282156121df579160200282015b828111156121df57825182906121cf9082612dfa565b50916020019190600101906121b9565b506121eb929150612229565b5090565b826004810192821561221d579160200282015b8281111561221d578235825591602001919060010190612202565b506121eb929150612246565b808211156121eb57600061223d828261225b565b50600101612229565b5b808211156121eb5760008155600101612247565b5080546122679061273c565b6000825580601f10612277575050565b601f0160209004906000526020600020908101906117e69190612246565b6000602082840312156122a757600080fd5b5035919050565b6001600160a01b03811681146117e657600080fd5b6000602082840312156122d557600080fd5b8135611f28816122ae565b80151581146117e657600080fd5b80356122f9816122e0565b919050565b60008060008060e0858703121561231457600080fd5b843561231f816122ae565b935060a085018681111561233257600080fd5b60208601935035612342816122e0565b915060c0850135612352816122ae565b939692955090935050565b60008083601f84011261236f57600080fd5b5081356001600160401b0381111561238657600080fd5b60208301915083602082850101111561239e57600080fd5b9250929050565b600080600080604085870312156123bb57600080fd5b84356001600160401b03808211156123d257600080fd5b6123de8883890161235d565b909650945060208701359150808211156123f757600080fd5b506124048782880161235d565b95989497509550505050565b6000806040838503121561242357600080fd5b823561242e816122ae565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561247a5761247a61243c565b604052919050565b60006001600160401b0383111561249b5761249b61243c565b6124ae601f8401601f1916602001612452565b90508281528383830111156124c257600080fd5b828260208301376000602084830101529392505050565b600060208083850312156124ec57600080fd5b82356001600160401b038082111561250357600080fd5b818501915085601f83011261251757600080fd5b8135818111156125295761252961243c565b8060051b612538858201612452565b918252838101850191858101908984111561255257600080fd5b86860192505b838310156125a3578235858111156125705760008081fd5b8601603f81018b136125825760008081fd5b6125938b8983013560408401612482565b8352509186019190860190612558565b9998505050505050505050565b600080604083850312156125c357600080fd5b82356125ce816122ae565b915060208301356001600160401b038111156125e957600080fd5b83016101c081860312156125fc57600080fd5b809150509250929050565b60005b8381101561262257818101518382015260200161260a565b50506000910152565b60008151808452612643816020860160208601612607565b601f01601f19169290920160200192915050565b602081526000611f28602083018461262b565b634e487b7160e01b600052602160045260246000fd5b60208101600483106126a257634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115611f1057611f106126df565b6001600160a01b03858116825260e0820190608086602085013784151560a084015280841660c08401525095945050505050565b600181811c9082168061275057607f821691505b60208210810361277057634e487b7160e01b600052602260045260246000fd5b50919050565b600081546127838161273c565b8085526020600183811680156127a057600181146127ba576127e8565b60ff1985168884015283151560051b8801830195506127e8565b866000528260002060005b858110156127e05781548a82018601529083019084016127c5565b890184019650505b505050505092915050565b600060a0820160018060a01b0388168352602060a08185015281885480845260c08601915060c08160051b8701019350896000528260002060005b8281101561285b5787860360bf190184526128498683612776565b9550928401926001918201910161282e565b50505050508281036040840152612872818761262b565b6001600160e01b03198616606085015290508281036080840152612896818561262b565b98975050505050505050565b80356122f9816122ae565b60008060008060e085870312156128c357600080fd5b84356128ce816122ae565b93506020603f860187136128e157600080fd5b604051608081018181106001600160401b03821117156129035761290361243c565b6040528060a088018981111561291857600080fd5b8389015b81811015612933578035835291840191840161291c565b50829650612940816122ee565b95505050505061295260c086016128a2565b905092959194509250565b60008060006060848603121561297257600080fd5b83356001600160401b03808216821461298a57600080fd5b90935060208501359250604085013590808211156129a757600080fd5b508401601f810186136129b957600080fd5b6129c886823560208401612482565b9150509250925092565b8060005b60048110156118435781518452602093840193909101906001016129d6565b6001600160a01b038781168252610120820190612a1560208401896129d2565b86151560a084015280861660c0840152506001600160401b03841660e083015282610100830152979650505050505050565b600081835483915060008581526020808220825b84811015612ad757838254612a6f8161273c565b60018281168015612a875760018114612a9d57612ac4565b60ff1984168b5282151560051b8b019450612ac4565b868952878920895b84811015612abe5781548d820152908301908901612aa5565b8c019550505b5092985050509190910190600101612a5b565b5093979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612b0957612b09612ae4565b500690565b80820180821115611f1057611f106126df565b634e487b7160e01b600052603260045260246000fd5b600060018201612b4957612b496126df565b5060010190565b6000808335601e19843603018112612b6757600080fd5b8301803591506001600160401b03821115612b8157600080fd5b60200191503681900382131561239e57600080fd5b601f8211156111dc57600081815260208120601f850160051c81016020861015612bbd5750805b601f850160051c820191505b81811015612bdc57828155600101612bc9565b505050505050565b600019600383901b1c191660019190911b1790565b6001600160401b03831115612c1057612c1061243c565b612c2483612c1e835461273c565b83612b96565b6000601f841160018114612c525760008515612c405750838201355b612c4a8682612be4565b8455506108b3565b600083815260209020601f19861690835b82811015612c835786850135825560209485019460019092019101612c63565b5086821015612ca05760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60006101a060018060a01b038d16835260208c818501528b60408501528a606085015289608085015260a084018960005b6004811015612d0057815483529183019160019182019101612ce3565b50505050866101208401528561014084015280610160840152612d2581840186612776565b915050612d3e6101808301846001600160a01b03169052565b9b9a5050505050505050505050565b634e487b7160e01b600052600160045260246000fd5b6000816000190483118215151615612d7d57612d7d6126df565b500290565b600082612d9157612d91612ae4565b500490565b60e08101612da482876129d2565b8460808301528360a083015282151560c083015295945050505050565b600060208284031215612dd357600080fd5b8151611f28816122e0565b60008251612df0818460208701612607565b9190910192915050565b81516001600160401b03811115612e1357612e1361243c565b612e2781612e21845461273c565b84612b96565b602080601f831160018114612e565760008415612e445750858301515b612e4e8582612be4565b865550612bdc565b600085815260208120601f198616915b82811015612e8557888601518255948401946001909101908401612e66565b5085821015612ea35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122007181e150b30572360b68f664ee4758cc6eb37153a1a05f036ad00ebf7b692a264736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b05760003560e01c80637855d30c116100ef578063ac30777311610092578063ac307773146103a5578063b03a9a05146103ad578063b7a8807c146103b5578063bedf77a6146103be578063c66301b2146103d1578063cf084056146103da578063eb6ced16146103ed578063fc0c546a1461040d57600080fd5b80637855d30c14610323578063796676be146103435780637ac3c02f146103565780638831c8dc146103675780638da5cb5b1461037057806390ffbe901461038a5780639c81ff6b14610393578063a053ce1f1461039c57600080fd5b8063464eff5011610157578063464eff501461026857806353b476561461027b578063566a2cc2146102845780635fda04c7146102975780636c19e783146102d55780636cc895a9146102e8578063708c4561146102fb57806374b3eceb1461030e57600080fd5b80630e6137cf146101b557806319cc6492146101bf5780631e1b2573146101c75780632748608f146101ed57806327949dab1461022e578063310a1ee31461024e578063312ee7fa14610257578063372500ab14610260575b600080fd5b6101bd610420565b005b6101bd610550565b6101da6101d5366004612295565b6105c8565b6040519081526020015b60405180910390f35b6102166101fb3660046122c3565b6006602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e4565b6101da61023c3660046122c3565b60046020526000908152604090205481565b6101da600f5481565b6101da60075481565b6101bd6105df565b6101bd6102763660046122fe565b61067e565b6101da60115481565b6101bd6102923660046123a5565b6108ba565b6102c56102a5366004612410565b600c60209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016101e4565b6101bd6102e33660046122c3565b610b72565b6101bd6102f63660046124d9565b610c30565b6101bd6103093660046125b0565b610cc2565b6103166111e1565b6040516101e49190612657565b6001546103369062010000900460ff1681565b6040516101e49190612680565b610316610351366004612295565b61126f565b600b546001600160a01b0316610216565b6101da600a5481565b60015461021690630100000090046001600160a01b031681565b6101da60105481565b6101da60055481565b6101da60175481565b6101bd61129a565b6101bd6114a7565b6101da600e5481565b6101bd6103cc3660046122c3565b61153a565b6101da60125481565b600254610216906001600160a01b031681565b6101da6103fb3660046122c3565b60096020526000908152604090205481565b601854610216906001600160a01b031681565b6002546001546001600160a01b039182169163010000009091041661053c57600161044a81611753565b6002600054036104755760405162461bcd60e51b815260040161046c906126a8565b60405180910390fd5b60026000908155600554600a5461048c91906126f5565b90506010548110156104c057601054600a546040516359dc328760e01b81526004810192909252602482015260440161046c565b6001805462ff00001916620200001790556002546018546104f0916001600160a01b0391821691309116846117e9565b6002546040518281526001600160a01b03909116907f26dc6b7e309de29eb24d6830d1cc0f60c6b5d25d5d4830ce8ba77eb55468f0dc9060200160405180910390a25050600160005550565b61054581611849565b600161044a81611753565b6002546001546001600160a01b03918216916301000000909104166105b457600161057a81611753565b60026000540361059c5760405162461bcd60e51b815260040161046c906126a8565b50506001805462ff0000191662030000178155600055565b6105bd81611849565b600161057a81611753565b601381600481106105d857600080fd5b0154905081565b6002600054036106015760405162461bcd60e51b815260040161046c906126a8565b6002600081905561061181611753565b33600081815260046020526040812080549190556018549091610640916001600160a01b0316903090846117e9565b60405181815233907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe9060200160405180910390a250506001600055565b600154630100000090046001600160a01b0316806107e05760016106a181611753565b6106a9611898565b6002600054036106cb5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b03161561077f5730600d63f679fbb160e01b888888886040516024016107039493929190612708565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091632b35166160e11b91610754918c918c918c918c9101612708565b60408051601f1981840301815290829052630556f18360e41b825261046c95949392916004016127f3565b600154630100000090046001600160a01b031661079f5761079f86611849565b6107d5868660048060200260405190810160405280929190826004602002808284376000920191909152508891508790506118f8565b5060016000556108b3565b6107e981611849565b60016107f481611753565b6107fc611898565b60026000540361081e5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b0316156108565730600d63f679fbb160e01b888888886040516024016107039493929190612708565b600154630100000090046001600160a01b03166108765761087686611849565b6108ac868660048060200260405190810160405280929190826004602002808284376000920191909152508891508790506118f8565b5060016000555b5050505050565b600154630100000090046001600160a01b031680610a1d5760016108dd81611753565b6108e5611898565b6002600054036109075760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b031661092157600080fd5b6000808080610932878901896128ad565b60015493975091955093509150630100000090046001600160a01b031661095c5761095c84611849565b6000808061096c8c8e018e61295d565b925092509250600087878787878760405160200161098f969594939291906129f5565b60408051601f198184030181529190528051602090910120600b549091506109c49082906001600160a01b0316868686611cbc565b6109cd57600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610a09888888886118f8565b50506001600055506108b395505050505050565b610a2681611849565b6001610a3181611753565b610a39611898565b600260005403610a5b5760405162461bcd60e51b815260040161046c906126a8565b6002600055600b546001600160a01b0316610a7557600080fd5b6000808080610a86878901896128ad565b60015493975091955093509150630100000090046001600160a01b0316610ab057610ab084611849565b60008080610ac08c8e018e61295d565b9250925092506000878787878787604051602001610ae3969594939291906129f5565b60408051601f198184030181529190528051602090910120600b54909150610b189082906001600160a01b0316868686611cbc565b610b2157600080fd5b600b546001600160a01b03166000908152600c602090815260408083208684529091529020805460ff19166001179055610b5d888888886118f8565b50506001600055505050505050505050505050565b6002546001546001600160a01b0391821691630100000090910416610bdc57600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b610be581611849565b600b80546001600160a01b0319166001600160a01b0384169081179091556040517f5719a5656c5cfdaafa148ecf366fd3b0a7fae06449ce2a46225977fb7417e29d90600090a25050565b6002546001546001600160a01b0391821691630100000090910416610ca6578151610c6290600d906020850190612199565b50600d604051610c729190612a47565b604051908190038120907f39865a40d618adb128517d1adfed42d8a2ba08c9766461764840e68a6bf59e0390600090a25050565b610caf81611849565b8151610c6290600d906020850190612199565b600154610100900460ff1615808015610cdf57506001805460ff16105b80610cf85750303b158015610cf857506001805460ff16145b610d5b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161046c565b6001805460ff1916811790558015610d7d576001805461ff0019166101001790555b6000610d8881611753565b600180546301000000600160b81b03191663010000006001600160a01b038716021790556000610dc06101a0850161018086016122c3565b6001600160a01b031603610de75760405163dc2e5e8d60e01b815260040160405180910390fd5b6000610df660208501856122c3565b6001600160a01b031603610e1d5760405163063d924960e51b815260040160405180910390fd5b82608001358361016001351115610e5857604051631e5c82a560e01b815261016084013560048201526080840135602482015260440161046c565b610e686002610140850135612afa565b15610e86576040516384d68d9d60e01b815260040160405180910390fd5b610e96610e106040850135612b0e565b83606001351015610eba5760405163079237dd60e31b815260040160405180910390fd5b8260a00135600003610edf5760405163a4c54a6360e01b815260040160405180910390fd5b8260800135600003610f0457604051637a61fdf760e01b815260040160405180910390fd5b8260a0013583608001351115610f2c576040516285e6db60e21b815260040160405180910390fd5b60005b6004811015610fbc578360c0018160048110610f4d57610f4d612b21565b602002013515610fbc57620f42408460c0018260048110610f7057610f70612b21565b60200201351015610f9457604051636dddf41160e11b815260040160405180910390fd5b60128054906000610fa483612b37565b91905055508080610fb490612b37565b915050610f2f565b50601254600003610fe05760405163b0e7ef7b60e01b815260040160405180910390fd5b6032836101400135111561101557604051639088a55b60e01b815261014084013560048201526032602482015260440161046c565b61102260208401846122c3565b600280546001600160a01b0319166001600160a01b039290921691909117905561105260408401602085016122c3565b600b80546001600160a01b0319166001600160a01b03929092169190911790556040830135600e556060830135600f55608083013560105560a08301356011556110a2601360c0850160046121ef565b506101408301356017556101608301356007556110c76101a0840161018085016122c3565b601880546001600160a01b0319166001600160a01b03929092169190911790556110f56101a0840184612b50565b601991611103919083612bf9565b5060018054819062ff0000191662010000820217905550600154601854600e54600f54601054601154601754600754600b546040516001600160a01b036301000000909a048a16997ff4d539cc7b1ecf0d043f59901b71b7b44a25563b872c28e85fe3cb72126dcb239961118e99908216989097909690959094601394919390926019921690612cb2565b60405180910390a25080156111dc576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b601980546111ee9061273c565b80601f016020809104026020016040519081016040528092919081815260200182805461121a9061273c565b80156112675780601f1061123c57610100808354040283529160200191611267565b820191906000526020600020905b81548152906001019060200180831161124a57829003601f168201915b505050505081565b600d818154811061127f57600080fd5b9060005260206000200160009150905080546111ee9061273c565b6002600054036112bc5760405162461bcd60e51b815260040161046c906126a8565b6002600055600e544210156112f157600e546040516340968aa760e11b8152426004820152602481019190915260440161046c565b600060015462010000900460ff1660038111156113105761131061266a565b0361133b57600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b600260015462010000900460ff16600381111561135a5761135a61266a565b0361138557600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b600f54421180156113a65750601054600554600a546113a491906126f5565b105b156113bd576001805462ff00001916620300001790555b600360015462010000900460ff1660038111156113dc576113dc61266a565b146113fa57604051639b61206360e01b815260040160405180910390fd5b336000908152600360209081526040808320805490849055600983528184208490556006909252822080546001600160a01b03191690559081900361145257604051631e9acf1760e31b815260040160405180910390fd5b60185461146a906001600160a01b03163033846117e9565b60405181815233907fa65a8b4f7f65a1063243d7f7e9e4da00ff767599acf21549ef2548a45d1695ae9060200160405180910390a2506001600055565b600060015462010000900460ff1660038111156114c6576114c661266a565b1461153857610e10600e546114db9190612b0e565b600f5410156114ec576114ec612d4d565b6000601154116114fe576114fe612d4d565b601154601054111561151257611512612d4d565b6032601754111561152557611525612d4d565b600a546005541061153857611538612d4d565b565b600154630100000090046001600160a01b03168061174357600161155d81611753565b611565611898565b6002600054036115875760405162461bcd60e51b815260040161046c906126a8565b6002600055600154630100000090046001600160a01b03166115ac576115ac83611849565b6001600160a01b03808416600090815260036020908152604080832054600683528184205460098452828520549516808552600490935290832080549194929390916115f99084906126f5565b90915550506001600160a01b0385166000908152600460205260409020541561163557604051636939b91360e11b815260040160405180910390fd5b6001600160a01b038516600090815260036020526040812054600a8054919290916116619084906126f5565b90915550506001600160a01b03851660009081526009602052604081205460058054919290916116929084906126f5565b90915550506001600160a01b038086166000908152600360209081526040808320839055600982528083208390556006825280832080546001600160a01b031916905560089091529020805460ff191690556018546116f491163087856117e9565b846001600160a01b03167faf65ecdc8a0d3ea90c8344c89e7001864fddf59dfdf41da2994463fe99049a598360405161172f91815260200190565b60405180910390a250506001600055505050565b61174c81611849565b600161155d815b8060038111156117655761176561266a565b60015462010000900460ff1660038111156117825761178261266a565b146117ad57600154604051630c987e3f60e31b815261046c9162010000900460ff1690600401612680565b8060038111156117bf576117bf61266a565b60015462010000900460ff1660038111156117dc576117dc61266a565b146117e657600080fd5b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611843908590611df2565b50505050565b336001600160a01b03821614611883576040516350a5f40560e01b81523360048201526001600160a01b038216602482015260440161046c565b336001600160a01b038216146117e657600080fd5b600e544210156118c857600e546040516340968aa760e11b8152426004820152602481019190915260440161046c565b600f5442111561153857600f5460405163b73065c160e01b8152426004820152602481019190915260440161046c565b6001600160a01b0384166000908152600860209081526040808320805460ff19168615151790556003909152902054156119455760405163f45d43bf60e01b815260040160405180910390fd5b6000805b601254811015611a015760c885826004811061196757611967612b21565b602002015111156119ad5784816004811061198457611984612b21565b6020020151604051633f25723360e01b8152600481019190915260c8602482015260440161046c565b8481600481106119bf576119bf612b21565b6020020151601382600481106119d7576119d7612b21565b01546119e39190612d63565b6119ed9083612b0e565b9150806119f981612b37565b915050611949565b50620f4240811015611a26576040516387af7e9360e01b815260040160405180910390fd5b828015611a34575060075481105b15611a6057600754604051633319c7cb60e11b815261046c918391600401918252602082015260400190565b60006001600160a01b03831615801590611a7c57506000601754115b15611af6576001600160a01b0383166000908152600360205260408120549003611ab9576040516355fbf60160e01b815260040160405180910390fd5b6001600160a01b03831660009081526008602052604090205460ff16611af2576040516335d001bd60e21b815260040160405180910390fd5b5060015b60008115611bd7576002606460175485611b109190612d63565b611b1a9190612d82565b611b249190612d82565b9050611b3081846126f5565b6001600160a01b038816600090815260096020526040812080549295508392909190611b5d908490612b0e565b90915550506001600160a01b03841660009081526004602052604081208054839290611b8a908490612b0e565b925050819055508060056000828254611ba39190612b0e565b90915550506001600160a01b03878116600090815260066020526040902080546001600160a01b0319169186169190911790555b6001600160a01b0387166000908152600360205260408120849055600a8054859290611c04908490612b0e565b9091555050601154600554600a54611c1c91906126f5565b1115611c4a57600a54601154604051632b67412f60e21b81526004810192909252602482015260440161046c565b601854611c62906001600160a01b03168830866117e9565b836001600160a01b0316876001600160a01b03167f6d47cedf2ff836145796116ccd8b27cb538f16621a1f844f0d1c2a58e23a499a8886858a604051611cab9493929190612d96565b60405180910390a350505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018690526000908190611d1e908490605c0160405160208183030381529060405280519060200120611ec490919063ffffffff16565b9050856001600160a01b0316816001600160a01b031614611d5257604051638baa579f60e01b815260040160405180910390fd5b42856001600160401b031611611d8e5760405163034d689d60e51b81526001600160401b0342811660048301528616602482015260440161046c565b6001600160a01b0386166000908152600c6020908152604080832087845290915290205460ff1615611de55760405163433a6e1f60e11b81526001600160a01b03871660048201526024810185905260440161046c565b5060019695505050505050565b6000611e47826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611f169092919063ffffffff16565b8051909150156111dc5780806020019051810190611e659190612dc1565b6111dc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161046c565b60008151604103611ef75760208201516040830151606084015160001a611eed86828585611f2f565b9350505050611f10565b604051638baa579f60e01b815260040160405180910390fd5b92915050565b6060611f25848460008561202f565b90505b9392505050565b60006fa2a8918ca85bafe22016d0b997e4df60600160ff1b03821115611f6857604051638baa579f60e01b815260040160405180910390fd5b8360ff16601b14158015611f8057508360ff16601c14155b15611f9e57604051638baa579f60e01b815260040160405180910390fd5b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611ff2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661202657604051638baa579f60e01b815260040160405180910390fd5b95945050505050565b6060824710156120905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161046c565b6001600160a01b0385163b6120e75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161046c565b600080866001600160a01b031685876040516121039190612dde565b60006040518083038185875af1925050503d8060008114612140576040519150601f19603f3d011682016040523d82523d6000602084013e612145565b606091505b5091509150612155828286612160565b979650505050505050565b6060831561216f575081611f28565b82511561217f5782518084602001fd5b8160405162461bcd60e51b815260040161046c9190612657565b8280548282559060005260206000209081019282156121df579160200282015b828111156121df57825182906121cf9082612dfa565b50916020019190600101906121b9565b506121eb929150612229565b5090565b826004810192821561221d579160200282015b8281111561221d578235825591602001919060010190612202565b506121eb929150612246565b808211156121eb57600061223d828261225b565b50600101612229565b5b808211156121eb5760008155600101612247565b5080546122679061273c565b6000825580601f10612277575050565b601f0160209004906000526020600020908101906117e69190612246565b6000602082840312156122a757600080fd5b5035919050565b6001600160a01b03811681146117e657600080fd5b6000602082840312156122d557600080fd5b8135611f28816122ae565b80151581146117e657600080fd5b80356122f9816122e0565b919050565b60008060008060e0858703121561231457600080fd5b843561231f816122ae565b935060a085018681111561233257600080fd5b60208601935035612342816122e0565b915060c0850135612352816122ae565b939692955090935050565b60008083601f84011261236f57600080fd5b5081356001600160401b0381111561238657600080fd5b60208301915083602082850101111561239e57600080fd5b9250929050565b600080600080604085870312156123bb57600080fd5b84356001600160401b03808211156123d257600080fd5b6123de8883890161235d565b909650945060208701359150808211156123f757600080fd5b506124048782880161235d565b95989497509550505050565b6000806040838503121561242357600080fd5b823561242e816122ae565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561247a5761247a61243c565b604052919050565b60006001600160401b0383111561249b5761249b61243c565b6124ae601f8401601f1916602001612452565b90508281528383830111156124c257600080fd5b828260208301376000602084830101529392505050565b600060208083850312156124ec57600080fd5b82356001600160401b038082111561250357600080fd5b818501915085601f83011261251757600080fd5b8135818111156125295761252961243c565b8060051b612538858201612452565b918252838101850191858101908984111561255257600080fd5b86860192505b838310156125a3578235858111156125705760008081fd5b8601603f81018b136125825760008081fd5b6125938b8983013560408401612482565b8352509186019190860190612558565b9998505050505050505050565b600080604083850312156125c357600080fd5b82356125ce816122ae565b915060208301356001600160401b038111156125e957600080fd5b83016101c081860312156125fc57600080fd5b809150509250929050565b60005b8381101561262257818101518382015260200161260a565b50506000910152565b60008151808452612643816020860160208601612607565b601f01601f19169290920160200192915050565b602081526000611f28602083018461262b565b634e487b7160e01b600052602160045260246000fd5b60208101600483106126a257634e487b7160e01b600052602160045260246000fd5b91905290565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115611f1057611f106126df565b6001600160a01b03858116825260e0820190608086602085013784151560a084015280841660c08401525095945050505050565b600181811c9082168061275057607f821691505b60208210810361277057634e487b7160e01b600052602260045260246000fd5b50919050565b600081546127838161273c565b8085526020600183811680156127a057600181146127ba576127e8565b60ff1985168884015283151560051b8801830195506127e8565b866000528260002060005b858110156127e05781548a82018601529083019084016127c5565b890184019650505b505050505092915050565b600060a0820160018060a01b0388168352602060a08185015281885480845260c08601915060c08160051b8701019350896000528260002060005b8281101561285b5787860360bf190184526128498683612776565b9550928401926001918201910161282e565b50505050508281036040840152612872818761262b565b6001600160e01b03198616606085015290508281036080840152612896818561262b565b98975050505050505050565b80356122f9816122ae565b60008060008060e085870312156128c357600080fd5b84356128ce816122ae565b93506020603f860187136128e157600080fd5b604051608081018181106001600160401b03821117156129035761290361243c565b6040528060a088018981111561291857600080fd5b8389015b81811015612933578035835291840191840161291c565b50829650612940816122ee565b95505050505061295260c086016128a2565b905092959194509250565b60008060006060848603121561297257600080fd5b83356001600160401b03808216821461298a57600080fd5b90935060208501359250604085013590808211156129a757600080fd5b508401601f810186136129b957600080fd5b6129c886823560208401612482565b9150509250925092565b8060005b60048110156118435781518452602093840193909101906001016129d6565b6001600160a01b038781168252610120820190612a1560208401896129d2565b86151560a084015280861660c0840152506001600160401b03841660e083015282610100830152979650505050505050565b600081835483915060008581526020808220825b84811015612ad757838254612a6f8161273c565b60018281168015612a875760018114612a9d57612ac4565b60ff1984168b5282151560051b8b019450612ac4565b868952878920895b84811015612abe5781548d820152908301908901612aa5565b8c019550505b5092985050509190910190600101612a5b565b5093979650505050505050565b634e487b7160e01b600052601260045260246000fd5b600082612b0957612b09612ae4565b500690565b80820180821115611f1057611f106126df565b634e487b7160e01b600052603260045260246000fd5b600060018201612b4957612b496126df565b5060010190565b6000808335601e19843603018112612b6757600080fd5b8301803591506001600160401b03821115612b8157600080fd5b60200191503681900382131561239e57600080fd5b601f8211156111dc57600081815260208120601f850160051c81016020861015612bbd5750805b601f850160051c820191505b81811015612bdc57828155600101612bc9565b505050505050565b600019600383901b1c191660019190911b1790565b6001600160401b03831115612c1057612c1061243c565b612c2483612c1e835461273c565b83612b96565b6000601f841160018114612c525760008515612c405750838201355b612c4a8682612be4565b8455506108b3565b600083815260209020601f19861690835b82811015612c835786850135825560209485019460019092019101612c63565b5086821015612ca05760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60006101a060018060a01b038d16835260208c818501528b60408501528a606085015289608085015260a084018960005b6004811015612d0057815483529183019160019182019101612ce3565b50505050866101208401528561014084015280610160840152612d2581840186612776565b915050612d3e6101808301846001600160a01b03169052565b9b9a5050505050505050505050565b634e487b7160e01b600052600160045260246000fd5b6000816000190483118215151615612d7d57612d7d6126df565b500290565b600082612d9157612d91612ae4565b500490565b60e08101612da482876129d2565b8460808301528360a083015282151560c083015295945050505050565b600060208284031215612dd357600080fd5b8151611f28816122e0565b60008251612df0818460208701612607565b9190910192915050565b81516001600160401b03811115612e1357612e1361243c565b612e2781612e21845461273c565b84612b96565b602080601f831160018114612e565760008415612e445750858301515b612e4e8582612be4565b865550612bdc565b600085815260208120601f198616915b82811015612e8557888601518255948401946001909101908401612e66565b5085821015612ea35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122007181e150b30572360b68f664ee4758cc6eb37153a1a05f036ad00ebf7b692a264736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "initialize(address,(address,address,uint256,uint256,uint256,uint256,uint256[4],uint256,uint256,address,string))": {
        "details": "Initializes a Crowdtainer.",
        "params": {
          "_campaignData": "Data defining all rules and values of this Crowdtainer instance."
        }
      }
    },
    "title": "Crowdtainer contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "abortProject()": {
        "notice": "Function used by project deployer to signal that it is no longer possible to the ship service or product.         This puts the project into `Failed` state and participants can withdraw their funds."
      },
      "claimFunds()": {
        "notice": "Function used by participants to withdrawl funds from a failed/expired project."
      },
      "claimRewards()": {
        "notice": "Function used by participants to withdrawl referral rewards from a successful project."
      },
      "getPaidAndDeliver()": {
        "notice": "Function used by project deployer to signal commitment to ship service or product by withdrawing/receiving the payment."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 244,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 89,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_initialized",
        "offset": 0,
        "slot": "1",
        "type": "t_uint8"
      },
      {
        "astId": 92,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "_initializing",
        "offset": 1,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 2990,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "crowdtainerState",
        "offset": 2,
        "slot": "1",
        "type": "t_enum(CrowdtainerState)5968"
      },
      {
        "astId": 2992,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "owner",
        "offset": 3,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2994,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "shippingAgent",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2998,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "costForWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3002,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "accumulatedRewardsOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3004,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "accumulatedRewards",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3008,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referrerOfReferee",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 3010,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referralEligibilityValue",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3014,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "enableReferral",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 3018,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "discountForUser",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3020,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "totalValueRaised",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 3022,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "signer",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 3028,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "usedNonces",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_mapping(t_bytes32,t_bool))"
      },
      {
        "astId": 3031,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "urls",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 3198,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "openingTime",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 3200,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "expireTime",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 3202,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "targetMinimum",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 3204,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "targetMaximum",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 3206,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "numberOfProducts",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 3210,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "unitPricePerType",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)4_storage"
      },
      {
        "astId": 3212,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "referralRate",
        "offset": 0,
        "slot": "23",
        "type": "t_uint256"
      },
      {
        "astId": 3215,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "token",
        "offset": 0,
        "slot": "24",
        "type": "t_contract(IERC20)351"
      },
      {
        "astId": 3217,
        "contract": "src/contracts/Crowdtainer.sol:Crowdtainer",
        "label": "legalContractURI",
        "offset": 0,
        "slot": "25",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)4_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[4]",
        "numberOfBytes": "128"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)351": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(CrowdtainerState)5968": {
        "encoding": "inplace",
        "label": "enum CrowdtainerState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}